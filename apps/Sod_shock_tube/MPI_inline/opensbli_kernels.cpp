//
// auto-generated by ops.py
//

#include "./MPI_inline/opensbli_common.h"


void ops_init_backend() {}

void ops_decl_const_char2(int dim, char const *type,
int size, char *dat, char const *name){
  if (!strcmp(name,"block0np0")) {
    block0np0 = *(int*)dat;
  }
  else
  if (!strcmp(name,"Delta0block0")) {
    Delta0block0 = *(double*)dat;
  }
  else
  if (!strcmp(name,"eps")) {
    eps = *(double*)dat;
  }
  else
  if (!strcmp(name,"TENO_CT")) {
    TENO_CT = *(double*)dat;
  }
  else
  if (!strcmp(name,"niter")) {
    niter = *(int*)dat;
  }
  else
  if (!strcmp(name,"dt")) {
    dt = *(double*)dat;
  }
  else
  if (!strcmp(name,"gama")) {
    gama = *(double*)dat;
  }
  else
  if (!strcmp(name,"gamma_m1")) {
    gamma_m1 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rc0")) {
    rc0 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rc1")) {
    rc1 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rc2")) {
    rc2 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rc3")) {
    rc3 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rc4")) {
    rc4 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rc5")) {
    rc5 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rc6")) {
    rc6 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rc7")) {
    rc7 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rc8")) {
    rc8 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rc9")) {
    rc9 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rc10")) {
    rc10 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rc11")) {
    rc11 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rcinv12")) {
    rcinv12 = *(double*)dat;
  }
  else
  if (!strcmp(name,"rcinv13")) {
    rcinv13 = *(double*)dat;
  }
  else
  {
    throw OPSException(OPS_RUNTIME_ERROR, "error: unknown const name");
  }
}

//user kernel files
#include "opensbliblock00Kernel010_mpiinline_kernel.cpp"
#include "opensbliblock00Kernel008_mpiinline_kernel.cpp"
#include "opensbliblock00Kernel009_mpiinline_kernel.cpp"
#include "opensbliblock00Kernel003_mpiinline_kernel.cpp"
#include "opensbliblock00Kernel004_mpiinline_kernel.cpp"
#include "opensbliblock00Kernel002_mpiinline_kernel.cpp"
#include "opensbliblock00Kernel000_mpiinline_kernel.cpp"
#include "opensbliblock00Kernel006_mpiinline_kernel.cpp"
#include "opensbliblock00Kernel011_mpiinline_kernel.cpp"
