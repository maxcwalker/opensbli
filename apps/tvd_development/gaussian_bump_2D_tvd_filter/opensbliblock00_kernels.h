#ifndef OPENSBLIBLOCK00_KERNEL_H
#define OPENSBLIBLOCK00_KERNEL_H
 void opensbliblock00Kernel027(ACC<double> &rhoE_B0, ACC<double> &rho_B0, ACC<double> &rhou0_B0, ACC<double> &rhou1_B0,
ACC<double> &x0_B0, ACC<double> &x1_B0, const int *idx)
{
   double T = 0.0;
   double rho = 0.0;
   double rhou0 = 0.0;
   double rhou1 = 0.0;
   x0_B0(0,0) = Delta0block0*idx[0];

    x1_B0(0,0) = ((1.0/20.0))*H*exp(-((-(1.0/2.0)*L + Delta0block0*idx[0])*(-(1.0/2.0)*L + Delta0block0*idx[0]))*inv2a)
      + (-(1.0/20.0)*H*exp(-((-(1.0/2.0)*L + Delta0block0*idx[0])*(-(1.0/2.0)*L + Delta0block0*idx[0]))*inv2a) +
      H)*sinh(b*invH*Delta1block0*idx[1])/sinh(b);

    rhou0 = ((x1_B0(0,0) < 4.97849784978498) ? (
   -7.41941930010003e-7 +
      0.0702998718847976*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) + 7.18167765690484e-18*pow(x1_B0(0,0),
      30) + 6.52081582647558e-29*pow(x1_B0(0,0), 46) + 9.38028223360571e-27*pow(x1_B0(0,0), 42) +
      0.000194792573175358*pow(x1_B0(0,0), 12) + 1.12043698196112e-31*pow(x1_B0(0,0), 50) +
      7.68686957191781e-24*pow(x1_B0(0,0), 39) + 5.32451447484593e-13*pow(x1_B0(0,0), 24) +
      1.29633439125235e-19*pow(x1_B0(0,0), 33) + 4.74254918141768e-18*pow(x1_B0(0,0), 31) +
      2.6287187207503e-30*pow(x1_B0(0,0), 48) + 3.83534437634266e-13*pow(x1_B0(0,0), 22) +
      3.82234258854463e-25*pow(x1_B0(0,0), 41) + 0.0302099908066949*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) +
      1.54982672776573e-5*pow(x1_B0(0,0), 13) + 0.540592214726103*x1_B0(0,0) + 2.21684737623679e-12*pow(x1_B0(0,0), 23)
      + 1.07878131234318e-18*pow(x1_B0(0,0), 32) + 7.53766051751155e-8*pow(x1_B0(0,0), 16) +
      3.39940142735353e-29*pow(x1_B0(0,0), 47) + 2.42157434344217e-24*pow(x1_B0(0,0), 40) +
      0.0264087629763092*pow(x1_B0(0,0), 9) + 0.10715974820739*pow(x1_B0(0,0), 7) + 6.69960518963089e-9*pow(x1_B0(0,0),
      18) + 5.41899161304538e-8*pow(x1_B0(0,0), 17) + 5.39531970041199e-14*pow(x1_B0(0,0), 25) -
      5.84855380280961e-11*pow(x1_B0(0,0), 21) - 1.64621110441516e-30*pow(x1_B0(0,0), 49) -
      3.69222876245266e-21*pow(x1_B0(0,0), 34) - 0.0683341460031057*pow(x1_B0(0,0), 8) -
      1.1809687959798e-6*pow(x1_B0(0,0), 15) - 6.73297537496869e-10*pow(x1_B0(0,0), 19) -
      0.000362812486830577*pow(x1_B0(0,0), 11) - 5.53370487266404e-15*pow(x1_B0(0,0), 26) -
      6.03589416513345e-21*pow(x1_B0(0,0), 35) - 0.000950998267615592*(x1_B0(0,0)*x1_B0(0,0)) -
      3.46122952259431e-15*pow(x1_B0(0,0), 27) - 1.30849735600479e-26*pow(x1_B0(0,0), 43) -
      4.38641486699734e-28*pow(x1_B0(0,0), 45) - 2.34822390858796e-22*pow(x1_B0(0,0), 37) -
      0.00454250288677354*pow(x1_B0(0,0), 10) - 3.88827993364993e-27*pow(x1_B0(0,0), 44) -
      7.23772441009599e-17*pow(x1_B0(0,0), 29) - 5.3237745663231e-24*pow(x1_B0(0,0), 38) -
      3.79937207806794e-10*pow(x1_B0(0,0), 20) - 0.0512693405586304*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) -
      6.26881111654665e-6*pow(x1_B0(0,0), 14) - 7.31743676994503e-16*pow(x1_B0(0,0), 28) -
      0.109003949350348*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) -
      1.61178324671602e-21*pow(x1_B0(0,0), 36)
)
: (
   0.999999842649273
));

    rhou1 = ((x1_B0(0,0) < 4.97849784978498) ? (
   -3.94658323897361e-9 + 5.79993249696948e-22*pow(x1_B0(0,0), 33) +
      2.44055988685779e-33*pow(x1_B0(0,0), 48) + 0.000573202174246203*(x1_B0(0,0)*x1_B0(0,0)) +
      7.79946640271148e-17*pow(x1_B0(0,0), 26) + 3.27563339969449e-5*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) +
      7.61209051437519e-30*pow(x1_B0(0,0), 41) + 0.00035693337650302*pow(x1_B0(0,0), 7) +
      1.22962435183981e-32*pow(x1_B0(0,0), 49) + 6.1414093137816e-5*pow(x1_B0(0,0), 9) +
      3.49814319225234e-24*pow(x1_B0(0,0), 36) + 6.23335129292759e-14*pow(x1_B0(0,0), 20) +
      8.70881890213734e-18*pow(x1_B0(0,0), 27) + 5.48056979026477e-12*pow(x1_B0(0,0), 19) +
      1.0172618086783e-7*pow(x1_B0(0,0), 13) + 2.06327508183138e-7*pow(x1_B0(0,0), 12) +
      2.97281470391138e-11*pow(x1_B0(0,0), 17) + 4.65221363803475e-16*pow(x1_B0(0,0), 24) +
      3.09277299287709e-11*pow(x1_B0(0,0), 18) + 2.75186147372725e-7*x1_B0(0,0) + 1.18177573978108e-28*pow(x1_B0(0,0),
      43) + 1.71253750482416e-29*pow(x1_B0(0,0), 44) + 3.71166058814094e-23*pow(x1_B0(0,0), 35) +
      1.38514045567658e-9*pow(x1_B0(0,0), 14) + 3.44944221330867e-16*pow(x1_B0(0,0), 25) +
      1.96555809013582e-22*pow(x1_B0(0,0), 34) + 3.97089169302056e-28*pow(x1_B0(0,0), 42) +
      0.000242959875455792*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) -
      8.7519120641995e-5*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) -
      0.00039793643924863*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) -
      9.10594958621823e-31*pow(x1_B0(0,0), 46) - 4.43445911548498e-31*pow(x1_B0(0,0), 45) -
      4.97371458460559e-19*pow(x1_B0(0,0), 29) - 6.52066335608322e-10*pow(x1_B0(0,0), 16) -
      4.73305244459534e-22*pow(x1_B0(0,0), 32) - 2.25277482016107e-6*pow(x1_B0(0,0), 11) -
      2.76516592761355e-25*pow(x1_B0(0,0), 38) - 1.09002475409158e-33*pow(x1_B0(0,0), 50) -
      1.95075399259013e-13*pow(x1_B0(0,0), 21) - 1.26323734030157e-19*pow(x1_B0(0,0), 30) -
      6.76099331722506e-26*pow(x1_B0(0,0), 39) - 9.27905572763142e-27*pow(x1_B0(0,0), 40) -
      5.6461702353762e-15*pow(x1_B0(0,0), 23) - 0.000200823312226594*pow(x1_B0(0,0), 8) -
      3.80954768741463e-9*pow(x1_B0(0,0), 15) - 4.30246755563792e-25*pow(x1_B0(0,0), 37) -
      2.06347337828471e-31*pow(x1_B0(0,0), 47) - 4.28649333122532e-6*pow(x1_B0(0,0), 10) -
      5.33437215459437e-19*pow(x1_B0(0,0), 28) - 1.81626753556445e-20*pow(x1_B0(0,0), 31) -
      5.09795433916973e-14*pow(x1_B0(0,0), 22)
)
: (
   0.00213785003134369
));

    T = ((x1_B0(0,0) < 4.97849784978498) ? (
   1.12242490053894 + 1.29225326274941e-6*pow(x1_B0(0,0), 14) +
      2.17236497430641e-10*pow(x1_B0(0,0), 19) + 4.50574577850846e-27*pow(x1_B0(0,0), 43) +
      0.00282180425964036*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) + 3.76222555066597e-22*pow(x1_B0(0,0), 36) +
      6.65955133301817e-18*pow(x1_B0(0,0), 29) + 2.30617021068535e-15*pow(x1_B0(0,0), 26) +
      7.70280267944956e-11*pow(x1_B0(0,0), 20) + 1.81259903145525e-7*pow(x1_B0(0,0), 15) +
      8.00223672728653e-29*pow(x1_B0(0,0), 45) + 1.78962073305769e-21*pow(x1_B0(0,0), 35) +
      3.84549142547866e-21*pow(x1_B0(0,0), 34) + 8.75350019822885e-12*pow(x1_B0(0,0), 21) +
      3.67249635900726e-5*pow(x1_B0(0,0), 11) + 1.37496671799892e-16*pow(x1_B0(0,0), 28) +
      0.0100831916259726*pow(x1_B0(0,0), 8) + 1.04933317018195e-27*pow(x1_B0(0,0), 44) +
      5.26950183241014e-31*pow(x1_B0(0,0), 49) + 4.52450181023001e-27*pow(x1_B0(0,0), 42) +
      3.98437538886845e-23*pow(x1_B0(0,0), 37) + 0.000861772081218678*pow(x1_B0(0,0), 10) +
      0.0141132088196808*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) +
      8.24657623407878e-16*pow(x1_B0(0,0), 27) - 5.46428805163207e-15*pow(x1_B0(0,0), 25) -
      9.91575579450583e-14*pow(x1_B0(0,0), 24) - 3.65124043284557e-5*pow(x1_B0(0,0), 12) -
      3.99968686240556e-32*pow(x1_B0(0,0), 50) - 8.82398202472746e-10*pow(x1_B0(0,0), 18) -
      2.77000372137195e-29*pow(x1_B0(0,0), 46) - 0.00429820278269872*pow(x1_B0(0,0), 9) -
      6.30264766496525e-25*pow(x1_B0(0,0), 40) -
      0.00610131439972079*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) -
      1.01009022778586e-29*pow(x1_B0(0,0), 47) - 0.0147954603501481*pow(x1_B0(0,0), 7) -
      3.35808971801242e-24*pow(x1_B0(0,0), 38) - 2.22154338536034e-19*pow(x1_B0(0,0), 32) -
      5.28761809585516e-13*pow(x1_B0(0,0), 23) - 0.0381899592598816*(x1_B0(0,0)*x1_B0(0,0)) -
      4.82860723859879e-31*pow(x1_B0(0,0), 48) - 1.66401488627162e-20*pow(x1_B0(0,0), 33) -
      1.04572024952381e-8*pow(x1_B0(0,0), 17) - 1.22913435598771e-18*pow(x1_B0(0,0), 31) -
      7.58714724276801e-26*pow(x1_B0(0,0), 41) - 5.9274338700261e-6*x1_B0(0,0) - 2.61056060757001e-24*pow(x1_B0(0,0),
      39) - 1.57177066782746e-6*pow(x1_B0(0,0), 13) - 2.49747678457236e-8*pow(x1_B0(0,0), 16) -
      0.000832123825797214*(x1_B0(0,0)*x1_B0(0,0)*x1_B0(0,0)) - 8.4993374244129e-13*pow(x1_B0(0,0), 22) -
      3.4063316158351e-18*pow(x1_B0(0,0), 30)
)
: (
   1.00000015154315
));

   rho = 1.0/T;

   rho_B0(0,0) = rho;

   rhou0_B0(0,0) = rhou0;

   rhou1_B0(0,0) = rhou1;

   rhoE_B0(0,0) = (0.5*(rhou0*rhou0) + 0.5*(rhou1*rhou1))/rho + invgama*inv2Minf*inv_gamma_m1*T*rho;

}

 void opensbliblock00Kernel030(const ACC<double> &x0_B0, const ACC<double> &x1_B0, ACC<double> &D00_B0, ACC<double>
&D01_B0, ACC<double> &D10_B0, ACC<double> &D11_B0, ACC<double> &detJ_B0, ACC<double> &wk0_B0, ACC<double> &wk1_B0,
ACC<double> &wk2_B0, ACC<double> &wk3_B0, const int *idx)
{
   double d1_x0_dx = 0.0;
   double d1_x0_dy = 0.0;
   double d1_x1_dx = 0.0;
   double d1_x1_dy = 0.0;
    d1_x0_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*x0_B0(0,2) + 4*x0_B0(0,1) - (25.0/12.0)*x0_B0(0,0) -
      (1.0/4.0)*x0_B0(0,4) + ((4.0/3.0))*x0_B0(0,3)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*x0_B0(0,0) -
      (1.0/2.0)*x0_B0(0,2) - (1.0/4.0)*x0_B0(0,-1) + ((1.0/12.0))*x0_B0(0,3) + ((3.0/2.0))*x0_B0(0,1)
)
: (
  
      -(2.0/3.0)*x0_B0(0,-1) - (1.0/12.0)*x0_B0(0,2) + ((1.0/12.0))*x0_B0(0,-2) + ((2.0/3.0))*x0_B0(0,1)
)));

    d1_x1_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*x1_B0(2,0) + 4*x1_B0(1,0) - (25.0/12.0)*x1_B0(0,0) -
      (1.0/4.0)*x1_B0(4,0) + ((4.0/3.0))*x1_B0(3,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*x1_B0(0,0) -
      (1.0/2.0)*x1_B0(2,0) - (1.0/4.0)*x1_B0(-1,0) + ((1.0/12.0))*x1_B0(3,0) + ((3.0/2.0))*x1_B0(1,0)
)
: ((idx[0] == -1
      + block0np0) ? (
   -4*x1_B0(-1,0) + 3*x1_B0(-2,0) - (4.0/3.0)*x1_B0(-3,0) + ((1.0/4.0))*x1_B0(-4,0) +
      ((25.0/12.0))*x1_B0(0,0)
)
: ((idx[0] == -2 + block0np0) ? (
   ((1.0/2.0))*x1_B0(-2,0) - (3.0/2.0)*x1_B0(-1,0) -
      (1.0/12.0)*x1_B0(-3,0) + ((1.0/4.0))*x1_B0(1,0) + ((5.0/6.0))*x1_B0(0,0)
)
: (
   -(2.0/3.0)*x1_B0(-1,0) -
      (1.0/12.0)*x1_B0(2,0) + ((1.0/12.0))*x1_B0(-2,0) + ((2.0/3.0))*x1_B0(1,0)
)))));

    d1_x0_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*x0_B0(2,0) + 4*x0_B0(1,0) - (25.0/12.0)*x0_B0(0,0) -
      (1.0/4.0)*x0_B0(4,0) + ((4.0/3.0))*x0_B0(3,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*x0_B0(0,0) -
      (1.0/2.0)*x0_B0(2,0) - (1.0/4.0)*x0_B0(-1,0) + ((1.0/12.0))*x0_B0(3,0) + ((3.0/2.0))*x0_B0(1,0)
)
: ((idx[0] == -1
      + block0np0) ? (
   -4*x0_B0(-1,0) + 3*x0_B0(-2,0) - (4.0/3.0)*x0_B0(-3,0) + ((1.0/4.0))*x0_B0(-4,0) +
      ((25.0/12.0))*x0_B0(0,0)
)
: ((idx[0] == -2 + block0np0) ? (
   ((1.0/2.0))*x0_B0(-2,0) - (3.0/2.0)*x0_B0(-1,0) -
      (1.0/12.0)*x0_B0(-3,0) + ((1.0/4.0))*x0_B0(1,0) + ((5.0/6.0))*x0_B0(0,0)
)
: (
   -(2.0/3.0)*x0_B0(-1,0) -
      (1.0/12.0)*x0_B0(2,0) + ((1.0/12.0))*x0_B0(-2,0) + ((2.0/3.0))*x0_B0(1,0)
)))));

    d1_x1_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*x1_B0(0,2) + 4*x1_B0(0,1) - (25.0/12.0)*x1_B0(0,0) -
      (1.0/4.0)*x1_B0(0,4) + ((4.0/3.0))*x1_B0(0,3)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*x1_B0(0,0) -
      (1.0/2.0)*x1_B0(0,2) - (1.0/4.0)*x1_B0(0,-1) + ((1.0/12.0))*x1_B0(0,3) + ((3.0/2.0))*x1_B0(0,1)
)
: (
  
      -(2.0/3.0)*x1_B0(0,-1) - (1.0/12.0)*x1_B0(0,2) + ((1.0/12.0))*x1_B0(0,-2) + ((2.0/3.0))*x1_B0(0,1)
)));

   wk0_B0(0,0) = d1_x0_dx;

   wk1_B0(0,0) = d1_x0_dy;

   wk2_B0(0,0) = d1_x1_dx;

   wk3_B0(0,0) = d1_x1_dy;

   detJ_B0(0,0) = d1_x0_dx*d1_x1_dy - d1_x0_dy*d1_x1_dx;

   D00_B0(0,0) = d1_x1_dy/(d1_x0_dx*d1_x1_dy - d1_x0_dy*d1_x1_dx);

   D01_B0(0,0) = -d1_x0_dy/(d1_x0_dx*d1_x1_dy - d1_x0_dy*d1_x1_dx);

   D10_B0(0,0) = -d1_x1_dx/(d1_x0_dx*d1_x1_dy - d1_x0_dy*d1_x1_dx);

   D11_B0(0,0) = d1_x0_dx/(d1_x0_dx*d1_x1_dy - d1_x0_dy*d1_x1_dx);

}

 void opensbliblock00Kernel031(ACC<double> &D00_B0, ACC<double> &D01_B0, ACC<double> &D10_B0, ACC<double> &D11_B0,
ACC<double> &detJ_B0)
{
   D00_B0(-1,0) = D00_B0(1,0);

   D01_B0(-1,0) = D01_B0(1,0);

   D10_B0(-1,0) = D10_B0(1,0);

   D11_B0(-1,0) = D11_B0(1,0);

   detJ_B0(-1,0) = detJ_B0(1,0);

   D00_B0(-2,0) = D00_B0(2,0);

   D01_B0(-2,0) = D01_B0(2,0);

   D10_B0(-2,0) = D10_B0(2,0);

   D11_B0(-2,0) = D11_B0(2,0);

   detJ_B0(-2,0) = detJ_B0(2,0);

}

 void opensbliblock00Kernel032(ACC<double> &D00_B0, ACC<double> &D01_B0, ACC<double> &D10_B0, ACC<double> &D11_B0,
ACC<double> &detJ_B0)
{
   D00_B0(1,0) = D00_B0(-1,0);

   D01_B0(1,0) = D01_B0(-1,0);

   D10_B0(1,0) = D10_B0(-1,0);

   D11_B0(1,0) = D11_B0(-1,0);

   detJ_B0(1,0) = detJ_B0(-1,0);

   D00_B0(2,0) = D00_B0(-2,0);

   D01_B0(2,0) = D01_B0(-2,0);

   D10_B0(2,0) = D10_B0(-2,0);

   D11_B0(2,0) = D11_B0(-2,0);

   detJ_B0(2,0) = detJ_B0(-2,0);

}

 void opensbliblock00Kernel033(ACC<double> &D00_B0, ACC<double> &D01_B0, ACC<double> &D10_B0, ACC<double> &D11_B0,
ACC<double> &detJ_B0)
{
   D00_B0(0,-1) = D00_B0(0,1);

   D01_B0(0,-1) = D01_B0(0,1);

   D10_B0(0,-1) = D10_B0(0,1);

   D11_B0(0,-1) = D11_B0(0,1);

   detJ_B0(0,-1) = detJ_B0(0,1);

   D00_B0(0,-2) = D00_B0(0,2);

   D01_B0(0,-2) = D01_B0(0,2);

   D10_B0(0,-2) = D10_B0(0,2);

   D11_B0(0,-2) = D11_B0(0,2);

   detJ_B0(0,-2) = detJ_B0(0,2);

}

 void opensbliblock00Kernel034(ACC<double> &D00_B0, ACC<double> &D01_B0, ACC<double> &D10_B0, ACC<double> &D11_B0,
ACC<double> &detJ_B0)
{
   D00_B0(0,1) = D00_B0(0,-1);

   D01_B0(0,1) = D01_B0(0,-1);

   D10_B0(0,1) = D10_B0(0,-1);

   D11_B0(0,1) = D11_B0(0,-1);

   detJ_B0(0,1) = detJ_B0(0,-1);

   D00_B0(0,2) = D00_B0(0,-2);

   D01_B0(0,2) = D01_B0(0,-2);

   D10_B0(0,2) = D10_B0(0,-2);

   D11_B0(0,2) = D11_B0(0,-2);

   detJ_B0(0,2) = detJ_B0(0,-2);

}

 void opensbliblock00Kernel039(const ACC<double> &D00_B0, const ACC<double> &D01_B0, const ACC<double> &D10_B0, const
ACC<double> &D11_B0, ACC<double> &SD000_B0, ACC<double> &SD001_B0, ACC<double> &SD010_B0, ACC<double> &SD011_B0,
ACC<double> &SD100_B0, ACC<double> &SD101_B0, ACC<double> &SD110_B0, ACC<double> &SD111_B0, const int *idx)
{
   double d1_D00_dx = 0.0;
   double d1_D00_dy = 0.0;
   double d1_D01_dx = 0.0;
   double d1_D01_dy = 0.0;
   double d1_D10_dx = 0.0;
   double d1_D10_dy = 0.0;
   double d1_D11_dx = 0.0;
   double d1_D11_dy = 0.0;
    d1_D10_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*D10_B0(2,0) + 4*D10_B0(1,0) - (25.0/12.0)*D10_B0(0,0) -
      (1.0/4.0)*D10_B0(4,0) + ((4.0/3.0))*D10_B0(3,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*D10_B0(0,0) -
      (1.0/2.0)*D10_B0(2,0) - (1.0/4.0)*D10_B0(-1,0) + ((1.0/12.0))*D10_B0(3,0) + ((3.0/2.0))*D10_B0(1,0)
)
: ((idx[0]
      == -1 + block0np0) ? (
   -4*D10_B0(-1,0) + 3*D10_B0(-2,0) - (4.0/3.0)*D10_B0(-3,0) + ((1.0/4.0))*D10_B0(-4,0) +
      ((25.0/12.0))*D10_B0(0,0)
)
: ((idx[0] == -2 + block0np0) ? (
   ((1.0/2.0))*D10_B0(-2,0) - (3.0/2.0)*D10_B0(-1,0)
      - (1.0/12.0)*D10_B0(-3,0) + ((1.0/4.0))*D10_B0(1,0) + ((5.0/6.0))*D10_B0(0,0)
)
: (
   -(2.0/3.0)*D10_B0(-1,0) -
      (1.0/12.0)*D10_B0(2,0) + ((1.0/12.0))*D10_B0(-2,0) + ((2.0/3.0))*D10_B0(1,0)
)))));

    d1_D01_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*D01_B0(0,2) + 4*D01_B0(0,1) - (25.0/12.0)*D01_B0(0,0) -
      (1.0/4.0)*D01_B0(0,4) + ((4.0/3.0))*D01_B0(0,3)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*D01_B0(0,0) -
      (1.0/2.0)*D01_B0(0,2) - (1.0/4.0)*D01_B0(0,-1) + ((1.0/12.0))*D01_B0(0,3) + ((3.0/2.0))*D01_B0(0,1)
)
: (
  
      -(2.0/3.0)*D01_B0(0,-1) - (1.0/12.0)*D01_B0(0,2) + ((1.0/12.0))*D01_B0(0,-2) + ((2.0/3.0))*D01_B0(0,1)
)));

    d1_D11_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*D11_B0(0,2) + 4*D11_B0(0,1) - (25.0/12.0)*D11_B0(0,0) -
      (1.0/4.0)*D11_B0(0,4) + ((4.0/3.0))*D11_B0(0,3)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*D11_B0(0,0) -
      (1.0/2.0)*D11_B0(0,2) - (1.0/4.0)*D11_B0(0,-1) + ((1.0/12.0))*D11_B0(0,3) + ((3.0/2.0))*D11_B0(0,1)
)
: (
  
      -(2.0/3.0)*D11_B0(0,-1) - (1.0/12.0)*D11_B0(0,2) + ((1.0/12.0))*D11_B0(0,-2) + ((2.0/3.0))*D11_B0(0,1)
)));

    d1_D01_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*D01_B0(2,0) + 4*D01_B0(1,0) - (25.0/12.0)*D01_B0(0,0) -
      (1.0/4.0)*D01_B0(4,0) + ((4.0/3.0))*D01_B0(3,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*D01_B0(0,0) -
      (1.0/2.0)*D01_B0(2,0) - (1.0/4.0)*D01_B0(-1,0) + ((1.0/12.0))*D01_B0(3,0) + ((3.0/2.0))*D01_B0(1,0)
)
: ((idx[0]
      == -1 + block0np0) ? (
   -4*D01_B0(-1,0) + 3*D01_B0(-2,0) - (4.0/3.0)*D01_B0(-3,0) + ((1.0/4.0))*D01_B0(-4,0) +
      ((25.0/12.0))*D01_B0(0,0)
)
: ((idx[0] == -2 + block0np0) ? (
   ((1.0/2.0))*D01_B0(-2,0) - (3.0/2.0)*D01_B0(-1,0)
      - (1.0/12.0)*D01_B0(-3,0) + ((1.0/4.0))*D01_B0(1,0) + ((5.0/6.0))*D01_B0(0,0)
)
: (
   -(2.0/3.0)*D01_B0(-1,0) -
      (1.0/12.0)*D01_B0(2,0) + ((1.0/12.0))*D01_B0(-2,0) + ((2.0/3.0))*D01_B0(1,0)
)))));

    d1_D00_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*D00_B0(0,2) + 4*D00_B0(0,1) - (25.0/12.0)*D00_B0(0,0) -
      (1.0/4.0)*D00_B0(0,4) + ((4.0/3.0))*D00_B0(0,3)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*D00_B0(0,0) -
      (1.0/2.0)*D00_B0(0,2) - (1.0/4.0)*D00_B0(0,-1) + ((1.0/12.0))*D00_B0(0,3) + ((3.0/2.0))*D00_B0(0,1)
)
: (
  
      -(2.0/3.0)*D00_B0(0,-1) - (1.0/12.0)*D00_B0(0,2) + ((1.0/12.0))*D00_B0(0,-2) + ((2.0/3.0))*D00_B0(0,1)
)));

    d1_D00_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*D00_B0(2,0) + 4*D00_B0(1,0) - (25.0/12.0)*D00_B0(0,0) -
      (1.0/4.0)*D00_B0(4,0) + ((4.0/3.0))*D00_B0(3,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*D00_B0(0,0) -
      (1.0/2.0)*D00_B0(2,0) - (1.0/4.0)*D00_B0(-1,0) + ((1.0/12.0))*D00_B0(3,0) + ((3.0/2.0))*D00_B0(1,0)
)
: ((idx[0]
      == -1 + block0np0) ? (
   -4*D00_B0(-1,0) + 3*D00_B0(-2,0) - (4.0/3.0)*D00_B0(-3,0) + ((1.0/4.0))*D00_B0(-4,0) +
      ((25.0/12.0))*D00_B0(0,0)
)
: ((idx[0] == -2 + block0np0) ? (
   ((1.0/2.0))*D00_B0(-2,0) - (3.0/2.0)*D00_B0(-1,0)
      - (1.0/12.0)*D00_B0(-3,0) + ((1.0/4.0))*D00_B0(1,0) + ((5.0/6.0))*D00_B0(0,0)
)
: (
   -(2.0/3.0)*D00_B0(-1,0) -
      (1.0/12.0)*D00_B0(2,0) + ((1.0/12.0))*D00_B0(-2,0) + ((2.0/3.0))*D00_B0(1,0)
)))));

    d1_D10_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*D10_B0(0,2) + 4*D10_B0(0,1) - (25.0/12.0)*D10_B0(0,0) -
      (1.0/4.0)*D10_B0(0,4) + ((4.0/3.0))*D10_B0(0,3)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*D10_B0(0,0) -
      (1.0/2.0)*D10_B0(0,2) - (1.0/4.0)*D10_B0(0,-1) + ((1.0/12.0))*D10_B0(0,3) + ((3.0/2.0))*D10_B0(0,1)
)
: (
  
      -(2.0/3.0)*D10_B0(0,-1) - (1.0/12.0)*D10_B0(0,2) + ((1.0/12.0))*D10_B0(0,-2) + ((2.0/3.0))*D10_B0(0,1)
)));

    d1_D11_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*D11_B0(2,0) + 4*D11_B0(1,0) - (25.0/12.0)*D11_B0(0,0) -
      (1.0/4.0)*D11_B0(4,0) + ((4.0/3.0))*D11_B0(3,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*D11_B0(0,0) -
      (1.0/2.0)*D11_B0(2,0) - (1.0/4.0)*D11_B0(-1,0) + ((1.0/12.0))*D11_B0(3,0) + ((3.0/2.0))*D11_B0(1,0)
)
: ((idx[0]
      == -1 + block0np0) ? (
   -4*D11_B0(-1,0) + 3*D11_B0(-2,0) - (4.0/3.0)*D11_B0(-3,0) + ((1.0/4.0))*D11_B0(-4,0) +
      ((25.0/12.0))*D11_B0(0,0)
)
: ((idx[0] == -2 + block0np0) ? (
   ((1.0/2.0))*D11_B0(-2,0) - (3.0/2.0)*D11_B0(-1,0)
      - (1.0/12.0)*D11_B0(-3,0) + ((1.0/4.0))*D11_B0(1,0) + ((5.0/6.0))*D11_B0(0,0)
)
: (
   -(2.0/3.0)*D11_B0(-1,0) -
      (1.0/12.0)*D11_B0(2,0) + ((1.0/12.0))*D11_B0(-2,0) + ((2.0/3.0))*D11_B0(1,0)
)))));

   SD000_B0(0,0) = d1_D00_dx;

   SD001_B0(0,0) = d1_D00_dy;

   SD010_B0(0,0) = d1_D01_dx;

   SD011_B0(0,0) = d1_D01_dy;

   SD100_B0(0,0) = d1_D10_dx;

   SD101_B0(0,0) = d1_D10_dy;

   SD110_B0(0,0) = d1_D11_dx;

   SD111_B0(0,0) = d1_D11_dy;

}

void opensbliblock00Kernel023(ACC<double> &rhoE_B0, ACC<double> &rho_B0, ACC<double> &rhou0_B0, ACC<double> &rhou1_B0)
{
   rho_B0(0,0) = rho_B0(-1,0);

   rhou0_B0(0,0) = rhou0_B0(-1,0);

   rhou1_B0(0,0) = rhou1_B0(-1,0);

   rhoE_B0(0,0) = rhoE_B0(-1,0);

}

void opensbliblock00Kernel024(ACC<double> &rhoE_B0, ACC<double> &rho_B0, ACC<double> &rhou0_B0, ACC<double> &rhou1_B0)
{
   rho_B0(0,0) = rho_B0(-1,0);

   rhou0_B0(0,0) = rhou0_B0(-1,0);

   rhou1_B0(0,0) = rhou1_B0(-1,0);

   rhoE_B0(0,0) = rhoE_B0(-1,0);

   rho_B0(1,0) = rho_B0(-1,0);

   rhou0_B0(1,0) = rhou0_B0(-1,0);

   rhou1_B0(1,0) = rhou1_B0(-1,0);

   rhoE_B0(1,0) = rhoE_B0(-1,0);

   rho_B0(2,0) = rho_B0(-1,0);

   rhou0_B0(2,0) = rhou0_B0(-1,0);

   rhou1_B0(2,0) = rhou1_B0(-1,0);

   rhoE_B0(2,0) = rhoE_B0(-1,0);

}

void opensbliblock00Kernel025(ACC<double> &rhoE_B0, ACC<double> &rho_B0, ACC<double> &rhou0_B0, ACC<double> &rhou1_B0)
{
   double Pwall = 0.0;
   double T1 = 0.0;
   double T2 = 0.0;
   double T_above = 0.0;
   double rho_halo_1 = 0.0;
   double rho_halo_2 = 0.0;
   double u01 = 0.0;
   double u02 = 0.0;
   double u11 = 0.0;
   double u12 = 0.0;
   rhou0_B0(0,0) = 0.0;

   rhou1_B0(0,0) = 0.0;

   rhoE_B0(0,0) = Twall*inv2Minf*rho_B0(0,0)/(gama*(-1.0 + gama));

    Pwall = (-1 + gama)*(-(((1.0/2.0))*(rhou0_B0(0,0)*rhou0_B0(0,0)) +
      ((1.0/2.0))*(rhou1_B0(0,0)*rhou1_B0(0,0)))/rho_B0(0,0) + rhoE_B0(0,0));

   u01 = rhou0_B0(0,1)/rho_B0(0,1);

   u02 = rhou0_B0(0,2)/rho_B0(0,2);

   u11 = rhou1_B0(0,1)/rho_B0(0,1);

   u12 = rhou1_B0(0,2)/rho_B0(0,2);

    T_above = (Minf*Minf)*(-1 + gama)*(-(((1.0/2.0))*(rhou0_B0(0,1)*rhou0_B0(0,1)) +
      ((1.0/2.0))*(rhou1_B0(0,1)*rhou1_B0(0,1)))/rho_B0(0,1) + rhoE_B0(0,1))*gama/rho_B0(0,1);

   T1 = -T_above + 2*Twall;

   rho_halo_1 = (Minf*Minf)*gama*Pwall/T1;

   rho_B0(0,-1) = rho_halo_1;

   rhou0_B0(0,-1) = -rho_halo_1*u01;

   rhou1_B0(0,-1) = -rho_halo_1*u11;

   rhoE_B0(0,-1) = inv_gamma_m1*Pwall + ((1.0/2.0))*((u01*u01) + (u11*u11))*rho_halo_1;

   T2 = -2*T_above + 3*Twall;

   rho_halo_1 = (Minf*Minf)*gama*Pwall/T1;

   rho_B0(0,-1) = rho_halo_1;

   rho_halo_2 = (Minf*Minf)*gama*Pwall/T2;

   rho_B0(0,-2) = rho_halo_2;

   rhou0_B0(0,-1) = -rho_halo_1*u01;

   rhou1_B0(0,-1) = -rho_halo_1*u11;

   rhou0_B0(0,-2) = -rho_halo_2*u02;

   rhou1_B0(0,-2) = -rho_halo_2*u12;

   rhoE_B0(0,-1) = inv_gamma_m1*Pwall + ((1.0/2.0))*((u01*u01) + (u11*u11))*rho_halo_1;

   rhoE_B0(0,-2) = inv_gamma_m1*Pwall + ((1.0/2.0))*((u02*u02) + (u12*u12))*rho_halo_2;

}

void opensbliblock00Kernel026(ACC<double> &rhoE_B0, ACC<double> &rho_B0, ACC<double> &rhou0_B0, ACC<double> &rhou1_B0)
{
   rho_B0(0,0) = rho_B0(0,-1);

   rhou0_B0(0,0) = rhou0_B0(0,-1);

   rhou1_B0(0,0) = rhou1_B0(0,-1);

   rhoE_B0(0,0) = rhoE_B0(0,-1);

   rho_B0(0,1) = rho_B0(0,-1);

   rhou0_B0(0,1) = rhou0_B0(0,-1);

   rhou1_B0(0,1) = rhou1_B0(0,-1);

   rhoE_B0(0,1) = rhoE_B0(0,-1);

   rho_B0(0,2) = rho_B0(0,-2);

   rhou0_B0(0,2) = rhou0_B0(0,-2);

   rhou1_B0(0,2) = rhou1_B0(0,-2);

   rhoE_B0(0,2) = rhoE_B0(0,-2);

}

void opensbliblock00Kernel004(const ACC<double> &rho_B0, const ACC<double> &rhou0_B0, ACC<double> &u0_B0)
{
   u0_B0(0,0) = rhou0_B0(0,0)/rho_B0(0,0);

}

void opensbliblock00Kernel006(const ACC<double> &rho_B0, const ACC<double> &rhou1_B0, ACC<double> &u1_B0)
{
   u1_B0(0,0) = rhou1_B0(0,0)/rho_B0(0,0);

}

 void opensbliblock00Kernel012(const ACC<double> &rhoE_B0, const ACC<double> &rho_B0, const ACC<double> &u0_B0, const
ACC<double> &u1_B0, ACC<double> &p_B0)
{
    p_B0(0,0) = (-1 + gama)*(-(1.0/2.0)*(u0_B0(0,0)*u0_B0(0,0))*rho_B0(0,0) -
      (1.0/2.0)*(u1_B0(0,0)*u1_B0(0,0))*rho_B0(0,0) + rhoE_B0(0,0));

}

void opensbliblock00Kernel008(const ACC<double> &p_B0, const ACC<double> &rho_B0, ACC<double> &T_B0)
{
   T_B0(0,0) = (Minf*Minf)*gama*p_B0(0,0)/rho_B0(0,0);

}

void opensbliblock00Kernel017(const ACC<double> &T_B0, ACC<double> &mu_B0)
{
   mu_B0(0,0) = T_B0(0,0)*sqrt(T_B0(0,0))*(1.0 + SuthT*invRefT)/(SuthT*invRefT + T_B0(0,0));

}

void opensbliblock00Kernel003(const ACC<double> &u0_B0, ACC<double> &wk0_B0, const int *idx)
{
   if (idx[0] == 0){

       wk0_B0(0,0) = (-3*u0_B0(2,0) + 4*u0_B0(1,0) - (25.0/12.0)*u0_B0(0,0) - (1.0/4.0)*u0_B0(4,0) +
            ((4.0/3.0))*u0_B0(3,0))*invDelta0block0;

   }

   else if (idx[0] == 1){

       wk0_B0(0,0) = (-(5.0/6.0)*u0_B0(0,0) - (1.0/2.0)*u0_B0(2,0) - (1.0/4.0)*u0_B0(-1,0) + ((1.0/12.0))*u0_B0(3,0) +
            ((3.0/2.0))*u0_B0(1,0))*invDelta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       wk0_B0(0,0) = (-4*u0_B0(-1,0) + 3*u0_B0(-2,0) - (4.0/3.0)*u0_B0(-3,0) + ((1.0/4.0))*u0_B0(-4,0) +
            ((25.0/12.0))*u0_B0(0,0))*invDelta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       wk0_B0(0,0) = (((1.0/2.0))*u0_B0(-2,0) - (3.0/2.0)*u0_B0(-1,0) - (1.0/12.0)*u0_B0(-3,0) + ((1.0/4.0))*u0_B0(1,0)
            + ((5.0/6.0))*u0_B0(0,0))*invDelta0block0;

   }

   else{

       wk0_B0(0,0) = (-(2.0/3.0)*u0_B0(-1,0) - (1.0/12.0)*u0_B0(2,0) + ((1.0/12.0))*u0_B0(-2,0) +
            ((2.0/3.0))*u0_B0(1,0))*invDelta0block0;

   }

}

void opensbliblock00Kernel005(const ACC<double> &u1_B0, ACC<double> &wk1_B0, const int *idx)
{
   if (idx[0] == 0){

       wk1_B0(0,0) = (-3*u1_B0(2,0) + 4*u1_B0(1,0) - (25.0/12.0)*u1_B0(0,0) - (1.0/4.0)*u1_B0(4,0) +
            ((4.0/3.0))*u1_B0(3,0))*invDelta0block0;

   }

   else if (idx[0] == 1){

       wk1_B0(0,0) = (-(5.0/6.0)*u1_B0(0,0) - (1.0/2.0)*u1_B0(2,0) - (1.0/4.0)*u1_B0(-1,0) + ((1.0/12.0))*u1_B0(3,0) +
            ((3.0/2.0))*u1_B0(1,0))*invDelta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       wk1_B0(0,0) = (-4*u1_B0(-1,0) + 3*u1_B0(-2,0) - (4.0/3.0)*u1_B0(-3,0) + ((1.0/4.0))*u1_B0(-4,0) +
            ((25.0/12.0))*u1_B0(0,0))*invDelta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       wk1_B0(0,0) = (((1.0/2.0))*u1_B0(-2,0) - (3.0/2.0)*u1_B0(-1,0) - (1.0/12.0)*u1_B0(-3,0) + ((1.0/4.0))*u1_B0(1,0)
            + ((5.0/6.0))*u1_B0(0,0))*invDelta0block0;

   }

   else{

       wk1_B0(0,0) = (-(2.0/3.0)*u1_B0(-1,0) - (1.0/12.0)*u1_B0(2,0) + ((1.0/12.0))*u1_B0(-2,0) +
            ((2.0/3.0))*u1_B0(1,0))*invDelta0block0;

   }

}

void opensbliblock00Kernel007(const ACC<double> &T_B0, ACC<double> &wk2_B0, const int *idx)
{
   if (idx[0] == 0){

       wk2_B0(0,0) = (-3*T_B0(2,0) + 4*T_B0(1,0) - (25.0/12.0)*T_B0(0,0) - (1.0/4.0)*T_B0(4,0) +
            ((4.0/3.0))*T_B0(3,0))*invDelta0block0;

   }

   else if (idx[0] == 1){

       wk2_B0(0,0) = (-(5.0/6.0)*T_B0(0,0) - (1.0/2.0)*T_B0(2,0) - (1.0/4.0)*T_B0(-1,0) + ((1.0/12.0))*T_B0(3,0) +
            ((3.0/2.0))*T_B0(1,0))*invDelta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       wk2_B0(0,0) = (-4*T_B0(-1,0) + 3*T_B0(-2,0) - (4.0/3.0)*T_B0(-3,0) + ((1.0/4.0))*T_B0(-4,0) +
            ((25.0/12.0))*T_B0(0,0))*invDelta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       wk2_B0(0,0) = (((1.0/2.0))*T_B0(-2,0) - (3.0/2.0)*T_B0(-1,0) - (1.0/12.0)*T_B0(-3,0) + ((1.0/4.0))*T_B0(1,0) +
            ((5.0/6.0))*T_B0(0,0))*invDelta0block0;

   }

   else{

       wk2_B0(0,0) = (-(2.0/3.0)*T_B0(-1,0) - (1.0/12.0)*T_B0(2,0) + ((1.0/12.0))*T_B0(-2,0) +
            ((2.0/3.0))*T_B0(1,0))*invDelta0block0;

   }

}

void opensbliblock00Kernel009(const ACC<double> &u0_B0, ACC<double> &wk3_B0, const int *idx)
{
   if (idx[1] == 0){

       wk3_B0(0,0) = (-3*u0_B0(0,2) + 4*u0_B0(0,1) - (25.0/12.0)*u0_B0(0,0) - (1.0/4.0)*u0_B0(0,4) +
            ((4.0/3.0))*u0_B0(0,3))*invDelta1block0;

   }

   else if (idx[1] == 1){

       wk3_B0(0,0) = (-(5.0/6.0)*u0_B0(0,0) - (1.0/2.0)*u0_B0(0,2) - (1.0/4.0)*u0_B0(0,-1) + ((1.0/12.0))*u0_B0(0,3) +
            ((3.0/2.0))*u0_B0(0,1))*invDelta1block0;

   }

   else{

       wk3_B0(0,0) = (-(2.0/3.0)*u0_B0(0,-1) - (1.0/12.0)*u0_B0(0,2) + ((1.0/12.0))*u0_B0(0,-2) +
            ((2.0/3.0))*u0_B0(0,1))*invDelta1block0;

   }

}

void opensbliblock00Kernel010(const ACC<double> &u1_B0, ACC<double> &wk4_B0, const int *idx)
{
   if (idx[1] == 0){

       wk4_B0(0,0) = (-3*u1_B0(0,2) + 4*u1_B0(0,1) - (25.0/12.0)*u1_B0(0,0) - (1.0/4.0)*u1_B0(0,4) +
            ((4.0/3.0))*u1_B0(0,3))*invDelta1block0;

   }

   else if (idx[1] == 1){

       wk4_B0(0,0) = (-(5.0/6.0)*u1_B0(0,0) - (1.0/2.0)*u1_B0(0,2) - (1.0/4.0)*u1_B0(0,-1) + ((1.0/12.0))*u1_B0(0,3) +
            ((3.0/2.0))*u1_B0(0,1))*invDelta1block0;

   }

   else{

       wk4_B0(0,0) = (-(2.0/3.0)*u1_B0(0,-1) - (1.0/12.0)*u1_B0(0,2) + ((1.0/12.0))*u1_B0(0,-2) +
            ((2.0/3.0))*u1_B0(0,1))*invDelta1block0;

   }

}

void opensbliblock00Kernel011(const ACC<double> &T_B0, ACC<double> &wk5_B0, const int *idx)
{
   if (idx[1] == 0){

       wk5_B0(0,0) = (-3*T_B0(0,2) + 4*T_B0(0,1) - (25.0/12.0)*T_B0(0,0) - (1.0/4.0)*T_B0(0,4) +
            ((4.0/3.0))*T_B0(0,3))*invDelta1block0;

   }

   else if (idx[1] == 1){

       wk5_B0(0,0) = (-(5.0/6.0)*T_B0(0,0) - (1.0/2.0)*T_B0(0,2) - (1.0/4.0)*T_B0(0,-1) + ((1.0/12.0))*T_B0(0,3) +
            ((3.0/2.0))*T_B0(0,1))*invDelta1block0;

   }

   else{

       wk5_B0(0,0) = (-(2.0/3.0)*T_B0(0,-1) - (1.0/12.0)*T_B0(0,2) + ((1.0/12.0))*T_B0(0,-2) +
            ((2.0/3.0))*T_B0(0,1))*invDelta1block0;

   }

}

 void opensbliblock00Kernel021(const ACC<double> &D00_B0, const ACC<double> &D01_B0, const ACC<double> &D10_B0, const
ACC<double> &D11_B0, const ACC<double> &p_B0, const ACC<double> &rhoE_B0, const ACC<double> &rho_B0, const ACC<double>
&rhou0_B0, const ACC<double> &rhou1_B0, const ACC<double> &u0_B0, const ACC<double> &u1_B0, const ACC<double> &wk0_B0,
const ACC<double> &wk1_B0, const ACC<double> &wk3_B0, const ACC<double> &wk4_B0, ACC<double> &Residual0_B0, ACC<double>
&Residual1_B0, ACC<double> &Residual2_B0, ACC<double> &Residual3_B0, const int *idx)
{
   double d1_inv_rhoErho_dx = 0.0;
   double d1_inv_rhoErho_dy = 0.0;
   double d1_p_dx = 0.0;
   double d1_p_dy = 0.0;
   double d1_pu0_dx = 0.0;
   double d1_pu0_dy = 0.0;
   double d1_pu1_dx = 0.0;
   double d1_pu1_dy = 0.0;
   double d1_rhoEu0_dx = 0.0;
   double d1_rhoEu0_dy = 0.0;
   double d1_rhoEu1_dx = 0.0;
   double d1_rhoEu1_dy = 0.0;
   double d1_rhou0_dx = 0.0;
   double d1_rhou0_dy = 0.0;
   double d1_rhou0u0_dx = 0.0;
   double d1_rhou0u0_dy = 0.0;
   double d1_rhou0u1_dx = 0.0;
   double d1_rhou0u1_dy = 0.0;
   double d1_rhou1_dx = 0.0;
   double d1_rhou1_dy = 0.0;
   double d1_rhou1u0_dx = 0.0;
   double d1_rhou1u0_dy = 0.0;
   double d1_rhou1u1_dx = 0.0;
   double d1_rhou1u1_dy = 0.0;
   if (idx[0] == 0){

       d1_p_dx = (-3*p_B0(2,0) + 4*p_B0(1,0) - (25.0/12.0)*p_B0(0,0) - (1.0/4.0)*p_B0(4,0) +
            ((4.0/3.0))*p_B0(3,0))*invDelta0block0;

       d1_pu0_dx = (-3*p_B0(2,0)*u0_B0(2,0) + 4*p_B0(1,0)*u0_B0(1,0) - (25.0/12.0)*p_B0(0,0)*u0_B0(0,0) -
            (1.0/4.0)*p_B0(4,0)*u0_B0(4,0) + ((4.0/3.0))*p_B0(3,0)*u0_B0(3,0))*invDelta0block0;

       d1_pu1_dx = (-3*p_B0(2,0)*u1_B0(2,0) + 4*p_B0(1,0)*u1_B0(1,0) - (25.0/12.0)*p_B0(0,0)*u1_B0(0,0) -
            (1.0/4.0)*p_B0(4,0)*u1_B0(4,0) + ((4.0/3.0))*p_B0(3,0)*u1_B0(3,0))*invDelta0block0;

       d1_rhoEu0_dx = (-3*u0_B0(2,0)*rhoE_B0(2,0) + 4*u0_B0(1,0)*rhoE_B0(1,0) - (25.0/12.0)*u0_B0(0,0)*rhoE_B0(0,0) -
            (1.0/4.0)*u0_B0(4,0)*rhoE_B0(4,0) + ((4.0/3.0))*u0_B0(3,0)*rhoE_B0(3,0))*invDelta0block0;

       d1_rhoEu1_dx = (-3*u1_B0(2,0)*rhoE_B0(2,0) + 4*u1_B0(1,0)*rhoE_B0(1,0) - (25.0/12.0)*u1_B0(0,0)*rhoE_B0(0,0) -
            (1.0/4.0)*u1_B0(4,0)*rhoE_B0(4,0) + ((4.0/3.0))*u1_B0(3,0)*rhoE_B0(3,0))*invDelta0block0;

       d1_inv_rhoErho_dx = (-3*rhoE_B0(2,0)/rho_B0(2,0) + 4*rhoE_B0(1,0)/rho_B0(1,0) -
            (25.0/12.0)*rhoE_B0(0,0)/rho_B0(0,0) - (1.0/4.0)*rhoE_B0(4,0)/rho_B0(4,0) +
            ((4.0/3.0))*rhoE_B0(3,0)/rho_B0(3,0))*invDelta0block0;

       d1_rhou0_dx = (-3*rhou0_B0(2,0) + 4*rhou0_B0(1,0) - (25.0/12.0)*rhou0_B0(0,0) - (1.0/4.0)*rhou0_B0(4,0) +
            ((4.0/3.0))*rhou0_B0(3,0))*invDelta0block0;

       d1_rhou0u0_dx = (-3*u0_B0(2,0)*rhou0_B0(2,0) + 4*u0_B0(1,0)*rhou0_B0(1,0) - (25.0/12.0)*u0_B0(0,0)*rhou0_B0(0,0)
            - (1.0/4.0)*u0_B0(4,0)*rhou0_B0(4,0) + ((4.0/3.0))*u0_B0(3,0)*rhou0_B0(3,0))*invDelta0block0;

       d1_rhou0u1_dx = (-3*u1_B0(2,0)*rhou0_B0(2,0) + 4*u1_B0(1,0)*rhou0_B0(1,0) - (25.0/12.0)*u1_B0(0,0)*rhou0_B0(0,0)
            - (1.0/4.0)*u1_B0(4,0)*rhou0_B0(4,0) + ((4.0/3.0))*u1_B0(3,0)*rhou0_B0(3,0))*invDelta0block0;

       d1_rhou1_dx = (-3*rhou1_B0(2,0) + 4*rhou1_B0(1,0) - (25.0/12.0)*rhou1_B0(0,0) - (1.0/4.0)*rhou1_B0(4,0) +
            ((4.0/3.0))*rhou1_B0(3,0))*invDelta0block0;

       d1_rhou1u0_dx = (-3*u0_B0(2,0)*rhou1_B0(2,0) + 4*u0_B0(1,0)*rhou1_B0(1,0) - (25.0/12.0)*u0_B0(0,0)*rhou1_B0(0,0)
            - (1.0/4.0)*u0_B0(4,0)*rhou1_B0(4,0) + ((4.0/3.0))*u0_B0(3,0)*rhou1_B0(3,0))*invDelta0block0;

       d1_rhou1u1_dx = (-3*u1_B0(2,0)*rhou1_B0(2,0) + 4*u1_B0(1,0)*rhou1_B0(1,0) - (25.0/12.0)*u1_B0(0,0)*rhou1_B0(0,0)
            - (1.0/4.0)*u1_B0(4,0)*rhou1_B0(4,0) + ((4.0/3.0))*u1_B0(3,0)*rhou1_B0(3,0))*invDelta0block0;

   }

   else if (idx[0] == 1){

       d1_p_dx = (-(5.0/6.0)*p_B0(0,0) - (1.0/2.0)*p_B0(2,0) - (1.0/4.0)*p_B0(-1,0) + ((1.0/12.0))*p_B0(3,0) +
            ((3.0/2.0))*p_B0(1,0))*invDelta0block0;

       d1_pu0_dx = (-(5.0/6.0)*p_B0(0,0)*u0_B0(0,0) - (1.0/2.0)*p_B0(2,0)*u0_B0(2,0) - (1.0/4.0)*p_B0(-1,0)*u0_B0(-1,0)
            + ((1.0/12.0))*p_B0(3,0)*u0_B0(3,0) + ((3.0/2.0))*p_B0(1,0)*u0_B0(1,0))*invDelta0block0;

       d1_pu1_dx = (-(5.0/6.0)*p_B0(0,0)*u1_B0(0,0) - (1.0/2.0)*p_B0(2,0)*u1_B0(2,0) - (1.0/4.0)*p_B0(-1,0)*u1_B0(-1,0)
            + ((1.0/12.0))*p_B0(3,0)*u1_B0(3,0) + ((3.0/2.0))*p_B0(1,0)*u1_B0(1,0))*invDelta0block0;

       d1_rhoEu0_dx = (-(5.0/6.0)*u0_B0(0,0)*rhoE_B0(0,0) - (1.0/2.0)*u0_B0(2,0)*rhoE_B0(2,0) -
            (1.0/4.0)*u0_B0(-1,0)*rhoE_B0(-1,0) + ((1.0/12.0))*u0_B0(3,0)*rhoE_B0(3,0) +
            ((3.0/2.0))*u0_B0(1,0)*rhoE_B0(1,0))*invDelta0block0;

       d1_rhoEu1_dx = (-(5.0/6.0)*u1_B0(0,0)*rhoE_B0(0,0) - (1.0/2.0)*u1_B0(2,0)*rhoE_B0(2,0) -
            (1.0/4.0)*u1_B0(-1,0)*rhoE_B0(-1,0) + ((1.0/12.0))*u1_B0(3,0)*rhoE_B0(3,0) +
            ((3.0/2.0))*u1_B0(1,0)*rhoE_B0(1,0))*invDelta0block0;

       d1_inv_rhoErho_dx = (-(5.0/6.0)*rhoE_B0(0,0)/rho_B0(0,0) - (1.0/2.0)*rhoE_B0(2,0)/rho_B0(2,0) -
            (1.0/4.0)*rhoE_B0(-1,0)/rho_B0(-1,0) + ((1.0/12.0))*rhoE_B0(3,0)/rho_B0(3,0) +
            ((3.0/2.0))*rhoE_B0(1,0)/rho_B0(1,0))*invDelta0block0;

       d1_rhou0_dx = (-(5.0/6.0)*rhou0_B0(0,0) - (1.0/2.0)*rhou0_B0(2,0) - (1.0/4.0)*rhou0_B0(-1,0) +
            ((1.0/12.0))*rhou0_B0(3,0) + ((3.0/2.0))*rhou0_B0(1,0))*invDelta0block0;

       d1_rhou0u0_dx = (-(5.0/6.0)*u0_B0(0,0)*rhou0_B0(0,0) - (1.0/2.0)*u0_B0(2,0)*rhou0_B0(2,0) -
            (1.0/4.0)*u0_B0(-1,0)*rhou0_B0(-1,0) + ((1.0/12.0))*u0_B0(3,0)*rhou0_B0(3,0) +
            ((3.0/2.0))*u0_B0(1,0)*rhou0_B0(1,0))*invDelta0block0;

       d1_rhou0u1_dx = (-(5.0/6.0)*u1_B0(0,0)*rhou0_B0(0,0) - (1.0/2.0)*u1_B0(2,0)*rhou0_B0(2,0) -
            (1.0/4.0)*u1_B0(-1,0)*rhou0_B0(-1,0) + ((1.0/12.0))*u1_B0(3,0)*rhou0_B0(3,0) +
            ((3.0/2.0))*u1_B0(1,0)*rhou0_B0(1,0))*invDelta0block0;

       d1_rhou1_dx = (-(5.0/6.0)*rhou1_B0(0,0) - (1.0/2.0)*rhou1_B0(2,0) - (1.0/4.0)*rhou1_B0(-1,0) +
            ((1.0/12.0))*rhou1_B0(3,0) + ((3.0/2.0))*rhou1_B0(1,0))*invDelta0block0;

       d1_rhou1u0_dx = (-(5.0/6.0)*u0_B0(0,0)*rhou1_B0(0,0) - (1.0/2.0)*u0_B0(2,0)*rhou1_B0(2,0) -
            (1.0/4.0)*u0_B0(-1,0)*rhou1_B0(-1,0) + ((1.0/12.0))*u0_B0(3,0)*rhou1_B0(3,0) +
            ((3.0/2.0))*u0_B0(1,0)*rhou1_B0(1,0))*invDelta0block0;

       d1_rhou1u1_dx = (-(5.0/6.0)*u1_B0(0,0)*rhou1_B0(0,0) - (1.0/2.0)*u1_B0(2,0)*rhou1_B0(2,0) -
            (1.0/4.0)*u1_B0(-1,0)*rhou1_B0(-1,0) + ((1.0/12.0))*u1_B0(3,0)*rhou1_B0(3,0) +
            ((3.0/2.0))*u1_B0(1,0)*rhou1_B0(1,0))*invDelta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       d1_p_dx = (-4*p_B0(-1,0) + 3*p_B0(-2,0) - (4.0/3.0)*p_B0(-3,0) + ((1.0/4.0))*p_B0(-4,0) +
            ((25.0/12.0))*p_B0(0,0))*invDelta0block0;

       d1_pu0_dx = (-4*p_B0(-1,0)*u0_B0(-1,0) + 3*p_B0(-2,0)*u0_B0(-2,0) - (4.0/3.0)*p_B0(-3,0)*u0_B0(-3,0) +
            ((1.0/4.0))*p_B0(-4,0)*u0_B0(-4,0) + ((25.0/12.0))*p_B0(0,0)*u0_B0(0,0))*invDelta0block0;

       d1_pu1_dx = (-4*p_B0(-1,0)*u1_B0(-1,0) + 3*p_B0(-2,0)*u1_B0(-2,0) - (4.0/3.0)*p_B0(-3,0)*u1_B0(-3,0) +
            ((1.0/4.0))*p_B0(-4,0)*u1_B0(-4,0) + ((25.0/12.0))*p_B0(0,0)*u1_B0(0,0))*invDelta0block0;

       d1_rhoEu0_dx = (-4*u0_B0(-1,0)*rhoE_B0(-1,0) + 3*u0_B0(-2,0)*rhoE_B0(-2,0) - (4.0/3.0)*u0_B0(-3,0)*rhoE_B0(-3,0)
            + ((1.0/4.0))*u0_B0(-4,0)*rhoE_B0(-4,0) + ((25.0/12.0))*u0_B0(0,0)*rhoE_B0(0,0))*invDelta0block0;

       d1_rhoEu1_dx = (-4*u1_B0(-1,0)*rhoE_B0(-1,0) + 3*u1_B0(-2,0)*rhoE_B0(-2,0) - (4.0/3.0)*u1_B0(-3,0)*rhoE_B0(-3,0)
            + ((1.0/4.0))*u1_B0(-4,0)*rhoE_B0(-4,0) + ((25.0/12.0))*u1_B0(0,0)*rhoE_B0(0,0))*invDelta0block0;

       d1_inv_rhoErho_dx = (-4*rhoE_B0(-1,0)/rho_B0(-1,0) + 3*rhoE_B0(-2,0)/rho_B0(-2,0) -
            (4.0/3.0)*rhoE_B0(-3,0)/rho_B0(-3,0) + ((1.0/4.0))*rhoE_B0(-4,0)/rho_B0(-4,0) +
            ((25.0/12.0))*rhoE_B0(0,0)/rho_B0(0,0))*invDelta0block0;

       d1_rhou0_dx = (-4*rhou0_B0(-1,0) + 3*rhou0_B0(-2,0) - (4.0/3.0)*rhou0_B0(-3,0) + ((1.0/4.0))*rhou0_B0(-4,0) +
            ((25.0/12.0))*rhou0_B0(0,0))*invDelta0block0;

       d1_rhou0u0_dx = (-4*u0_B0(-1,0)*rhou0_B0(-1,0) + 3*u0_B0(-2,0)*rhou0_B0(-2,0) -
            (4.0/3.0)*u0_B0(-3,0)*rhou0_B0(-3,0) + ((1.0/4.0))*u0_B0(-4,0)*rhou0_B0(-4,0) +
            ((25.0/12.0))*u0_B0(0,0)*rhou0_B0(0,0))*invDelta0block0;

       d1_rhou0u1_dx = (-4*u1_B0(-1,0)*rhou0_B0(-1,0) + 3*u1_B0(-2,0)*rhou0_B0(-2,0) -
            (4.0/3.0)*u1_B0(-3,0)*rhou0_B0(-3,0) + ((1.0/4.0))*u1_B0(-4,0)*rhou0_B0(-4,0) +
            ((25.0/12.0))*u1_B0(0,0)*rhou0_B0(0,0))*invDelta0block0;

       d1_rhou1_dx = (-4*rhou1_B0(-1,0) + 3*rhou1_B0(-2,0) - (4.0/3.0)*rhou1_B0(-3,0) + ((1.0/4.0))*rhou1_B0(-4,0) +
            ((25.0/12.0))*rhou1_B0(0,0))*invDelta0block0;

       d1_rhou1u0_dx = (-4*u0_B0(-1,0)*rhou1_B0(-1,0) + 3*u0_B0(-2,0)*rhou1_B0(-2,0) -
            (4.0/3.0)*u0_B0(-3,0)*rhou1_B0(-3,0) + ((1.0/4.0))*u0_B0(-4,0)*rhou1_B0(-4,0) +
            ((25.0/12.0))*u0_B0(0,0)*rhou1_B0(0,0))*invDelta0block0;

       d1_rhou1u1_dx = (-4*u1_B0(-1,0)*rhou1_B0(-1,0) + 3*u1_B0(-2,0)*rhou1_B0(-2,0) -
            (4.0/3.0)*u1_B0(-3,0)*rhou1_B0(-3,0) + ((1.0/4.0))*u1_B0(-4,0)*rhou1_B0(-4,0) +
            ((25.0/12.0))*u1_B0(0,0)*rhou1_B0(0,0))*invDelta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       d1_p_dx = (((1.0/2.0))*p_B0(-2,0) - (3.0/2.0)*p_B0(-1,0) - (1.0/12.0)*p_B0(-3,0) + ((1.0/4.0))*p_B0(1,0) +
            ((5.0/6.0))*p_B0(0,0))*invDelta0block0;

       d1_pu0_dx = (((1.0/2.0))*p_B0(-2,0)*u0_B0(-2,0) - (3.0/2.0)*p_B0(-1,0)*u0_B0(-1,0) -
            (1.0/12.0)*p_B0(-3,0)*u0_B0(-3,0) + ((1.0/4.0))*p_B0(1,0)*u0_B0(1,0) +
            ((5.0/6.0))*p_B0(0,0)*u0_B0(0,0))*invDelta0block0;

       d1_pu1_dx = (((1.0/2.0))*p_B0(-2,0)*u1_B0(-2,0) - (3.0/2.0)*p_B0(-1,0)*u1_B0(-1,0) -
            (1.0/12.0)*p_B0(-3,0)*u1_B0(-3,0) + ((1.0/4.0))*p_B0(1,0)*u1_B0(1,0) +
            ((5.0/6.0))*p_B0(0,0)*u1_B0(0,0))*invDelta0block0;

       d1_rhoEu0_dx = (((1.0/2.0))*u0_B0(-2,0)*rhoE_B0(-2,0) - (3.0/2.0)*u0_B0(-1,0)*rhoE_B0(-1,0) -
            (1.0/12.0)*u0_B0(-3,0)*rhoE_B0(-3,0) + ((1.0/4.0))*u0_B0(1,0)*rhoE_B0(1,0) +
            ((5.0/6.0))*u0_B0(0,0)*rhoE_B0(0,0))*invDelta0block0;

       d1_rhoEu1_dx = (((1.0/2.0))*u1_B0(-2,0)*rhoE_B0(-2,0) - (3.0/2.0)*u1_B0(-1,0)*rhoE_B0(-1,0) -
            (1.0/12.0)*u1_B0(-3,0)*rhoE_B0(-3,0) + ((1.0/4.0))*u1_B0(1,0)*rhoE_B0(1,0) +
            ((5.0/6.0))*u1_B0(0,0)*rhoE_B0(0,0))*invDelta0block0;

       d1_inv_rhoErho_dx = (((1.0/2.0))*rhoE_B0(-2,0)/rho_B0(-2,0) - (3.0/2.0)*rhoE_B0(-1,0)/rho_B0(-1,0) -
            (1.0/12.0)*rhoE_B0(-3,0)/rho_B0(-3,0) + ((1.0/4.0))*rhoE_B0(1,0)/rho_B0(1,0) +
            ((5.0/6.0))*rhoE_B0(0,0)/rho_B0(0,0))*invDelta0block0;

       d1_rhou0_dx = (((1.0/2.0))*rhou0_B0(-2,0) - (3.0/2.0)*rhou0_B0(-1,0) - (1.0/12.0)*rhou0_B0(-3,0) +
            ((1.0/4.0))*rhou0_B0(1,0) + ((5.0/6.0))*rhou0_B0(0,0))*invDelta0block0;

       d1_rhou0u0_dx = (((1.0/2.0))*u0_B0(-2,0)*rhou0_B0(-2,0) - (3.0/2.0)*u0_B0(-1,0)*rhou0_B0(-1,0) -
            (1.0/12.0)*u0_B0(-3,0)*rhou0_B0(-3,0) + ((1.0/4.0))*u0_B0(1,0)*rhou0_B0(1,0) +
            ((5.0/6.0))*u0_B0(0,0)*rhou0_B0(0,0))*invDelta0block0;

       d1_rhou0u1_dx = (((1.0/2.0))*u1_B0(-2,0)*rhou0_B0(-2,0) - (3.0/2.0)*u1_B0(-1,0)*rhou0_B0(-1,0) -
            (1.0/12.0)*u1_B0(-3,0)*rhou0_B0(-3,0) + ((1.0/4.0))*u1_B0(1,0)*rhou0_B0(1,0) +
            ((5.0/6.0))*u1_B0(0,0)*rhou0_B0(0,0))*invDelta0block0;

       d1_rhou1_dx = (((1.0/2.0))*rhou1_B0(-2,0) - (3.0/2.0)*rhou1_B0(-1,0) - (1.0/12.0)*rhou1_B0(-3,0) +
            ((1.0/4.0))*rhou1_B0(1,0) + ((5.0/6.0))*rhou1_B0(0,0))*invDelta0block0;

       d1_rhou1u0_dx = (((1.0/2.0))*u0_B0(-2,0)*rhou1_B0(-2,0) - (3.0/2.0)*u0_B0(-1,0)*rhou1_B0(-1,0) -
            (1.0/12.0)*u0_B0(-3,0)*rhou1_B0(-3,0) + ((1.0/4.0))*u0_B0(1,0)*rhou1_B0(1,0) +
            ((5.0/6.0))*u0_B0(0,0)*rhou1_B0(0,0))*invDelta0block0;

       d1_rhou1u1_dx = (((1.0/2.0))*u1_B0(-2,0)*rhou1_B0(-2,0) - (3.0/2.0)*u1_B0(-1,0)*rhou1_B0(-1,0) -
            (1.0/12.0)*u1_B0(-3,0)*rhou1_B0(-3,0) + ((1.0/4.0))*u1_B0(1,0)*rhou1_B0(1,0) +
            ((5.0/6.0))*u1_B0(0,0)*rhou1_B0(0,0))*invDelta0block0;

   }

   else{

       d1_p_dx = (-(2.0/3.0)*p_B0(-1,0) - (1.0/12.0)*p_B0(2,0) + ((1.0/12.0))*p_B0(-2,0) +
            ((2.0/3.0))*p_B0(1,0))*invDelta0block0;

       d1_pu0_dx = (-(2.0/3.0)*p_B0(-1,0)*u0_B0(-1,0) - (1.0/12.0)*p_B0(2,0)*u0_B0(2,0) +
            ((1.0/12.0))*p_B0(-2,0)*u0_B0(-2,0) + ((2.0/3.0))*p_B0(1,0)*u0_B0(1,0))*invDelta0block0;

       d1_pu1_dx = (-(2.0/3.0)*p_B0(-1,0)*u1_B0(-1,0) - (1.0/12.0)*p_B0(2,0)*u1_B0(2,0) +
            ((1.0/12.0))*p_B0(-2,0)*u1_B0(-2,0) + ((2.0/3.0))*p_B0(1,0)*u1_B0(1,0))*invDelta0block0;

       d1_rhoEu0_dx = (-(2.0/3.0)*u0_B0(-1,0)*rhoE_B0(-1,0) - (1.0/12.0)*u0_B0(2,0)*rhoE_B0(2,0) +
            ((1.0/12.0))*u0_B0(-2,0)*rhoE_B0(-2,0) + ((2.0/3.0))*u0_B0(1,0)*rhoE_B0(1,0))*invDelta0block0;

       d1_rhoEu1_dx = (-(2.0/3.0)*u1_B0(-1,0)*rhoE_B0(-1,0) - (1.0/12.0)*u1_B0(2,0)*rhoE_B0(2,0) +
            ((1.0/12.0))*u1_B0(-2,0)*rhoE_B0(-2,0) + ((2.0/3.0))*u1_B0(1,0)*rhoE_B0(1,0))*invDelta0block0;

       d1_inv_rhoErho_dx = (-(2.0/3.0)*rhoE_B0(-1,0)/rho_B0(-1,0) - (1.0/12.0)*rhoE_B0(2,0)/rho_B0(2,0) +
            ((1.0/12.0))*rhoE_B0(-2,0)/rho_B0(-2,0) + ((2.0/3.0))*rhoE_B0(1,0)/rho_B0(1,0))*invDelta0block0;

       d1_rhou0_dx = (-(2.0/3.0)*rhou0_B0(-1,0) - (1.0/12.0)*rhou0_B0(2,0) + ((1.0/12.0))*rhou0_B0(-2,0) +
            ((2.0/3.0))*rhou0_B0(1,0))*invDelta0block0;

       d1_rhou0u0_dx = (-(2.0/3.0)*u0_B0(-1,0)*rhou0_B0(-1,0) - (1.0/12.0)*u0_B0(2,0)*rhou0_B0(2,0) +
            ((1.0/12.0))*u0_B0(-2,0)*rhou0_B0(-2,0) + ((2.0/3.0))*u0_B0(1,0)*rhou0_B0(1,0))*invDelta0block0;

       d1_rhou0u1_dx = (-(2.0/3.0)*u1_B0(-1,0)*rhou0_B0(-1,0) - (1.0/12.0)*u1_B0(2,0)*rhou0_B0(2,0) +
            ((1.0/12.0))*u1_B0(-2,0)*rhou0_B0(-2,0) + ((2.0/3.0))*u1_B0(1,0)*rhou0_B0(1,0))*invDelta0block0;

       d1_rhou1_dx = (-(2.0/3.0)*rhou1_B0(-1,0) - (1.0/12.0)*rhou1_B0(2,0) + ((1.0/12.0))*rhou1_B0(-2,0) +
            ((2.0/3.0))*rhou1_B0(1,0))*invDelta0block0;

       d1_rhou1u0_dx = (-(2.0/3.0)*u0_B0(-1,0)*rhou1_B0(-1,0) - (1.0/12.0)*u0_B0(2,0)*rhou1_B0(2,0) +
            ((1.0/12.0))*u0_B0(-2,0)*rhou1_B0(-2,0) + ((2.0/3.0))*u0_B0(1,0)*rhou1_B0(1,0))*invDelta0block0;

       d1_rhou1u1_dx = (-(2.0/3.0)*u1_B0(-1,0)*rhou1_B0(-1,0) - (1.0/12.0)*u1_B0(2,0)*rhou1_B0(2,0) +
            ((1.0/12.0))*u1_B0(-2,0)*rhou1_B0(-2,0) + ((2.0/3.0))*u1_B0(1,0)*rhou1_B0(1,0))*invDelta0block0;

   }

   if (idx[1] == 0){

       d1_p_dy = (-3*p_B0(0,2) + 4*p_B0(0,1) - (25.0/12.0)*p_B0(0,0) - (1.0/4.0)*p_B0(0,4) +
            ((4.0/3.0))*p_B0(0,3))*invDelta1block0;

       d1_pu0_dy = (-3*p_B0(0,2)*u0_B0(0,2) + 4*p_B0(0,1)*u0_B0(0,1) - (25.0/12.0)*p_B0(0,0)*u0_B0(0,0) -
            (1.0/4.0)*p_B0(0,4)*u0_B0(0,4) + ((4.0/3.0))*p_B0(0,3)*u0_B0(0,3))*invDelta1block0;

       d1_pu1_dy = (-3*p_B0(0,2)*u1_B0(0,2) + 4*p_B0(0,1)*u1_B0(0,1) - (25.0/12.0)*p_B0(0,0)*u1_B0(0,0) -
            (1.0/4.0)*p_B0(0,4)*u1_B0(0,4) + ((4.0/3.0))*p_B0(0,3)*u1_B0(0,3))*invDelta1block0;

       d1_rhoEu0_dy = (-3*u0_B0(0,2)*rhoE_B0(0,2) + 4*u0_B0(0,1)*rhoE_B0(0,1) - (25.0/12.0)*u0_B0(0,0)*rhoE_B0(0,0) -
            (1.0/4.0)*u0_B0(0,4)*rhoE_B0(0,4) + ((4.0/3.0))*u0_B0(0,3)*rhoE_B0(0,3))*invDelta1block0;

       d1_rhoEu1_dy = (-3*u1_B0(0,2)*rhoE_B0(0,2) + 4*u1_B0(0,1)*rhoE_B0(0,1) - (25.0/12.0)*u1_B0(0,0)*rhoE_B0(0,0) -
            (1.0/4.0)*u1_B0(0,4)*rhoE_B0(0,4) + ((4.0/3.0))*u1_B0(0,3)*rhoE_B0(0,3))*invDelta1block0;

       d1_inv_rhoErho_dy = (-3*rhoE_B0(0,2)/rho_B0(0,2) + 4*rhoE_B0(0,1)/rho_B0(0,1) -
            (25.0/12.0)*rhoE_B0(0,0)/rho_B0(0,0) - (1.0/4.0)*rhoE_B0(0,4)/rho_B0(0,4) +
            ((4.0/3.0))*rhoE_B0(0,3)/rho_B0(0,3))*invDelta1block0;

       d1_rhou0_dy = (-3*rhou0_B0(0,2) + 4*rhou0_B0(0,1) - (25.0/12.0)*rhou0_B0(0,0) - (1.0/4.0)*rhou0_B0(0,4) +
            ((4.0/3.0))*rhou0_B0(0,3))*invDelta1block0;

       d1_rhou0u0_dy = (-3*u0_B0(0,2)*rhou0_B0(0,2) + 4*u0_B0(0,1)*rhou0_B0(0,1) - (25.0/12.0)*u0_B0(0,0)*rhou0_B0(0,0)
            - (1.0/4.0)*u0_B0(0,4)*rhou0_B0(0,4) + ((4.0/3.0))*u0_B0(0,3)*rhou0_B0(0,3))*invDelta1block0;

       d1_rhou0u1_dy = (-3*u1_B0(0,2)*rhou0_B0(0,2) + 4*u1_B0(0,1)*rhou0_B0(0,1) - (25.0/12.0)*u1_B0(0,0)*rhou0_B0(0,0)
            - (1.0/4.0)*u1_B0(0,4)*rhou0_B0(0,4) + ((4.0/3.0))*u1_B0(0,3)*rhou0_B0(0,3))*invDelta1block0;

       d1_rhou1_dy = (-3*rhou1_B0(0,2) + 4*rhou1_B0(0,1) - (25.0/12.0)*rhou1_B0(0,0) - (1.0/4.0)*rhou1_B0(0,4) +
            ((4.0/3.0))*rhou1_B0(0,3))*invDelta1block0;

       d1_rhou1u0_dy = (-3*u0_B0(0,2)*rhou1_B0(0,2) + 4*u0_B0(0,1)*rhou1_B0(0,1) - (25.0/12.0)*u0_B0(0,0)*rhou1_B0(0,0)
            - (1.0/4.0)*u0_B0(0,4)*rhou1_B0(0,4) + ((4.0/3.0))*u0_B0(0,3)*rhou1_B0(0,3))*invDelta1block0;

       d1_rhou1u1_dy = (-3*u1_B0(0,2)*rhou1_B0(0,2) + 4*u1_B0(0,1)*rhou1_B0(0,1) - (25.0/12.0)*u1_B0(0,0)*rhou1_B0(0,0)
            - (1.0/4.0)*u1_B0(0,4)*rhou1_B0(0,4) + ((4.0/3.0))*u1_B0(0,3)*rhou1_B0(0,3))*invDelta1block0;

   }

   else if (idx[1] == 1){

       d1_p_dy = (-(5.0/6.0)*p_B0(0,0) - (1.0/2.0)*p_B0(0,2) - (1.0/4.0)*p_B0(0,-1) + ((1.0/12.0))*p_B0(0,3) +
            ((3.0/2.0))*p_B0(0,1))*invDelta1block0;

       d1_pu0_dy = (-(5.0/6.0)*p_B0(0,0)*u0_B0(0,0) - (1.0/2.0)*p_B0(0,2)*u0_B0(0,2) - (1.0/4.0)*p_B0(0,-1)*u0_B0(0,-1)
            + ((1.0/12.0))*p_B0(0,3)*u0_B0(0,3) + ((3.0/2.0))*p_B0(0,1)*u0_B0(0,1))*invDelta1block0;

       d1_pu1_dy = (-(5.0/6.0)*p_B0(0,0)*u1_B0(0,0) - (1.0/2.0)*p_B0(0,2)*u1_B0(0,2) - (1.0/4.0)*p_B0(0,-1)*u1_B0(0,-1)
            + ((1.0/12.0))*p_B0(0,3)*u1_B0(0,3) + ((3.0/2.0))*p_B0(0,1)*u1_B0(0,1))*invDelta1block0;

       d1_rhoEu0_dy = (-(5.0/6.0)*u0_B0(0,0)*rhoE_B0(0,0) - (1.0/2.0)*u0_B0(0,2)*rhoE_B0(0,2) -
            (1.0/4.0)*u0_B0(0,-1)*rhoE_B0(0,-1) + ((1.0/12.0))*u0_B0(0,3)*rhoE_B0(0,3) +
            ((3.0/2.0))*u0_B0(0,1)*rhoE_B0(0,1))*invDelta1block0;

       d1_rhoEu1_dy = (-(5.0/6.0)*u1_B0(0,0)*rhoE_B0(0,0) - (1.0/2.0)*u1_B0(0,2)*rhoE_B0(0,2) -
            (1.0/4.0)*u1_B0(0,-1)*rhoE_B0(0,-1) + ((1.0/12.0))*u1_B0(0,3)*rhoE_B0(0,3) +
            ((3.0/2.0))*u1_B0(0,1)*rhoE_B0(0,1))*invDelta1block0;

       d1_inv_rhoErho_dy = (-(5.0/6.0)*rhoE_B0(0,0)/rho_B0(0,0) - (1.0/2.0)*rhoE_B0(0,2)/rho_B0(0,2) -
            (1.0/4.0)*rhoE_B0(0,-1)/rho_B0(0,-1) + ((1.0/12.0))*rhoE_B0(0,3)/rho_B0(0,3) +
            ((3.0/2.0))*rhoE_B0(0,1)/rho_B0(0,1))*invDelta1block0;

       d1_rhou0_dy = (-(5.0/6.0)*rhou0_B0(0,0) - (1.0/2.0)*rhou0_B0(0,2) - (1.0/4.0)*rhou0_B0(0,-1) +
            ((1.0/12.0))*rhou0_B0(0,3) + ((3.0/2.0))*rhou0_B0(0,1))*invDelta1block0;

       d1_rhou0u0_dy = (-(5.0/6.0)*u0_B0(0,0)*rhou0_B0(0,0) - (1.0/2.0)*u0_B0(0,2)*rhou0_B0(0,2) -
            (1.0/4.0)*u0_B0(0,-1)*rhou0_B0(0,-1) + ((1.0/12.0))*u0_B0(0,3)*rhou0_B0(0,3) +
            ((3.0/2.0))*u0_B0(0,1)*rhou0_B0(0,1))*invDelta1block0;

       d1_rhou0u1_dy = (-(5.0/6.0)*u1_B0(0,0)*rhou0_B0(0,0) - (1.0/2.0)*u1_B0(0,2)*rhou0_B0(0,2) -
            (1.0/4.0)*u1_B0(0,-1)*rhou0_B0(0,-1) + ((1.0/12.0))*u1_B0(0,3)*rhou0_B0(0,3) +
            ((3.0/2.0))*u1_B0(0,1)*rhou0_B0(0,1))*invDelta1block0;

       d1_rhou1_dy = (-(5.0/6.0)*rhou1_B0(0,0) - (1.0/2.0)*rhou1_B0(0,2) - (1.0/4.0)*rhou1_B0(0,-1) +
            ((1.0/12.0))*rhou1_B0(0,3) + ((3.0/2.0))*rhou1_B0(0,1))*invDelta1block0;

       d1_rhou1u0_dy = (-(5.0/6.0)*u0_B0(0,0)*rhou1_B0(0,0) - (1.0/2.0)*u0_B0(0,2)*rhou1_B0(0,2) -
            (1.0/4.0)*u0_B0(0,-1)*rhou1_B0(0,-1) + ((1.0/12.0))*u0_B0(0,3)*rhou1_B0(0,3) +
            ((3.0/2.0))*u0_B0(0,1)*rhou1_B0(0,1))*invDelta1block0;

       d1_rhou1u1_dy = (-(5.0/6.0)*u1_B0(0,0)*rhou1_B0(0,0) - (1.0/2.0)*u1_B0(0,2)*rhou1_B0(0,2) -
            (1.0/4.0)*u1_B0(0,-1)*rhou1_B0(0,-1) + ((1.0/12.0))*u1_B0(0,3)*rhou1_B0(0,3) +
            ((3.0/2.0))*u1_B0(0,1)*rhou1_B0(0,1))*invDelta1block0;

   }

   else{

       d1_p_dy = (-(2.0/3.0)*p_B0(0,-1) - (1.0/12.0)*p_B0(0,2) + ((1.0/12.0))*p_B0(0,-2) +
            ((2.0/3.0))*p_B0(0,1))*invDelta1block0;

       d1_pu0_dy = (-(2.0/3.0)*p_B0(0,-1)*u0_B0(0,-1) - (1.0/12.0)*p_B0(0,2)*u0_B0(0,2) +
            ((1.0/12.0))*p_B0(0,-2)*u0_B0(0,-2) + ((2.0/3.0))*p_B0(0,1)*u0_B0(0,1))*invDelta1block0;

       d1_pu1_dy = (-(2.0/3.0)*p_B0(0,-1)*u1_B0(0,-1) - (1.0/12.0)*p_B0(0,2)*u1_B0(0,2) +
            ((1.0/12.0))*p_B0(0,-2)*u1_B0(0,-2) + ((2.0/3.0))*p_B0(0,1)*u1_B0(0,1))*invDelta1block0;

       d1_rhoEu0_dy = (-(2.0/3.0)*u0_B0(0,-1)*rhoE_B0(0,-1) - (1.0/12.0)*u0_B0(0,2)*rhoE_B0(0,2) +
            ((1.0/12.0))*u0_B0(0,-2)*rhoE_B0(0,-2) + ((2.0/3.0))*u0_B0(0,1)*rhoE_B0(0,1))*invDelta1block0;

       d1_rhoEu1_dy = (-(2.0/3.0)*u1_B0(0,-1)*rhoE_B0(0,-1) - (1.0/12.0)*u1_B0(0,2)*rhoE_B0(0,2) +
            ((1.0/12.0))*u1_B0(0,-2)*rhoE_B0(0,-2) + ((2.0/3.0))*u1_B0(0,1)*rhoE_B0(0,1))*invDelta1block0;

       d1_inv_rhoErho_dy = (-(2.0/3.0)*rhoE_B0(0,-1)/rho_B0(0,-1) - (1.0/12.0)*rhoE_B0(0,2)/rho_B0(0,2) +
            ((1.0/12.0))*rhoE_B0(0,-2)/rho_B0(0,-2) + ((2.0/3.0))*rhoE_B0(0,1)/rho_B0(0,1))*invDelta1block0;

       d1_rhou0_dy = (-(2.0/3.0)*rhou0_B0(0,-1) - (1.0/12.0)*rhou0_B0(0,2) + ((1.0/12.0))*rhou0_B0(0,-2) +
            ((2.0/3.0))*rhou0_B0(0,1))*invDelta1block0;

       d1_rhou0u0_dy = (-(2.0/3.0)*u0_B0(0,-1)*rhou0_B0(0,-1) - (1.0/12.0)*u0_B0(0,2)*rhou0_B0(0,2) +
            ((1.0/12.0))*u0_B0(0,-2)*rhou0_B0(0,-2) + ((2.0/3.0))*u0_B0(0,1)*rhou0_B0(0,1))*invDelta1block0;

       d1_rhou0u1_dy = (-(2.0/3.0)*u1_B0(0,-1)*rhou0_B0(0,-1) - (1.0/12.0)*u1_B0(0,2)*rhou0_B0(0,2) +
            ((1.0/12.0))*u1_B0(0,-2)*rhou0_B0(0,-2) + ((2.0/3.0))*u1_B0(0,1)*rhou0_B0(0,1))*invDelta1block0;

       d1_rhou1_dy = (-(2.0/3.0)*rhou1_B0(0,-1) - (1.0/12.0)*rhou1_B0(0,2) + ((1.0/12.0))*rhou1_B0(0,-2) +
            ((2.0/3.0))*rhou1_B0(0,1))*invDelta1block0;

       d1_rhou1u0_dy = (-(2.0/3.0)*u0_B0(0,-1)*rhou1_B0(0,-1) - (1.0/12.0)*u0_B0(0,2)*rhou1_B0(0,2) +
            ((1.0/12.0))*u0_B0(0,-2)*rhou1_B0(0,-2) + ((2.0/3.0))*u0_B0(0,1)*rhou1_B0(0,1))*invDelta1block0;

       d1_rhou1u1_dy = (-(2.0/3.0)*u1_B0(0,-1)*rhou1_B0(0,-1) - (1.0/12.0)*u1_B0(0,2)*rhou1_B0(0,2) +
            ((1.0/12.0))*u1_B0(0,-2)*rhou1_B0(0,-2) + ((2.0/3.0))*u1_B0(0,1)*rhou1_B0(0,1))*invDelta1block0;

   }

    Residual0_B0(0,0) = -D00_B0(0,0)*d1_rhou0_dx - D01_B0(0,0)*d1_rhou1_dx - D10_B0(0,0)*d1_rhou0_dy -
      D11_B0(0,0)*d1_rhou1_dy;

    Residual1_B0(0,0) = -D00_B0(0,0)*d1_p_dx - D10_B0(0,0)*d1_p_dy - (1.0/2.0)*(D00_B0(0,0)*wk0_B0(0,0) +
      D10_B0(0,0)*wk3_B0(0,0))*rhou0_B0(0,0) - (1.0/2.0)*(D00_B0(0,0)*d1_rhou0_dx + D10_B0(0,0)*d1_rhou0_dy)*u0_B0(0,0)
      - (1.0/2.0)*(D01_B0(0,0)*wk0_B0(0,0) + D11_B0(0,0)*wk3_B0(0,0))*rhou1_B0(0,0) - (1.0/2.0)*(D01_B0(0,0)*d1_rhou1_dx
      + D11_B0(0,0)*d1_rhou1_dy)*u0_B0(0,0) - (1.0/2.0)*D00_B0(0,0)*d1_rhou0u0_dx - (1.0/2.0)*D01_B0(0,0)*d1_rhou0u1_dx
      - (1.0/2.0)*D10_B0(0,0)*d1_rhou0u0_dy - (1.0/2.0)*D11_B0(0,0)*d1_rhou0u1_dy;

    Residual2_B0(0,0) = -D01_B0(0,0)*d1_p_dx - D11_B0(0,0)*d1_p_dy - (1.0/2.0)*(D00_B0(0,0)*wk1_B0(0,0) +
      D10_B0(0,0)*wk4_B0(0,0))*rhou0_B0(0,0) - (1.0/2.0)*(D01_B0(0,0)*wk1_B0(0,0) +
      D11_B0(0,0)*wk4_B0(0,0))*rhou1_B0(0,0) - (1.0/2.0)*(D00_B0(0,0)*d1_rhou0_dx + D01_B0(0,0)*d1_rhou1_dx +
      D10_B0(0,0)*d1_rhou0_dy + D11_B0(0,0)*d1_rhou1_dy)*u1_B0(0,0) - (1.0/2.0)*D00_B0(0,0)*d1_rhou1u0_dx -
      (1.0/2.0)*D01_B0(0,0)*d1_rhou1u1_dx - (1.0/2.0)*D10_B0(0,0)*d1_rhou1u0_dy - (1.0/2.0)*D11_B0(0,0)*d1_rhou1u1_dy;

    Residual3_B0(0,0) = -D00_B0(0,0)*d1_pu0_dx - D01_B0(0,0)*d1_pu1_dx - D10_B0(0,0)*d1_pu0_dy - D11_B0(0,0)*d1_pu1_dy -
      (1.0/2.0)*(D00_B0(0,0)*d1_inv_rhoErho_dx + D10_B0(0,0)*d1_inv_rhoErho_dy)*rhou0_B0(0,0) -
      (1.0/2.0)*(D01_B0(0,0)*d1_inv_rhoErho_dx + D11_B0(0,0)*d1_inv_rhoErho_dy)*rhou1_B0(0,0) -
      (1.0/2.0)*D00_B0(0,0)*d1_rhoEu0_dx - (1.0/2.0)*D01_B0(0,0)*d1_rhoEu1_dx - (1.0/2.0)*D10_B0(0,0)*d1_rhoEu0_dy -
      (1.0/2.0)*D11_B0(0,0)*d1_rhoEu1_dy - (1.0/2.0)*(D00_B0(0,0)*d1_rhou0_dx + D01_B0(0,0)*d1_rhou1_dx +
      D10_B0(0,0)*d1_rhou0_dy + D11_B0(0,0)*d1_rhou1_dy)*rhoE_B0(0,0)/rho_B0(0,0);

}

 void opensbliblock00Kernel022(const ACC<double> &D00_B0, const ACC<double> &D01_B0, const ACC<double> &D10_B0, const
ACC<double> &D11_B0, const ACC<double> &SD000_B0, const ACC<double> &SD001_B0, const ACC<double> &SD010_B0, const
ACC<double> &SD011_B0, const ACC<double> &SD100_B0, const ACC<double> &SD101_B0, const ACC<double> &SD110_B0, const
ACC<double> &SD111_B0, const ACC<double> &T_B0, const ACC<double> &mu_B0, const ACC<double> &u0_B0, const ACC<double>
&u1_B0, const ACC<double> &wk0_B0, const ACC<double> &wk1_B0, const ACC<double> &wk2_B0, const ACC<double> &wk3_B0,
const ACC<double> &wk4_B0, const ACC<double> &wk5_B0, ACC<double> &Residual1_B0, ACC<double> &Residual2_B0, ACC<double>
&Residual3_B0, const int *idx)
{
   double d1_mu_dx = 0.0;
   double d1_mu_dy = 0.0;
   double d1_wk0_dy = 0.0;
   double d1_wk1_dy = 0.0;
   double d1_wk2_dy = 0.0;
   double d2_T_dx = 0.0;
   double d2_T_dy = 0.0;
   double d2_u0_dx = 0.0;
   double d2_u0_dy = 0.0;
   double d2_u1_dx = 0.0;
   double d2_u1_dy = 0.0;
   if (idx[0] == 0){

       d1_mu_dx = (-3*mu_B0(2,0) + 4*mu_B0(1,0) - (25.0/12.0)*mu_B0(0,0) - (1.0/4.0)*mu_B0(4,0) +
            ((4.0/3.0))*mu_B0(3,0))*invDelta0block0;

   }

   else if (idx[0] == 1){

       d1_mu_dx = (-(5.0/6.0)*mu_B0(0,0) - (1.0/2.0)*mu_B0(2,0) - (1.0/4.0)*mu_B0(-1,0) + ((1.0/12.0))*mu_B0(3,0) +
            ((3.0/2.0))*mu_B0(1,0))*invDelta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       d1_mu_dx = (-4*mu_B0(-1,0) + 3*mu_B0(-2,0) - (4.0/3.0)*mu_B0(-3,0) + ((1.0/4.0))*mu_B0(-4,0) +
            ((25.0/12.0))*mu_B0(0,0))*invDelta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       d1_mu_dx = (((1.0/2.0))*mu_B0(-2,0) - (3.0/2.0)*mu_B0(-1,0) - (1.0/12.0)*mu_B0(-3,0) + ((1.0/4.0))*mu_B0(1,0) +
            ((5.0/6.0))*mu_B0(0,0))*invDelta0block0;

   }

   else{

       d1_mu_dx = (-(2.0/3.0)*mu_B0(-1,0) - (1.0/12.0)*mu_B0(2,0) + ((1.0/12.0))*mu_B0(-2,0) +
            ((2.0/3.0))*mu_B0(1,0))*invDelta0block0;

   }

   if (idx[0] == 0){

       d2_T_dx = (-(26.0/3.0)*T_B0(1,0) - (14.0/3.0)*T_B0(3,0) + ((11.0/12.0))*T_B0(4,0) + ((19.0/2.0))*T_B0(2,0) +
            ((35.0/12.0))*T_B0(0,0))*inv2Delta0block0;

       d2_u0_dx = (-(26.0/3.0)*u0_B0(1,0) - (14.0/3.0)*u0_B0(3,0) + ((11.0/12.0))*u0_B0(4,0) + ((19.0/2.0))*u0_B0(2,0) +
            ((35.0/12.0))*u0_B0(0,0))*inv2Delta0block0;

       d2_u1_dx = (-(26.0/3.0)*u1_B0(1,0) - (14.0/3.0)*u1_B0(3,0) + ((11.0/12.0))*u1_B0(4,0) + ((19.0/2.0))*u1_B0(2,0) +
            ((35.0/12.0))*u1_B0(0,0))*inv2Delta0block0;

   }

   else if (idx[0] == 1){

       d2_T_dx = (((1.0/2.0))*T_B0(1,0) - (5.0/3.0)*T_B0(0,0) - (1.0/12.0)*T_B0(3,0) + ((1.0/3.0))*T_B0(2,0) +
            ((11.0/12.0))*T_B0(-1,0))*inv2Delta0block0;

       d2_u0_dx = (((1.0/2.0))*u0_B0(1,0) - (5.0/3.0)*u0_B0(0,0) - (1.0/12.0)*u0_B0(3,0) + ((1.0/3.0))*u0_B0(2,0) +
            ((11.0/12.0))*u0_B0(-1,0))*inv2Delta0block0;

       d2_u1_dx = (((1.0/2.0))*u1_B0(1,0) - (5.0/3.0)*u1_B0(0,0) - (1.0/12.0)*u1_B0(3,0) + ((1.0/3.0))*u1_B0(2,0) +
            ((11.0/12.0))*u1_B0(-1,0))*inv2Delta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       d2_T_dx = (-(26.0/3.0)*T_B0(-1,0) - (14.0/3.0)*T_B0(-3,0) + ((11.0/12.0))*T_B0(-4,0) + ((19.0/2.0))*T_B0(-2,0) +
            ((35.0/12.0))*T_B0(0,0))*inv2Delta0block0;

       d2_u0_dx = (-(26.0/3.0)*u0_B0(-1,0) - (14.0/3.0)*u0_B0(-3,0) + ((11.0/12.0))*u0_B0(-4,0) +
            ((19.0/2.0))*u0_B0(-2,0) + ((35.0/12.0))*u0_B0(0,0))*inv2Delta0block0;

       d2_u1_dx = (-(26.0/3.0)*u1_B0(-1,0) - (14.0/3.0)*u1_B0(-3,0) + ((11.0/12.0))*u1_B0(-4,0) +
            ((19.0/2.0))*u1_B0(-2,0) + ((35.0/12.0))*u1_B0(0,0))*inv2Delta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       d2_T_dx = (((1.0/2.0))*T_B0(-1,0) - (5.0/3.0)*T_B0(0,0) - (1.0/12.0)*T_B0(-3,0) + ((1.0/3.0))*T_B0(-2,0) +
            ((11.0/12.0))*T_B0(1,0))*inv2Delta0block0;

       d2_u0_dx = (((1.0/2.0))*u0_B0(-1,0) - (5.0/3.0)*u0_B0(0,0) - (1.0/12.0)*u0_B0(-3,0) + ((1.0/3.0))*u0_B0(-2,0) +
            ((11.0/12.0))*u0_B0(1,0))*inv2Delta0block0;

       d2_u1_dx = (((1.0/2.0))*u1_B0(-1,0) - (5.0/3.0)*u1_B0(0,0) - (1.0/12.0)*u1_B0(-3,0) + ((1.0/3.0))*u1_B0(-2,0) +
            ((11.0/12.0))*u1_B0(1,0))*inv2Delta0block0;

   }

   else{

       d2_T_dx = (-(5.0/2.0)*T_B0(0,0) - (1.0/12.0)*T_B0(-2,0) - (1.0/12.0)*T_B0(2,0) + ((4.0/3.0))*T_B0(1,0) +
            ((4.0/3.0))*T_B0(-1,0))*inv2Delta0block0;

       d2_u0_dx = (-(5.0/2.0)*u0_B0(0,0) - (1.0/12.0)*u0_B0(-2,0) - (1.0/12.0)*u0_B0(2,0) + ((4.0/3.0))*u0_B0(1,0) +
            ((4.0/3.0))*u0_B0(-1,0))*inv2Delta0block0;

       d2_u1_dx = (-(5.0/2.0)*u1_B0(0,0) - (1.0/12.0)*u1_B0(-2,0) - (1.0/12.0)*u1_B0(2,0) + ((4.0/3.0))*u1_B0(1,0) +
            ((4.0/3.0))*u1_B0(-1,0))*inv2Delta0block0;

   }

   if (idx[1] == 0){

       d1_mu_dy = (-3*mu_B0(0,2) + 4*mu_B0(0,1) - (25.0/12.0)*mu_B0(0,0) - (1.0/4.0)*mu_B0(0,4) +
            ((4.0/3.0))*mu_B0(0,3))*invDelta1block0;

       d1_wk0_dy = (-3*wk0_B0(0,2) + 4*wk0_B0(0,1) - (25.0/12.0)*wk0_B0(0,0) - (1.0/4.0)*wk0_B0(0,4) +
            ((4.0/3.0))*wk0_B0(0,3))*invDelta1block0;

       d1_wk1_dy = (-3*wk1_B0(0,2) + 4*wk1_B0(0,1) - (25.0/12.0)*wk1_B0(0,0) - (1.0/4.0)*wk1_B0(0,4) +
            ((4.0/3.0))*wk1_B0(0,3))*invDelta1block0;

       d1_wk2_dy = (-3*wk2_B0(0,2) + 4*wk2_B0(0,1) - (25.0/12.0)*wk2_B0(0,0) - (1.0/4.0)*wk2_B0(0,4) +
            ((4.0/3.0))*wk2_B0(0,3))*invDelta1block0;

   }

   else if (idx[1] == 1){

       d1_mu_dy = (-(5.0/6.0)*mu_B0(0,0) - (1.0/2.0)*mu_B0(0,2) - (1.0/4.0)*mu_B0(0,-1) + ((1.0/12.0))*mu_B0(0,3) +
            ((3.0/2.0))*mu_B0(0,1))*invDelta1block0;

       d1_wk0_dy = (-(5.0/6.0)*wk0_B0(0,0) - (1.0/2.0)*wk0_B0(0,2) - (1.0/4.0)*wk0_B0(0,-1) + ((1.0/12.0))*wk0_B0(0,3) +
            ((3.0/2.0))*wk0_B0(0,1))*invDelta1block0;

       d1_wk1_dy = (-(5.0/6.0)*wk1_B0(0,0) - (1.0/2.0)*wk1_B0(0,2) - (1.0/4.0)*wk1_B0(0,-1) + ((1.0/12.0))*wk1_B0(0,3) +
            ((3.0/2.0))*wk1_B0(0,1))*invDelta1block0;

       d1_wk2_dy = (-(5.0/6.0)*wk2_B0(0,0) - (1.0/2.0)*wk2_B0(0,2) - (1.0/4.0)*wk2_B0(0,-1) + ((1.0/12.0))*wk2_B0(0,3) +
            ((3.0/2.0))*wk2_B0(0,1))*invDelta1block0;

   }

   else{

       d1_mu_dy = (-(2.0/3.0)*mu_B0(0,-1) - (1.0/12.0)*mu_B0(0,2) + ((1.0/12.0))*mu_B0(0,-2) +
            ((2.0/3.0))*mu_B0(0,1))*invDelta1block0;

       d1_wk0_dy = (-(2.0/3.0)*wk0_B0(0,-1) - (1.0/12.0)*wk0_B0(0,2) + ((1.0/12.0))*wk0_B0(0,-2) +
            ((2.0/3.0))*wk0_B0(0,1))*invDelta1block0;

       d1_wk1_dy = (-(2.0/3.0)*wk1_B0(0,-1) - (1.0/12.0)*wk1_B0(0,2) + ((1.0/12.0))*wk1_B0(0,-2) +
            ((2.0/3.0))*wk1_B0(0,1))*invDelta1block0;

       d1_wk2_dy = (-(2.0/3.0)*wk2_B0(0,-1) - (1.0/12.0)*wk2_B0(0,2) + ((1.0/12.0))*wk2_B0(0,-2) +
            ((2.0/3.0))*wk2_B0(0,1))*invDelta1block0;

   }

   if (idx[1] == 0){

       d2_T_dy = (-(26.0/3.0)*T_B0(0,1) - (14.0/3.0)*T_B0(0,3) + ((11.0/12.0))*T_B0(0,4) + ((19.0/2.0))*T_B0(0,2) +
            ((35.0/12.0))*T_B0(0,0))*inv2Delta1block0;

       d2_u0_dy = (-(26.0/3.0)*u0_B0(0,1) - (14.0/3.0)*u0_B0(0,3) + ((11.0/12.0))*u0_B0(0,4) + ((19.0/2.0))*u0_B0(0,2) +
            ((35.0/12.0))*u0_B0(0,0))*inv2Delta1block0;

       d2_u1_dy = (-(26.0/3.0)*u1_B0(0,1) - (14.0/3.0)*u1_B0(0,3) + ((11.0/12.0))*u1_B0(0,4) + ((19.0/2.0))*u1_B0(0,2) +
            ((35.0/12.0))*u1_B0(0,0))*inv2Delta1block0;

   }

   else if (idx[1] == 1){

       d2_T_dy = (((1.0/2.0))*T_B0(0,1) - (5.0/3.0)*T_B0(0,0) - (1.0/12.0)*T_B0(0,3) + ((1.0/3.0))*T_B0(0,2) +
            ((11.0/12.0))*T_B0(0,-1))*inv2Delta1block0;

       d2_u0_dy = (((1.0/2.0))*u0_B0(0,1) - (5.0/3.0)*u0_B0(0,0) - (1.0/12.0)*u0_B0(0,3) + ((1.0/3.0))*u0_B0(0,2) +
            ((11.0/12.0))*u0_B0(0,-1))*inv2Delta1block0;

       d2_u1_dy = (((1.0/2.0))*u1_B0(0,1) - (5.0/3.0)*u1_B0(0,0) - (1.0/12.0)*u1_B0(0,3) + ((1.0/3.0))*u1_B0(0,2) +
            ((11.0/12.0))*u1_B0(0,-1))*inv2Delta1block0;

   }

   else{

       d2_T_dy = (-(5.0/2.0)*T_B0(0,0) - (1.0/12.0)*T_B0(0,-2) - (1.0/12.0)*T_B0(0,2) + ((4.0/3.0))*T_B0(0,1) +
            ((4.0/3.0))*T_B0(0,-1))*inv2Delta1block0;

       d2_u0_dy = (-(5.0/2.0)*u0_B0(0,0) - (1.0/12.0)*u0_B0(0,-2) - (1.0/12.0)*u0_B0(0,2) + ((4.0/3.0))*u0_B0(0,1) +
            ((4.0/3.0))*u0_B0(0,-1))*inv2Delta1block0;

       d2_u1_dy = (-(5.0/2.0)*u1_B0(0,0) - (1.0/12.0)*u1_B0(0,-2) - (1.0/12.0)*u1_B0(0,2) + ((4.0/3.0))*u1_B0(0,1) +
            ((4.0/3.0))*u1_B0(0,-1))*inv2Delta1block0;

   }

    Residual1_B0(0,0) = (D01_B0(0,0)*d1_mu_dx + D11_B0(0,0)*d1_mu_dy)*(D00_B0(0,0)*wk1_B0(0,0) + D01_B0(0,0)*wk0_B0(0,0)
      + D10_B0(0,0)*wk4_B0(0,0) + D11_B0(0,0)*wk3_B0(0,0))*invRe + ((1.0/3.0))*(3*(D01_B0(0,0)*D01_B0(0,0))*d2_u0_dx +
      3*(D11_B0(0,0)*D11_B0(0,0))*d2_u0_dy + 4*(D00_B0(0,0)*D00_B0(0,0))*d2_u0_dx + 4*(D10_B0(0,0)*D10_B0(0,0))*d2_u0_dy
      + D00_B0(0,0)*D01_B0(0,0)*d2_u1_dx + D00_B0(0,0)*D11_B0(0,0)*d1_wk1_dy + D01_B0(0,0)*D10_B0(0,0)*d1_wk1_dy +
      D10_B0(0,0)*D11_B0(0,0)*d2_u1_dy - 2*D00_B0(0,0)*wk1_B0(0,0)*SD010_B0(0,0) -
      2*D00_B0(0,0)*wk4_B0(0,0)*SD110_B0(0,0) - 2*D10_B0(0,0)*wk1_B0(0,0)*SD011_B0(0,0) -
      2*D10_B0(0,0)*wk4_B0(0,0)*SD111_B0(0,0) + 3*D01_B0(0,0)*wk0_B0(0,0)*SD010_B0(0,0) +
      3*D01_B0(0,0)*wk1_B0(0,0)*SD000_B0(0,0) + 3*D01_B0(0,0)*wk3_B0(0,0)*SD110_B0(0,0) +
      3*D01_B0(0,0)*wk4_B0(0,0)*SD100_B0(0,0) + 3*D11_B0(0,0)*wk0_B0(0,0)*SD011_B0(0,0) +
      3*D11_B0(0,0)*wk1_B0(0,0)*SD001_B0(0,0) + 3*D11_B0(0,0)*wk3_B0(0,0)*SD111_B0(0,0) +
      3*D11_B0(0,0)*wk4_B0(0,0)*SD101_B0(0,0) + 4*D00_B0(0,0)*wk0_B0(0,0)*SD000_B0(0,0) +
      4*D00_B0(0,0)*wk3_B0(0,0)*SD100_B0(0,0) + 4*D10_B0(0,0)*wk0_B0(0,0)*SD001_B0(0,0) +
      4*D10_B0(0,0)*wk3_B0(0,0)*SD101_B0(0,0) + 6*D01_B0(0,0)*D11_B0(0,0)*d1_wk0_dy +
      8*D00_B0(0,0)*D10_B0(0,0)*d1_wk0_dy)*invRe*mu_B0(0,0) + ((2.0/3.0))*(D00_B0(0,0)*d1_mu_dx +
      D10_B0(0,0)*d1_mu_dy)*(-D01_B0(0,0)*wk1_B0(0,0) - D11_B0(0,0)*wk4_B0(0,0) + 2*D00_B0(0,0)*wk0_B0(0,0) +
      2*D10_B0(0,0)*wk3_B0(0,0))*invRe + Residual1_B0(0,0);

    Residual2_B0(0,0) = (D00_B0(0,0)*d1_mu_dx + D10_B0(0,0)*d1_mu_dy)*(D00_B0(0,0)*wk1_B0(0,0) + D01_B0(0,0)*wk0_B0(0,0)
      + D10_B0(0,0)*wk4_B0(0,0) + D11_B0(0,0)*wk3_B0(0,0))*invRe - (2.0/3.0)*(D01_B0(0,0)*d1_mu_dx +
      D11_B0(0,0)*d1_mu_dy)*(D00_B0(0,0)*wk0_B0(0,0) + D10_B0(0,0)*wk3_B0(0,0) - 2*D01_B0(0,0)*wk1_B0(0,0) -
      2*D11_B0(0,0)*wk4_B0(0,0))*invRe + ((1.0/3.0))*(3*(D00_B0(0,0)*D00_B0(0,0))*d2_u1_dx +
      3*(D10_B0(0,0)*D10_B0(0,0))*d2_u1_dy + 4*(D01_B0(0,0)*D01_B0(0,0))*d2_u1_dx + 4*(D11_B0(0,0)*D11_B0(0,0))*d2_u1_dy
      + D00_B0(0,0)*D01_B0(0,0)*d2_u0_dx + D00_B0(0,0)*D11_B0(0,0)*d1_wk0_dy + D01_B0(0,0)*D10_B0(0,0)*d1_wk0_dy +
      D10_B0(0,0)*D11_B0(0,0)*d2_u0_dy - 2*D01_B0(0,0)*wk0_B0(0,0)*SD000_B0(0,0) -
      2*D01_B0(0,0)*wk3_B0(0,0)*SD100_B0(0,0) - 2*D11_B0(0,0)*wk0_B0(0,0)*SD001_B0(0,0) -
      2*D11_B0(0,0)*wk3_B0(0,0)*SD101_B0(0,0) + 3*D00_B0(0,0)*wk0_B0(0,0)*SD010_B0(0,0) +
      3*D00_B0(0,0)*wk1_B0(0,0)*SD000_B0(0,0) + 3*D00_B0(0,0)*wk3_B0(0,0)*SD110_B0(0,0) +
      3*D00_B0(0,0)*wk4_B0(0,0)*SD100_B0(0,0) + 3*D10_B0(0,0)*wk0_B0(0,0)*SD011_B0(0,0) +
      3*D10_B0(0,0)*wk1_B0(0,0)*SD001_B0(0,0) + 3*D10_B0(0,0)*wk3_B0(0,0)*SD111_B0(0,0) +
      3*D10_B0(0,0)*wk4_B0(0,0)*SD101_B0(0,0) + 4*D01_B0(0,0)*wk1_B0(0,0)*SD010_B0(0,0) +
      4*D01_B0(0,0)*wk4_B0(0,0)*SD110_B0(0,0) + 4*D11_B0(0,0)*wk1_B0(0,0)*SD011_B0(0,0) +
      4*D11_B0(0,0)*wk4_B0(0,0)*SD111_B0(0,0) + 6*D00_B0(0,0)*D10_B0(0,0)*d1_wk1_dy +
      8*D01_B0(0,0)*D11_B0(0,0)*d1_wk1_dy)*invRe*mu_B0(0,0) + Residual2_B0(0,0);

    Residual3_B0(0,0) = (D00_B0(0,0)*wk1_B0(0,0) + D10_B0(0,0)*wk4_B0(0,0))*(D00_B0(0,0)*wk1_B0(0,0) +
      D01_B0(0,0)*wk0_B0(0,0) + D10_B0(0,0)*wk4_B0(0,0) + D11_B0(0,0)*wk3_B0(0,0))*invRe*mu_B0(0,0) +
      (D00_B0(0,0)*d1_mu_dx + D10_B0(0,0)*d1_mu_dy)*(D00_B0(0,0)*wk1_B0(0,0) + D01_B0(0,0)*wk0_B0(0,0) +
      D10_B0(0,0)*wk4_B0(0,0) + D11_B0(0,0)*wk3_B0(0,0))*invRe*u1_B0(0,0) + (D01_B0(0,0)*wk0_B0(0,0) +
      D11_B0(0,0)*wk3_B0(0,0))*(D00_B0(0,0)*wk1_B0(0,0) + D01_B0(0,0)*wk0_B0(0,0) + D10_B0(0,0)*wk4_B0(0,0) +
      D11_B0(0,0)*wk3_B0(0,0))*invRe*mu_B0(0,0) + (D01_B0(0,0)*d1_mu_dx + D11_B0(0,0)*d1_mu_dy)*(D00_B0(0,0)*wk1_B0(0,0)
      + D01_B0(0,0)*wk0_B0(0,0) + D10_B0(0,0)*wk4_B0(0,0) + D11_B0(0,0)*wk3_B0(0,0))*invRe*u0_B0(0,0) -
      (2.0/3.0)*(D01_B0(0,0)*wk1_B0(0,0) + D11_B0(0,0)*wk4_B0(0,0))*(D00_B0(0,0)*wk0_B0(0,0) + D10_B0(0,0)*wk3_B0(0,0) -
      2*D01_B0(0,0)*wk1_B0(0,0) - 2*D11_B0(0,0)*wk4_B0(0,0))*invRe*mu_B0(0,0) - (2.0/3.0)*(D01_B0(0,0)*d1_mu_dx +
      D11_B0(0,0)*d1_mu_dy)*(D00_B0(0,0)*wk0_B0(0,0) + D10_B0(0,0)*wk3_B0(0,0) - 2*D01_B0(0,0)*wk1_B0(0,0) -
      2*D11_B0(0,0)*wk4_B0(0,0))*invRe*u1_B0(0,0) + ((1.0/3.0))*(3*(D00_B0(0,0)*D00_B0(0,0))*d2_u1_dx +
      3*(D10_B0(0,0)*D10_B0(0,0))*d2_u1_dy + 4*(D01_B0(0,0)*D01_B0(0,0))*d2_u1_dx + 4*(D11_B0(0,0)*D11_B0(0,0))*d2_u1_dy
      + D00_B0(0,0)*D01_B0(0,0)*d2_u0_dx + D00_B0(0,0)*D11_B0(0,0)*d1_wk0_dy + D01_B0(0,0)*D10_B0(0,0)*d1_wk0_dy +
      D10_B0(0,0)*D11_B0(0,0)*d2_u0_dy - 2*D01_B0(0,0)*wk0_B0(0,0)*SD000_B0(0,0) -
      2*D01_B0(0,0)*wk3_B0(0,0)*SD100_B0(0,0) - 2*D11_B0(0,0)*wk0_B0(0,0)*SD001_B0(0,0) -
      2*D11_B0(0,0)*wk3_B0(0,0)*SD101_B0(0,0) + 3*D00_B0(0,0)*wk0_B0(0,0)*SD010_B0(0,0) +
      3*D00_B0(0,0)*wk1_B0(0,0)*SD000_B0(0,0) + 3*D00_B0(0,0)*wk3_B0(0,0)*SD110_B0(0,0) +
      3*D00_B0(0,0)*wk4_B0(0,0)*SD100_B0(0,0) + 3*D10_B0(0,0)*wk0_B0(0,0)*SD011_B0(0,0) +
      3*D10_B0(0,0)*wk1_B0(0,0)*SD001_B0(0,0) + 3*D10_B0(0,0)*wk3_B0(0,0)*SD111_B0(0,0) +
      3*D10_B0(0,0)*wk4_B0(0,0)*SD101_B0(0,0) + 4*D01_B0(0,0)*wk1_B0(0,0)*SD010_B0(0,0) +
      4*D01_B0(0,0)*wk4_B0(0,0)*SD110_B0(0,0) + 4*D11_B0(0,0)*wk1_B0(0,0)*SD011_B0(0,0) +
      4*D11_B0(0,0)*wk4_B0(0,0)*SD111_B0(0,0) + 6*D00_B0(0,0)*D10_B0(0,0)*d1_wk1_dy +
      8*D01_B0(0,0)*D11_B0(0,0)*d1_wk1_dy)*invRe*mu_B0(0,0)*u1_B0(0,0) +
      ((1.0/3.0))*(3*(D01_B0(0,0)*D01_B0(0,0))*d2_u0_dx + 3*(D11_B0(0,0)*D11_B0(0,0))*d2_u0_dy +
      4*(D00_B0(0,0)*D00_B0(0,0))*d2_u0_dx + 4*(D10_B0(0,0)*D10_B0(0,0))*d2_u0_dy + D00_B0(0,0)*D01_B0(0,0)*d2_u1_dx +
      D00_B0(0,0)*D11_B0(0,0)*d1_wk1_dy + D01_B0(0,0)*D10_B0(0,0)*d1_wk1_dy + D10_B0(0,0)*D11_B0(0,0)*d2_u1_dy -
      2*D00_B0(0,0)*wk1_B0(0,0)*SD010_B0(0,0) - 2*D00_B0(0,0)*wk4_B0(0,0)*SD110_B0(0,0) -
      2*D10_B0(0,0)*wk1_B0(0,0)*SD011_B0(0,0) - 2*D10_B0(0,0)*wk4_B0(0,0)*SD111_B0(0,0) +
      3*D01_B0(0,0)*wk0_B0(0,0)*SD010_B0(0,0) + 3*D01_B0(0,0)*wk1_B0(0,0)*SD000_B0(0,0) +
      3*D01_B0(0,0)*wk3_B0(0,0)*SD110_B0(0,0) + 3*D01_B0(0,0)*wk4_B0(0,0)*SD100_B0(0,0) +
      3*D11_B0(0,0)*wk0_B0(0,0)*SD011_B0(0,0) + 3*D11_B0(0,0)*wk1_B0(0,0)*SD001_B0(0,0) +
      3*D11_B0(0,0)*wk3_B0(0,0)*SD111_B0(0,0) + 3*D11_B0(0,0)*wk4_B0(0,0)*SD101_B0(0,0) +
      4*D00_B0(0,0)*wk0_B0(0,0)*SD000_B0(0,0) + 4*D00_B0(0,0)*wk3_B0(0,0)*SD100_B0(0,0) +
      4*D10_B0(0,0)*wk0_B0(0,0)*SD001_B0(0,0) + 4*D10_B0(0,0)*wk3_B0(0,0)*SD101_B0(0,0) +
      6*D01_B0(0,0)*D11_B0(0,0)*d1_wk0_dy + 8*D00_B0(0,0)*D10_B0(0,0)*d1_wk0_dy)*invRe*mu_B0(0,0)*u0_B0(0,0) +
      ((2.0/3.0))*(D00_B0(0,0)*wk0_B0(0,0) + D10_B0(0,0)*wk3_B0(0,0))*(-D01_B0(0,0)*wk1_B0(0,0) -
      D11_B0(0,0)*wk4_B0(0,0) + 2*D00_B0(0,0)*wk0_B0(0,0) + 2*D10_B0(0,0)*wk3_B0(0,0))*invRe*mu_B0(0,0) +
      ((2.0/3.0))*(D00_B0(0,0)*d1_mu_dx + D10_B0(0,0)*d1_mu_dy)*(-D01_B0(0,0)*wk1_B0(0,0) - D11_B0(0,0)*wk4_B0(0,0) +
      2*D00_B0(0,0)*wk0_B0(0,0) + 2*D10_B0(0,0)*wk3_B0(0,0))*invRe*u0_B0(0,0) + (D00_B0(0,0)*wk2_B0(0,0) +
      D10_B0(0,0)*wk5_B0(0,0))*(D00_B0(0,0)*d1_mu_dx + D10_B0(0,0)*d1_mu_dy)*invPr*invRe*inv2Minf*inv_gamma_m1 +
      (D01_B0(0,0)*wk2_B0(0,0) + D11_B0(0,0)*wk5_B0(0,0))*(D01_B0(0,0)*d1_mu_dx +
      D11_B0(0,0)*d1_mu_dy)*invPr*invRe*inv2Minf*inv_gamma_m1 + ((D00_B0(0,0)*D00_B0(0,0))*d2_T_dx +
      (D01_B0(0,0)*D01_B0(0,0))*d2_T_dx + (D10_B0(0,0)*D10_B0(0,0))*d2_T_dy + (D11_B0(0,0)*D11_B0(0,0))*d2_T_dy +
      D00_B0(0,0)*wk2_B0(0,0)*SD000_B0(0,0) + D00_B0(0,0)*wk5_B0(0,0)*SD100_B0(0,0) +
      D01_B0(0,0)*wk2_B0(0,0)*SD010_B0(0,0) + D01_B0(0,0)*wk5_B0(0,0)*SD110_B0(0,0) +
      D10_B0(0,0)*wk2_B0(0,0)*SD001_B0(0,0) + D10_B0(0,0)*wk5_B0(0,0)*SD101_B0(0,0) +
      D11_B0(0,0)*wk2_B0(0,0)*SD011_B0(0,0) + D11_B0(0,0)*wk5_B0(0,0)*SD111_B0(0,0) +
      2*D00_B0(0,0)*D10_B0(0,0)*d1_wk2_dy +
      2*D01_B0(0,0)*D11_B0(0,0)*d1_wk2_dy)*invPr*invRe*inv2Minf*inv_gamma_m1*mu_B0(0,0) + Residual3_B0(0,0);

}

 void opensbliblock00Kernel049(const ACC<double> &Residual0_B0, const ACC<double> &Residual1_B0, const ACC<double>
&Residual2_B0, const ACC<double> &Residual3_B0, ACC<double> &rhoE_B0, ACC<double> &rhoE_RKold_B0, ACC<double> &rho_B0,
ACC<double> &rho_RKold_B0, ACC<double> &rhou0_B0, ACC<double> &rhou0_RKold_B0, ACC<double> &rhou1_B0, ACC<double>
&rhou1_RKold_B0, const double *rkA, const double *rkB)
{
   rho_RKold_B0(0,0) = rkA[0]*rho_RKold_B0(0,0) + dt*Residual0_B0(0,0);

   rho_B0(0,0) = rkB[0]*rho_RKold_B0(0,0) + rho_B0(0,0);

   rhou0_RKold_B0(0,0) = rkA[0]*rhou0_RKold_B0(0,0) + dt*Residual1_B0(0,0);

   rhou0_B0(0,0) = rkB[0]*rhou0_RKold_B0(0,0) + rhou0_B0(0,0);

   rhou1_RKold_B0(0,0) = rkA[0]*rhou1_RKold_B0(0,0) + dt*Residual2_B0(0,0);

   rhou1_B0(0,0) = rkB[0]*rhou1_RKold_B0(0,0) + rhou1_B0(0,0);

   rhoE_RKold_B0(0,0) = rkA[0]*rhoE_RKold_B0(0,0) + dt*Residual3_B0(0,0);

   rhoE_B0(0,0) = rkB[0]*rhoE_RKold_B0(0,0) + rhoE_B0(0,0);

}

 void opensbliblock00Kernel040(const ACC<double> &rhoE_B0, const ACC<double> &rho_B0, const ACC<double> &rhou0_B0, const
ACC<double> &rhou1_B0, ACC<double> &a_B0, ACC<double> &kappa_B0, ACC<double> &u0_B0, ACC<double> &u1_B0, ACC<double>
&p_B0)
{
   double inv_rho = 0.0;
   kappa_B0(0,0) = 1;

   inv_rho = 1.0/rho_B0(0,0);

   u0_B0(0,0) = rhou0_B0(0,0)*inv_rho;

   u1_B0(0,0) = rhou1_B0(0,0)*inv_rho;

    p_B0(0,0) = (-1 + gama)*(-(0.5*(rhou0_B0(0,0)*rhou0_B0(0,0)) + 0.5*(rhou1_B0(0,0)*rhou1_B0(0,0)))*inv_rho +
      rhoE_B0(0,0));

   a_B0(0,0) = sqrt(gama*p_B0(0,0)*inv_rho);

}

 void opensbliblock00Kernel043(const ACC<double> &D00_B0, const ACC<double> &D01_B0, const ACC<double> &D10_B0, const
ACC<double> &D11_B0, const ACC<double> &u0_B0, const ACC<double> &u1_B0, ACC<double> &kappa_B0, const int *idx)
{
   double d1_u0_dx = 0.0;
   double d1_u0_dy = 0.0;
   double d1_u1_dx = 0.0;
   double d1_u1_dy = 0.0;
    d1_u0_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*u0_B0(0,2) + 4*u0_B0(0,1) - (25.0/12.0)*u0_B0(0,0) -
      (1.0/4.0)*u0_B0(0,4) + ((4.0/3.0))*u0_B0(0,3)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*u0_B0(0,0) -
      (1.0/2.0)*u0_B0(0,2) - (1.0/4.0)*u0_B0(0,-1) + ((1.0/12.0))*u0_B0(0,3) + ((3.0/2.0))*u0_B0(0,1)
)
: (
  
      -(2.0/3.0)*u0_B0(0,-1) - (1.0/12.0)*u0_B0(0,2) + ((1.0/12.0))*u0_B0(0,-2) + ((2.0/3.0))*u0_B0(0,1)
)));

    d1_u1_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*u1_B0(2,0) + 4*u1_B0(1,0) - (25.0/12.0)*u1_B0(0,0) -
      (1.0/4.0)*u1_B0(4,0) + ((4.0/3.0))*u1_B0(3,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*u1_B0(0,0) -
      (1.0/2.0)*u1_B0(2,0) - (1.0/4.0)*u1_B0(-1,0) + ((1.0/12.0))*u1_B0(3,0) + ((3.0/2.0))*u1_B0(1,0)
)
: ((idx[0] == -1
      + block0np0) ? (
   -4*u1_B0(-1,0) + 3*u1_B0(-2,0) - (4.0/3.0)*u1_B0(-3,0) + ((1.0/4.0))*u1_B0(-4,0) +
      ((25.0/12.0))*u1_B0(0,0)
)
: ((idx[0] == -2 + block0np0) ? (
   ((1.0/2.0))*u1_B0(-2,0) - (3.0/2.0)*u1_B0(-1,0) -
      (1.0/12.0)*u1_B0(-3,0) + ((1.0/4.0))*u1_B0(1,0) + ((5.0/6.0))*u1_B0(0,0)
)
: (
   -(2.0/3.0)*u1_B0(-1,0) -
      (1.0/12.0)*u1_B0(2,0) + ((1.0/12.0))*u1_B0(-2,0) + ((2.0/3.0))*u1_B0(1,0)
)))));

    d1_u0_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*u0_B0(2,0) + 4*u0_B0(1,0) - (25.0/12.0)*u0_B0(0,0) -
      (1.0/4.0)*u0_B0(4,0) + ((4.0/3.0))*u0_B0(3,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*u0_B0(0,0) -
      (1.0/2.0)*u0_B0(2,0) - (1.0/4.0)*u0_B0(-1,0) + ((1.0/12.0))*u0_B0(3,0) + ((3.0/2.0))*u0_B0(1,0)
)
: ((idx[0] == -1
      + block0np0) ? (
   -4*u0_B0(-1,0) + 3*u0_B0(-2,0) - (4.0/3.0)*u0_B0(-3,0) + ((1.0/4.0))*u0_B0(-4,0) +
      ((25.0/12.0))*u0_B0(0,0)
)
: ((idx[0] == -2 + block0np0) ? (
   ((1.0/2.0))*u0_B0(-2,0) - (3.0/2.0)*u0_B0(-1,0) -
      (1.0/12.0)*u0_B0(-3,0) + ((1.0/4.0))*u0_B0(1,0) + ((5.0/6.0))*u0_B0(0,0)
)
: (
   -(2.0/3.0)*u0_B0(-1,0) -
      (1.0/12.0)*u0_B0(2,0) + ((1.0/12.0))*u0_B0(-2,0) + ((2.0/3.0))*u0_B0(1,0)
)))));

    d1_u1_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*u1_B0(0,2) + 4*u1_B0(0,1) - (25.0/12.0)*u1_B0(0,0) -
      (1.0/4.0)*u1_B0(0,4) + ((4.0/3.0))*u1_B0(0,3)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*u1_B0(0,0) -
      (1.0/2.0)*u1_B0(0,2) - (1.0/4.0)*u1_B0(0,-1) + ((1.0/12.0))*u1_B0(0,3) + ((3.0/2.0))*u1_B0(0,1)
)
: (
  
      -(2.0/3.0)*u1_B0(0,-1) - (1.0/12.0)*u1_B0(0,2) + ((1.0/12.0))*u1_B0(0,-2) + ((2.0/3.0))*u1_B0(0,1)
)));

    kappa_B0(0,0) = ((D00_B0(0,0)*d1_u0_dx + D01_B0(0,0)*d1_u1_dx + D10_B0(0,0)*d1_u0_dy +
      D11_B0(0,0)*d1_u1_dy)*(D00_B0(0,0)*d1_u0_dx + D01_B0(0,0)*d1_u1_dx + D10_B0(0,0)*d1_u0_dy +
      D11_B0(0,0)*d1_u1_dy))*(0.5 - 0.5*tanh(2.5 + 500.0*(D00_B0(0,0)*d1_u0_dx + D01_B0(0,0)*d1_u1_dx +
      D10_B0(0,0)*d1_u0_dy + D11_B0(0,0)*d1_u1_dy)/sqrt((Delta0block0*Delta0block0) +
      (Delta1block0*Delta1block0))))/(1.0e-40 + ((D00_B0(0,0)*d1_u0_dx + D01_B0(0,0)*d1_u1_dx + D10_B0(0,0)*d1_u0_dy +
      D11_B0(0,0)*d1_u1_dy)*(D00_B0(0,0)*d1_u0_dx + D01_B0(0,0)*d1_u1_dx + D10_B0(0,0)*d1_u0_dy + D11_B0(0,0)*d1_u1_dy))
      + ((D00_B0(0,0)*d1_u1_dx + D10_B0(0,0)*d1_u1_dy - D01_B0(0,0)*d1_u0_dx -
      D11_B0(0,0)*d1_u0_dy)*(D00_B0(0,0)*d1_u1_dx + D10_B0(0,0)*d1_u1_dy - D01_B0(0,0)*d1_u0_dx -
      D11_B0(0,0)*d1_u0_dy)));

}

 void opensbliblock00Kernel044(const ACC<double> &rhoE_B0, const ACC<double> &rho_B0, const ACC<double> &rhou0_B0, const
ACC<double> &rhou1_B0, ACC<double> &a_B0, ACC<double> &u0_B0, ACC<double> &u1_B0, ACC<double> &p_B0)
{
   double inv_rho = 0.0;
   inv_rho = 1.0/rho_B0(0,0);

   u0_B0(0,0) = rhou0_B0(0,0)*inv_rho;

   u1_B0(0,0) = rhou1_B0(0,0)*inv_rho;

    p_B0(0,0) = (-1 + gama)*(-(0.5*(rhou0_B0(0,0)*rhou0_B0(0,0)) + 0.5*(rhou1_B0(0,0)*rhou1_B0(0,0)))*inv_rho +
      rhoE_B0(0,0));

   a_B0(0,0) = sqrt(gama*p_B0(0,0)*inv_rho);

}

 void opensbliblock00Kernel045(ACC<double> &Residual0_B0, ACC<double> &Residual1_B0, ACC<double> &Residual2_B0,
ACC<double> &Residual3_B0, ACC<double> &wk0_B0, ACC<double> &wk1_B0, ACC<double> &wk2_B0, ACC<double> &wk3_B0)
{
   wk0_B0(0,0) = 0.0;

   wk1_B0(0,0) = 0.0;

   wk2_B0(0,0) = 0.0;

   wk3_B0(0,0) = 0.0;

   Residual0_B0(0,0) = 0.0;

   Residual1_B0(0,0) = 0.0;

   Residual2_B0(0,0) = 0.0;

   Residual3_B0(0,0) = 0.0;

}

 void opensbliblock00Kernel046(const ACC<double> &D00_B0, const ACC<double> &D01_B0, const ACC<double> &a_B0, const
ACC<double> &detJ_B0, const ACC<double> &rhoE_B0, const ACC<double> &rho_B0, const ACC<double> &rhou0_B0, const
ACC<double> &rhou1_B0, const ACC<double> &u0_B0, const ACC<double> &u1_B0, ACC<double> &wk0_B0, ACC<double> &wk1_B0,
ACC<double> &wk2_B0, ACC<double> &wk3_B0)
{
   double AVG_0_0_LEV_00 = 0.0;
   double AVG_0_0_LEV_01 = 0.0;
   double AVG_0_0_LEV_02 = 0.0;
   double AVG_0_0_LEV_03 = 0.0;
   double AVG_0_0_LEV_10 = 0.0;
   double AVG_0_0_LEV_11 = 0.0;
   double AVG_0_0_LEV_12 = 0.0;
   double AVG_0_0_LEV_20 = 0.0;
   double AVG_0_0_LEV_21 = 0.0;
   double AVG_0_0_LEV_22 = 0.0;
   double AVG_0_0_LEV_23 = 0.0;
   double AVG_0_0_LEV_30 = 0.0;
   double AVG_0_0_LEV_31 = 0.0;
   double AVG_0_0_LEV_32 = 0.0;
   double AVG_0_0_LEV_33 = 0.0;
   double AVG_0_D00 = 0.0;
   double AVG_0_D01 = 0.0;
   double AVG_0_REV_00 = 0.0;
   double AVG_0_REV_02 = 0.0;
   double AVG_0_REV_03 = 0.0;
   double AVG_0_REV_10 = 0.0;
   double AVG_0_REV_11 = 0.0;
   double AVG_0_REV_12 = 0.0;
   double AVG_0_REV_13 = 0.0;
   double AVG_0_REV_20 = 0.0;
   double AVG_0_REV_21 = 0.0;
   double AVG_0_REV_22 = 0.0;
   double AVG_0_REV_23 = 0.0;
   double AVG_0_REV_30 = 0.0;
   double AVG_0_REV_31 = 0.0;
   double AVG_0_REV_32 = 0.0;
   double AVG_0_REV_33 = 0.0;
   double AVG_0_a = 0.0;
   double AVG_0_detJ = 0.0;
   double AVG_0_rho = 0.0;
   double AVG_0_u0 = 0.0;
   double AVG_0_u1 = 0.0;
   double S = 0.0;
   double alpha_00 = 0.0;
   double alpha_01 = 0.0;
   double alpha_02 = 0.0;
   double alpha_10 = 0.0;
   double alpha_11 = 0.0;
   double alpha_12 = 0.0;
   double alpha_20 = 0.0;
   double alpha_21 = 0.0;
   double alpha_22 = 0.0;
   double alpha_30 = 0.0;
   double alpha_31 = 0.0;
   double alpha_32 = 0.0;
   double g_00 = 0.0;
   double g_01 = 0.0;
   double g_10 = 0.0;
   double g_11 = 0.0;
   double g_20 = 0.0;
   double g_21 = 0.0;
   double g_30 = 0.0;
   double g_31 = 0.0;
   double gamma_0 = 0.0;
   double gamma_1 = 0.0;
   double gamma_2 = 0.0;
   double gamma_3 = 0.0;
   double inv_AVG_a = 0.0;
   double inv_AVG_met_fact = 0.0;
   double inv_AVG_rho = 0.0;
   double phi_0 = 0.0;
   double phi_1 = 0.0;
   double phi_2 = 0.0;
   double phi_3 = 0.0;
   double phi_star_0 = 0.0;
   double phi_star_1 = 0.0;
   double phi_star_2 = 0.0;
   double phi_star_3 = 0.0;
   double sigma_0_0 = 0.0;
   double sigma_0_1 = 0.0;
   double sigma_0_2 = 0.0;
   double sigma_0_3 = 0.0;
   double sigma_1_0 = 0.0;
   double sigma_1_1 = 0.0;
   double sigma_1_2 = 0.0;
   double sigma_1_3 = 0.0;
   double t1 = 0.0;
   double t2 = 0.0;
   double theta_0 = 0.0;
   double theta_1 = 0.0;
   double theta_2 = 0.0;
   double theta_3 = 0.0;
   double theta_hat_00 = 0.0;
   double theta_hat_01 = 0.0;
   double theta_hat_10 = 0.0;
   double theta_hat_11 = 0.0;
   double theta_hat_20 = 0.0;
   double theta_hat_21 = 0.0;
   double theta_hat_30 = 0.0;
   double theta_hat_31 = 0.0;
   double ws_lambda_00 = 0.0;
   double ws_lambda_11 = 0.0;
   double ws_lambda_22 = 0.0;
   double ws_lambda_33 = 0.0;
   AVG_0_u1 = ((1.0/2.0))*(u1_B0(0,0) + u1_B0(-1,0));

   AVG_0_u0 = ((1.0/2.0))*(u0_B0(0,0) + u0_B0(-1,0));

   AVG_0_a = ((1.0/2.0))*(a_B0(0,0) + a_B0(-1,0));

   AVG_0_rho = ((1.0/2.0))*(rho_B0(0,0) + rho_B0(-1,0));

   AVG_0_D01 = ((1.0/2.0))*(D01_B0(0,0) + D01_B0(1,0));

   AVG_0_D00 = ((1.0/2.0))*(D00_B0(0,0) + D00_B0(1,0));

   AVG_0_detJ = ((1.0/2.0))*(detJ_B0(0,0) + detJ_B0(1,0));

   inv_AVG_a = 1.0/(AVG_0_a);

   inv_AVG_rho = 1.0/(AVG_0_rho);

   inv_AVG_met_fact = pow((AVG_0_D00*AVG_0_D00) + (AVG_0_D01*AVG_0_D01), (-1.0/2.0));

    AVG_0_0_LEV_00 = -(1.0/2.0)*(-2 - (AVG_0_u0*AVG_0_u0)*(inv_AVG_a*inv_AVG_a) -
      (AVG_0_u1*AVG_0_u1)*(inv_AVG_a*inv_AVG_a) + (AVG_0_u0*AVG_0_u0)*(inv_AVG_a*inv_AVG_a)*gama +
      (AVG_0_u1*AVG_0_u1)*(inv_AVG_a*inv_AVG_a)*gama);

   AVG_0_0_LEV_01 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_u0;

   AVG_0_0_LEV_02 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_u1;

   AVG_0_0_LEV_03 = -(inv_AVG_a*inv_AVG_a)*gamma_m1;

   AVG_0_0_LEV_10 = (AVG_0_D00*AVG_0_u1 - AVG_0_D01*AVG_0_u0)*inv_AVG_met_fact*inv_AVG_rho;

   AVG_0_0_LEV_11 = AVG_0_D01*inv_AVG_met_fact*inv_AVG_rho;

   AVG_0_0_LEV_12 = -AVG_0_D00*inv_AVG_met_fact*inv_AVG_rho;

    AVG_0_0_LEV_20 = -0.353553390593274*((AVG_0_u0*AVG_0_u0) + (AVG_0_u1*AVG_0_u1) - (AVG_0_u0*AVG_0_u0)*gama -
      (AVG_0_u1*AVG_0_u1)*gama + 2*AVG_0_D00*AVG_0_a*AVG_0_u0*inv_AVG_met_fact +
      2*AVG_0_D01*AVG_0_a*AVG_0_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

    AVG_0_0_LEV_21 = 0.707106781186547*(-gama*AVG_0_u0 + AVG_0_D00*AVG_0_a*inv_AVG_met_fact +
      AVG_0_u0)*inv_AVG_a*inv_AVG_rho;

    AVG_0_0_LEV_22 = 0.707106781186547*(-gama*AVG_0_u1 + AVG_0_D01*AVG_0_a*inv_AVG_met_fact +
      AVG_0_u1)*inv_AVG_a*inv_AVG_rho;

   AVG_0_0_LEV_23 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

    AVG_0_0_LEV_30 = 0.353553390593274*(-(AVG_0_u0*AVG_0_u0) - (AVG_0_u1*AVG_0_u1) + (AVG_0_u0*AVG_0_u0)*gama +
      (AVG_0_u1*AVG_0_u1)*gama + 2*AVG_0_D00*AVG_0_a*AVG_0_u0*inv_AVG_met_fact +
      2*AVG_0_D01*AVG_0_a*AVG_0_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

    AVG_0_0_LEV_31 = -0.707106781186547*(-AVG_0_u0 + gama*AVG_0_u0 +
      AVG_0_D00*AVG_0_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

    AVG_0_0_LEV_32 = -0.707106781186547*(-AVG_0_u1 + gama*AVG_0_u1 +
      AVG_0_D01*AVG_0_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

   AVG_0_0_LEV_33 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

    alpha_00 = (-rho_B0(-1,0) + rho_B0(0,0))*AVG_0_0_LEV_00 + (-rhoE_B0(-1,0) + rhoE_B0(0,0))*AVG_0_0_LEV_03 +
      (-rhou0_B0(-1,0) + rhou0_B0(0,0))*AVG_0_0_LEV_01 + (-rhou1_B0(-1,0) + rhou1_B0(0,0))*AVG_0_0_LEV_02;

    alpha_10 = (-rho_B0(-1,0) + rho_B0(0,0))*AVG_0_0_LEV_10 + (-rhou0_B0(-1,0) + rhou0_B0(0,0))*AVG_0_0_LEV_11 +
      (-rhou1_B0(-1,0) + rhou1_B0(0,0))*AVG_0_0_LEV_12;

    alpha_20 = (-rho_B0(-1,0) + rho_B0(0,0))*AVG_0_0_LEV_20 + (-rhoE_B0(-1,0) + rhoE_B0(0,0))*AVG_0_0_LEV_23 +
      (-rhou0_B0(-1,0) + rhou0_B0(0,0))*AVG_0_0_LEV_21 + (-rhou1_B0(-1,0) + rhou1_B0(0,0))*AVG_0_0_LEV_22;

    alpha_30 = (-rho_B0(-1,0) + rho_B0(0,0))*AVG_0_0_LEV_30 + (-rhoE_B0(-1,0) + rhoE_B0(0,0))*AVG_0_0_LEV_33 +
      (-rhou0_B0(-1,0) + rhou0_B0(0,0))*AVG_0_0_LEV_31 + (-rhou1_B0(-1,0) + rhou1_B0(0,0))*AVG_0_0_LEV_32;

   AVG_0_u1 = ((1.0/2.0))*(u1_B0(0,0) + u1_B0(1,0));

   AVG_0_u0 = ((1.0/2.0))*(u0_B0(0,0) + u0_B0(1,0));

   AVG_0_a = ((1.0/2.0))*(a_B0(0,0) + a_B0(1,0));

   AVG_0_rho = ((1.0/2.0))*(rho_B0(0,0) + rho_B0(1,0));

   AVG_0_D01 = ((1.0/2.0))*(D01_B0(0,0) + D01_B0(1,0));

   AVG_0_D00 = ((1.0/2.0))*(D00_B0(0,0) + D00_B0(1,0));

   AVG_0_detJ = ((1.0/2.0))*(detJ_B0(0,0) + detJ_B0(1,0));

   inv_AVG_a = 1.0/(AVG_0_a);

   inv_AVG_rho = 1.0/(AVG_0_rho);

   inv_AVG_met_fact = pow((AVG_0_D00*AVG_0_D00) + (AVG_0_D01*AVG_0_D01), (-1.0/2.0));

    AVG_0_0_LEV_00 = -(1.0/2.0)*(-2 - (AVG_0_u0*AVG_0_u0)*(inv_AVG_a*inv_AVG_a) -
      (AVG_0_u1*AVG_0_u1)*(inv_AVG_a*inv_AVG_a) + (AVG_0_u0*AVG_0_u0)*(inv_AVG_a*inv_AVG_a)*gama +
      (AVG_0_u1*AVG_0_u1)*(inv_AVG_a*inv_AVG_a)*gama);

   AVG_0_0_LEV_01 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_u0;

   AVG_0_0_LEV_02 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_u1;

   AVG_0_0_LEV_03 = -(inv_AVG_a*inv_AVG_a)*gamma_m1;

   AVG_0_0_LEV_10 = (AVG_0_D00*AVG_0_u1 - AVG_0_D01*AVG_0_u0)*inv_AVG_met_fact*inv_AVG_rho;

   AVG_0_0_LEV_11 = AVG_0_D01*inv_AVG_met_fact*inv_AVG_rho;

   AVG_0_0_LEV_12 = -AVG_0_D00*inv_AVG_met_fact*inv_AVG_rho;

    AVG_0_0_LEV_20 = -0.353553390593274*((AVG_0_u0*AVG_0_u0) + (AVG_0_u1*AVG_0_u1) - (AVG_0_u0*AVG_0_u0)*gama -
      (AVG_0_u1*AVG_0_u1)*gama + 2*AVG_0_D00*AVG_0_a*AVG_0_u0*inv_AVG_met_fact +
      2*AVG_0_D01*AVG_0_a*AVG_0_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

    AVG_0_0_LEV_21 = 0.707106781186547*(-gama*AVG_0_u0 + AVG_0_D00*AVG_0_a*inv_AVG_met_fact +
      AVG_0_u0)*inv_AVG_a*inv_AVG_rho;

    AVG_0_0_LEV_22 = 0.707106781186547*(-gama*AVG_0_u1 + AVG_0_D01*AVG_0_a*inv_AVG_met_fact +
      AVG_0_u1)*inv_AVG_a*inv_AVG_rho;

   AVG_0_0_LEV_23 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

    AVG_0_0_LEV_30 = 0.353553390593274*(-(AVG_0_u0*AVG_0_u0) - (AVG_0_u1*AVG_0_u1) + (AVG_0_u0*AVG_0_u0)*gama +
      (AVG_0_u1*AVG_0_u1)*gama + 2*AVG_0_D00*AVG_0_a*AVG_0_u0*inv_AVG_met_fact +
      2*AVG_0_D01*AVG_0_a*AVG_0_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

    AVG_0_0_LEV_31 = -0.707106781186547*(-AVG_0_u0 + gama*AVG_0_u0 +
      AVG_0_D00*AVG_0_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

    AVG_0_0_LEV_32 = -0.707106781186547*(-AVG_0_u1 + gama*AVG_0_u1 +
      AVG_0_D01*AVG_0_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

   AVG_0_0_LEV_33 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

    alpha_01 = (-rho_B0(0,0) + rho_B0(1,0))*AVG_0_0_LEV_00 + (-rhoE_B0(0,0) + rhoE_B0(1,0))*AVG_0_0_LEV_03 +
      (-rhou0_B0(0,0) + rhou0_B0(1,0))*AVG_0_0_LEV_01 + (-rhou1_B0(0,0) + rhou1_B0(1,0))*AVG_0_0_LEV_02;

    alpha_11 = (-rho_B0(0,0) + rho_B0(1,0))*AVG_0_0_LEV_10 + (-rhou0_B0(0,0) + rhou0_B0(1,0))*AVG_0_0_LEV_11 +
      (-rhou1_B0(0,0) + rhou1_B0(1,0))*AVG_0_0_LEV_12;

    alpha_21 = (-rho_B0(0,0) + rho_B0(1,0))*AVG_0_0_LEV_20 + (-rhoE_B0(0,0) + rhoE_B0(1,0))*AVG_0_0_LEV_23 +
      (-rhou0_B0(0,0) + rhou0_B0(1,0))*AVG_0_0_LEV_21 + (-rhou1_B0(0,0) + rhou1_B0(1,0))*AVG_0_0_LEV_22;

    alpha_31 = (-rho_B0(0,0) + rho_B0(1,0))*AVG_0_0_LEV_30 + (-rhoE_B0(0,0) + rhoE_B0(1,0))*AVG_0_0_LEV_33 +
      (-rhou0_B0(0,0) + rhou0_B0(1,0))*AVG_0_0_LEV_31 + (-rhou1_B0(0,0) + rhou1_B0(1,0))*AVG_0_0_LEV_32;

   ws_lambda_00 = (D00_B0(0,0)*AVG_0_u0 + D01_B0(0,0)*AVG_0_u1)*detJ_B0(0,0);

   ws_lambda_11 = (D00_B0(0,0)*AVG_0_u0 + D01_B0(0,0)*AVG_0_u1)*detJ_B0(0,0);

    ws_lambda_22 = sqrt((D00_B0(0,0)*D00_B0(0,0))*(detJ_B0(0,0)*detJ_B0(0,0)) +
      (D01_B0(0,0)*D01_B0(0,0))*(detJ_B0(0,0)*detJ_B0(0,0)))*AVG_0_a + D00_B0(0,0)*detJ_B0(0,0)*AVG_0_u0 +
      D01_B0(0,0)*detJ_B0(0,0)*AVG_0_u1;

    ws_lambda_33 = -sqrt((D00_B0(0,0)*D00_B0(0,0))*(detJ_B0(0,0)*detJ_B0(0,0)) +
      (D01_B0(0,0)*D01_B0(0,0))*(detJ_B0(0,0)*detJ_B0(0,0)))*AVG_0_a + D00_B0(0,0)*detJ_B0(0,0)*AVG_0_u0 +
      D01_B0(0,0)*detJ_B0(0,0)*AVG_0_u1;

   AVG_0_REV_00 = 1;

   AVG_0_REV_02 = 0.707106781186547*AVG_0_rho*inv_AVG_a;

   AVG_0_REV_03 = 0.707106781186547*AVG_0_rho*inv_AVG_a;

   AVG_0_REV_10 = AVG_0_u0;

   AVG_0_REV_11 = AVG_0_D01*AVG_0_rho*inv_AVG_met_fact;

   AVG_0_REV_12 = 0.707106781186547*(AVG_0_D00*AVG_0_a*inv_AVG_met_fact + AVG_0_u0)*AVG_0_rho*inv_AVG_a;

   AVG_0_REV_13 = 0.707106781186547*(-AVG_0_D00*AVG_0_a*inv_AVG_met_fact + AVG_0_u0)*AVG_0_rho*inv_AVG_a;

   AVG_0_REV_20 = AVG_0_u1;

   AVG_0_REV_21 = -AVG_0_D00*AVG_0_rho*inv_AVG_met_fact;

   AVG_0_REV_22 = 0.707106781186547*(AVG_0_D01*AVG_0_a*inv_AVG_met_fact + AVG_0_u1)*AVG_0_rho*inv_AVG_a;

   AVG_0_REV_23 = 0.707106781186547*(-AVG_0_D01*AVG_0_a*inv_AVG_met_fact + AVG_0_u1)*AVG_0_rho*inv_AVG_a;

   AVG_0_REV_30 = ((1.0/2.0))*(AVG_0_u0*AVG_0_u0) + ((1.0/2.0))*(AVG_0_u1*AVG_0_u1);

   AVG_0_REV_31 = (AVG_0_D01*AVG_0_u0*inv_AVG_met_fact - AVG_0_D00*AVG_0_u1*inv_AVG_met_fact)*AVG_0_rho;

    AVG_0_REV_32 = 0.707106781186547*(((AVG_0_a*AVG_0_a) + ((1.0/2.0))*((AVG_0_u0*AVG_0_u0) +
      (AVG_0_u1*AVG_0_u1))*gamma_m1)*invgamma_m1 + (AVG_0_D00*AVG_0_u0*inv_AVG_met_fact +
      AVG_0_D01*AVG_0_u1*inv_AVG_met_fact)*AVG_0_a)*AVG_0_rho*inv_AVG_a;

    AVG_0_REV_33 = 0.707106781186547*(((AVG_0_a*AVG_0_a) + ((1.0/2.0))*((AVG_0_u0*AVG_0_u0) +
      (AVG_0_u1*AVG_0_u1))*gamma_m1)*invgamma_m1 - (AVG_0_D00*AVG_0_u0*inv_AVG_met_fact +
      AVG_0_D01*AVG_0_u1*inv_AVG_met_fact)*AVG_0_a)*AVG_0_rho*inv_AVG_a;

   AVG_0_u1 = ((1.0/2.0))*(u1_B0(1,0) + u1_B0(2,0));

   AVG_0_u0 = ((1.0/2.0))*(u0_B0(1,0) + u0_B0(2,0));

   AVG_0_a = ((1.0/2.0))*(a_B0(1,0) + a_B0(2,0));

   AVG_0_rho = ((1.0/2.0))*(rho_B0(1,0) + rho_B0(2,0));

   AVG_0_D01 = ((1.0/2.0))*(D01_B0(0,0) + D01_B0(1,0));

   AVG_0_D00 = ((1.0/2.0))*(D00_B0(0,0) + D00_B0(1,0));

   AVG_0_detJ = ((1.0/2.0))*(detJ_B0(0,0) + detJ_B0(1,0));

   inv_AVG_a = 1.0/(AVG_0_a);

   inv_AVG_rho = 1.0/(AVG_0_rho);

   inv_AVG_met_fact = pow((AVG_0_D00*AVG_0_D00) + (AVG_0_D01*AVG_0_D01), (-1.0/2.0));

    AVG_0_0_LEV_00 = -(1.0/2.0)*(-2 - (AVG_0_u0*AVG_0_u0)*(inv_AVG_a*inv_AVG_a) -
      (AVG_0_u1*AVG_0_u1)*(inv_AVG_a*inv_AVG_a) + (AVG_0_u0*AVG_0_u0)*(inv_AVG_a*inv_AVG_a)*gama +
      (AVG_0_u1*AVG_0_u1)*(inv_AVG_a*inv_AVG_a)*gama);

   AVG_0_0_LEV_01 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_u0;

   AVG_0_0_LEV_02 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_u1;

   AVG_0_0_LEV_03 = -(inv_AVG_a*inv_AVG_a)*gamma_m1;

   AVG_0_0_LEV_10 = (AVG_0_D00*AVG_0_u1 - AVG_0_D01*AVG_0_u0)*inv_AVG_met_fact*inv_AVG_rho;

   AVG_0_0_LEV_11 = AVG_0_D01*inv_AVG_met_fact*inv_AVG_rho;

   AVG_0_0_LEV_12 = -AVG_0_D00*inv_AVG_met_fact*inv_AVG_rho;

    AVG_0_0_LEV_20 = -0.353553390593274*((AVG_0_u0*AVG_0_u0) + (AVG_0_u1*AVG_0_u1) - (AVG_0_u0*AVG_0_u0)*gama -
      (AVG_0_u1*AVG_0_u1)*gama + 2*AVG_0_D00*AVG_0_a*AVG_0_u0*inv_AVG_met_fact +
      2*AVG_0_D01*AVG_0_a*AVG_0_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

    AVG_0_0_LEV_21 = 0.707106781186547*(-gama*AVG_0_u0 + AVG_0_D00*AVG_0_a*inv_AVG_met_fact +
      AVG_0_u0)*inv_AVG_a*inv_AVG_rho;

    AVG_0_0_LEV_22 = 0.707106781186547*(-gama*AVG_0_u1 + AVG_0_D01*AVG_0_a*inv_AVG_met_fact +
      AVG_0_u1)*inv_AVG_a*inv_AVG_rho;

   AVG_0_0_LEV_23 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

    AVG_0_0_LEV_30 = 0.353553390593274*(-(AVG_0_u0*AVG_0_u0) - (AVG_0_u1*AVG_0_u1) + (AVG_0_u0*AVG_0_u0)*gama +
      (AVG_0_u1*AVG_0_u1)*gama + 2*AVG_0_D00*AVG_0_a*AVG_0_u0*inv_AVG_met_fact +
      2*AVG_0_D01*AVG_0_a*AVG_0_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

    AVG_0_0_LEV_31 = -0.707106781186547*(-AVG_0_u0 + gama*AVG_0_u0 +
      AVG_0_D00*AVG_0_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

    AVG_0_0_LEV_32 = -0.707106781186547*(-AVG_0_u1 + gama*AVG_0_u1 +
      AVG_0_D01*AVG_0_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

   AVG_0_0_LEV_33 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

    alpha_02 = (-rho_B0(1,0) + rho_B0(2,0))*AVG_0_0_LEV_00 + (-rhoE_B0(1,0) + rhoE_B0(2,0))*AVG_0_0_LEV_03 +
      (-rhou0_B0(1,0) + rhou0_B0(2,0))*AVG_0_0_LEV_01 + (-rhou1_B0(1,0) + rhou1_B0(2,0))*AVG_0_0_LEV_02;

    alpha_12 = (-rho_B0(1,0) + rho_B0(2,0))*AVG_0_0_LEV_10 + (-rhou0_B0(1,0) + rhou0_B0(2,0))*AVG_0_0_LEV_11 +
      (-rhou1_B0(1,0) + rhou1_B0(2,0))*AVG_0_0_LEV_12;

    alpha_22 = (-rho_B0(1,0) + rho_B0(2,0))*AVG_0_0_LEV_20 + (-rhoE_B0(1,0) + rhoE_B0(2,0))*AVG_0_0_LEV_23 +
      (-rhou0_B0(1,0) + rhou0_B0(2,0))*AVG_0_0_LEV_21 + (-rhou1_B0(1,0) + rhou1_B0(2,0))*AVG_0_0_LEV_22;

    alpha_32 = (-rho_B0(1,0) + rho_B0(2,0))*AVG_0_0_LEV_30 + (-rhoE_B0(1,0) + rhoE_B0(2,0))*AVG_0_0_LEV_33 +
      (-rhou0_B0(1,0) + rhou0_B0(2,0))*AVG_0_0_LEV_31 + (-rhou1_B0(1,0) + rhou1_B0(2,0))*AVG_0_0_LEV_32;

    sigma_0_0 = ((fabs(ws_lambda_00) >= delta_TVD) ? (
   fabs(ws_lambda_00)
)
: (
  
      ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_00*ws_lambda_00))*invdelta_TVD
));

    sigma_0_1 = ((fabs(ws_lambda_11) >= delta_TVD) ? (
   fabs(ws_lambda_11)
)
: (
  
      ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_11*ws_lambda_11))*invdelta_TVD
));

    sigma_0_2 = ((fabs(ws_lambda_22) >= delta_TVD) ? (
   fabs(ws_lambda_22)
)
: (
  
      ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_22*ws_lambda_22))*invdelta_TVD
));

    sigma_0_3 = ((fabs(ws_lambda_33) >= delta_TVD) ? (
   fabs(ws_lambda_33)
)
: (
  
      ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_33*ws_lambda_33))*invdelta_TVD
));

   S = (alpha_01 > 0) ? 1 : ((alpha_01 < 0) ? -1 : 0);

   t1 = fmax(0.0, fmin(S*alpha_00, 2*fabs(alpha_01)));

   t2 = fmin(fabs(alpha_01), 2*S*alpha_00);

   g_00 = S*fmax(t1, t2);

   S = (alpha_11 > 0) ? 1 : ((alpha_11 < 0) ? -1 : 0);

   t1 = fmax(0.0, fmin(S*alpha_10, 2*fabs(alpha_11)));

   t2 = fmin(fabs(alpha_11), 2*S*alpha_10);

   g_10 = S*fmax(t1, t2);

   S = (alpha_21 > 0) ? 1 : ((alpha_21 < 0) ? -1 : 0);

   t1 = fmax(0.0, fmin(S*alpha_20, 2*fabs(alpha_21)));

   t2 = fmin(fabs(alpha_21), 2*S*alpha_20);

   g_20 = S*fmax(t1, t2);

   S = (alpha_31 > 0) ? 1 : ((alpha_31 < 0) ? -1 : 0);

   t1 = fmax(0.0, fmin(S*alpha_30, 2*fabs(alpha_31)));

   t2 = fmin(fabs(alpha_31), 2*S*alpha_30);

   g_30 = S*fmax(t1, t2);

   S = (alpha_02 > 0) ? 1 : ((alpha_02 < 0) ? -1 : 0);

   t1 = fmax(0.0, fmin(S*alpha_01, 2*fabs(alpha_02)));

   t2 = fmin(fabs(alpha_02), 2*S*alpha_01);

   g_01 = S*fmax(t1, t2);

   S = (alpha_12 > 0) ? 1 : ((alpha_12 < 0) ? -1 : 0);

   t1 = fmax(0.0, fmin(S*alpha_11, 2*fabs(alpha_12)));

   t2 = fmin(fabs(alpha_12), 2*S*alpha_11);

   g_11 = S*fmax(t1, t2);

   S = (alpha_22 > 0) ? 1 : ((alpha_22 < 0) ? -1 : 0);

   t1 = fmax(0.0, fmin(S*alpha_21, 2*fabs(alpha_22)));

   t2 = fmin(fabs(alpha_22), 2*S*alpha_21);

   g_21 = S*fmax(t1, t2);

   S = (alpha_32 > 0) ? 1 : ((alpha_32 < 0) ? -1 : 0);

   t1 = fmax(0.0, fmin(S*alpha_31, 2*fabs(alpha_32)));

   t2 = fmin(fabs(alpha_32), 2*S*alpha_31);

   g_31 = S*fmax(t1, t2);

   gamma_0 = ((alpha_01 == 0) ? (
   0
)
: (
   (-g_00 + g_01)*alpha_01*sigma_0_0/((alpha_01*alpha_01) + eps_TVD)
));

   gamma_1 = ((alpha_11 == 0) ? (
   0
)
: (
   (-g_10 + g_11)*alpha_11*sigma_0_1/((alpha_11*alpha_11) + eps_TVD)
));

   gamma_2 = ((alpha_21 == 0) ? (
   0
)
: (
   (-g_20 + g_21)*alpha_21*sigma_0_2/((alpha_21*alpha_21) + eps_TVD)
));

   gamma_3 = ((alpha_31 == 0) ? (
   0
)
: (
   (-g_30 + g_31)*alpha_31*sigma_0_3/((alpha_31*alpha_31) + eps_TVD)
));

    sigma_1_0 = ((fabs(gamma_0) >= delta_TVD) ? (
   fabs(gamma_0)
)
: (
   ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD)
      + (gamma_0*gamma_0))*invdelta_TVD
));

    sigma_1_1 = ((fabs(gamma_1) >= delta_TVD) ? (
   fabs(gamma_1)
)
: (
   ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD)
      + (gamma_1*gamma_1))*invdelta_TVD
));

    sigma_1_2 = ((fabs(gamma_2) >= delta_TVD) ? (
   fabs(gamma_2)
)
: (
   ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD)
      + (gamma_2*gamma_2))*invdelta_TVD
));

    sigma_1_3 = ((fabs(gamma_3) >= delta_TVD) ? (
   fabs(gamma_3)
)
: (
   ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD)
      + (gamma_3*gamma_3))*invdelta_TVD
));

   phi_0 = -fabs(sigma_0_0 + sigma_1_0)*alpha_01 + 0.5*(g_00 + g_01)*sigma_0_0;

   phi_1 = -fabs(sigma_0_1 + sigma_1_1)*alpha_11 + 0.5*(g_10 + g_11)*sigma_0_1;

   phi_2 = -fabs(sigma_0_2 + sigma_1_2)*alpha_21 + 0.5*(g_20 + g_21)*sigma_0_2;

   phi_3 = -fabs(sigma_0_3 + sigma_1_3)*alpha_31 + 0.5*(g_30 + g_31)*sigma_0_3;

   t1 = -fabs(alpha_00) + fabs(alpha_01);

   t2 = fabs(alpha_00) + fabs(alpha_01) + eps_TVD;

   theta_hat_00 = (fabs(t1/t2)*fabs(t1/t2));

   t1 = -fabs(alpha_10) + fabs(alpha_11);

   t2 = fabs(alpha_10) + fabs(alpha_11) + eps_TVD;

   theta_hat_10 = (fabs(t1/t2)*fabs(t1/t2));

   t1 = -fabs(alpha_20) + fabs(alpha_21);

   t2 = fabs(alpha_20) + fabs(alpha_21) + eps_TVD;

   theta_hat_20 = (fabs(t1/t2)*fabs(t1/t2));

   t1 = -fabs(alpha_30) + fabs(alpha_31);

   t2 = fabs(alpha_30) + fabs(alpha_31) + eps_TVD;

   theta_hat_30 = (fabs(t1/t2)*fabs(t1/t2));

   t1 = -fabs(alpha_01) + fabs(alpha_02);

   t2 = fabs(alpha_01) + fabs(alpha_02) + eps_TVD;

   theta_hat_01 = (fabs(t1/t2)*fabs(t1/t2));

   t1 = -fabs(alpha_11) + fabs(alpha_12);

   t2 = fabs(alpha_11) + fabs(alpha_12) + eps_TVD;

   theta_hat_11 = (fabs(t1/t2)*fabs(t1/t2));

   t1 = -fabs(alpha_21) + fabs(alpha_22);

   t2 = fabs(alpha_21) + fabs(alpha_22) + eps_TVD;

   theta_hat_21 = (fabs(t1/t2)*fabs(t1/t2));

   t1 = -fabs(alpha_31) + fabs(alpha_32);

   t2 = fabs(alpha_31) + fabs(alpha_32) + eps_TVD;

   theta_hat_31 = (fabs(t1/t2)*fabs(t1/t2));

   theta_0 = fmax(theta_hat_00, theta_hat_01);

   theta_1 = fmax(theta_hat_10, theta_hat_11);

   theta_2 = fmax(theta_hat_20, theta_hat_21);

   theta_3 = fmax(theta_hat_30, theta_hat_31);

   phi_star_0 = kappa_TVD*phi_0*theta_0;

   phi_star_1 = kappa_TVD*phi_1*theta_1;

   phi_star_2 = kappa_TVD*phi_2*theta_2;

   phi_star_3 = kappa_TVD*phi_3*theta_3;

   wk0_B0(0,0) = 0.5*(AVG_0_REV_00*phi_star_0 + AVG_0_REV_02*phi_star_2 + AVG_0_REV_03*phi_star_3);

    wk1_B0(0,0) = 0.5*(AVG_0_REV_10*phi_star_0 + AVG_0_REV_11*phi_star_1 + AVG_0_REV_12*phi_star_2 +
      AVG_0_REV_13*phi_star_3);

    wk2_B0(0,0) = 0.5*(AVG_0_REV_20*phi_star_0 + AVG_0_REV_21*phi_star_1 + AVG_0_REV_22*phi_star_2 +
      AVG_0_REV_23*phi_star_3);

    wk3_B0(0,0) = 0.5*(AVG_0_REV_30*phi_star_0 + AVG_0_REV_31*phi_star_1 + AVG_0_REV_32*phi_star_2 +
      AVG_0_REV_33*phi_star_3);

}

 void opensbliblock00Kernel047(const ACC<double> &D10_B0, const ACC<double> &D11_B0, const ACC<double> &a_B0, const
ACC<double> &detJ_B0, const ACC<double> &rhoE_B0, const ACC<double> &rho_B0, const ACC<double> &rhou0_B0, const
ACC<double> &rhou1_B0, const ACC<double> &u0_B0, const ACC<double> &u1_B0, ACC<double> &Residual0_B0, ACC<double>
&Residual1_B0, ACC<double> &Residual2_B0, ACC<double> &Residual3_B0)
{
   double AVG_1_1_LEV_00 = 0.0;
   double AVG_1_1_LEV_01 = 0.0;
   double AVG_1_1_LEV_02 = 0.0;
   double AVG_1_1_LEV_03 = 0.0;
   double AVG_1_1_LEV_10 = 0.0;
   double AVG_1_1_LEV_11 = 0.0;
   double AVG_1_1_LEV_12 = 0.0;
   double AVG_1_1_LEV_20 = 0.0;
   double AVG_1_1_LEV_21 = 0.0;
   double AVG_1_1_LEV_22 = 0.0;
   double AVG_1_1_LEV_23 = 0.0;
   double AVG_1_1_LEV_30 = 0.0;
   double AVG_1_1_LEV_31 = 0.0;
   double AVG_1_1_LEV_32 = 0.0;
   double AVG_1_1_LEV_33 = 0.0;
   double AVG_1_D10 = 0.0;
   double AVG_1_D11 = 0.0;
   double AVG_1_REV_00 = 0.0;
   double AVG_1_REV_02 = 0.0;
   double AVG_1_REV_03 = 0.0;
   double AVG_1_REV_10 = 0.0;
   double AVG_1_REV_11 = 0.0;
   double AVG_1_REV_12 = 0.0;
   double AVG_1_REV_13 = 0.0;
   double AVG_1_REV_20 = 0.0;
   double AVG_1_REV_21 = 0.0;
   double AVG_1_REV_22 = 0.0;
   double AVG_1_REV_23 = 0.0;
   double AVG_1_REV_30 = 0.0;
   double AVG_1_REV_31 = 0.0;
   double AVG_1_REV_32 = 0.0;
   double AVG_1_REV_33 = 0.0;
   double AVG_1_a = 0.0;
   double AVG_1_detJ = 0.0;
   double AVG_1_rho = 0.0;
   double AVG_1_u0 = 0.0;
   double AVG_1_u1 = 0.0;
   double S = 0.0;
   double alpha_00 = 0.0;
   double alpha_01 = 0.0;
   double alpha_02 = 0.0;
   double alpha_10 = 0.0;
   double alpha_11 = 0.0;
   double alpha_12 = 0.0;
   double alpha_20 = 0.0;
   double alpha_21 = 0.0;
   double alpha_22 = 0.0;
   double alpha_30 = 0.0;
   double alpha_31 = 0.0;
   double alpha_32 = 0.0;
   double g_00 = 0.0;
   double g_01 = 0.0;
   double g_10 = 0.0;
   double g_11 = 0.0;
   double g_20 = 0.0;
   double g_21 = 0.0;
   double g_30 = 0.0;
   double g_31 = 0.0;
   double gamma_0 = 0.0;
   double gamma_1 = 0.0;
   double gamma_2 = 0.0;
   double gamma_3 = 0.0;
   double inv_AVG_a = 0.0;
   double inv_AVG_met_fact = 0.0;
   double inv_AVG_rho = 0.0;
   double phi_0 = 0.0;
   double phi_1 = 0.0;
   double phi_2 = 0.0;
   double phi_3 = 0.0;
   double phi_star_0 = 0.0;
   double phi_star_1 = 0.0;
   double phi_star_2 = 0.0;
   double phi_star_3 = 0.0;
   double sigma_0_0 = 0.0;
   double sigma_0_1 = 0.0;
   double sigma_0_2 = 0.0;
   double sigma_0_3 = 0.0;
   double sigma_1_0 = 0.0;
   double sigma_1_1 = 0.0;
   double sigma_1_2 = 0.0;
   double sigma_1_3 = 0.0;
   double t1 = 0.0;
   double t2 = 0.0;
   double theta_0 = 0.0;
   double theta_1 = 0.0;
   double theta_2 = 0.0;
   double theta_3 = 0.0;
   double theta_hat_00 = 0.0;
   double theta_hat_01 = 0.0;
   double theta_hat_10 = 0.0;
   double theta_hat_11 = 0.0;
   double theta_hat_20 = 0.0;
   double theta_hat_21 = 0.0;
   double theta_hat_30 = 0.0;
   double theta_hat_31 = 0.0;
   double ws_lambda_00 = 0.0;
   double ws_lambda_11 = 0.0;
   double ws_lambda_22 = 0.0;
   double ws_lambda_33 = 0.0;
   AVG_1_u1 = ((1.0/2.0))*(u1_B0(0,0) + u1_B0(0,-1));

   AVG_1_u0 = ((1.0/2.0))*(u0_B0(0,0) + u0_B0(0,-1));

   AVG_1_a = ((1.0/2.0))*(a_B0(0,0) + a_B0(0,-1));

   AVG_1_rho = ((1.0/2.0))*(rho_B0(0,0) + rho_B0(0,-1));

   AVG_1_D10 = ((1.0/2.0))*(D10_B0(0,0) + D10_B0(0,1));

   AVG_1_detJ = ((1.0/2.0))*(detJ_B0(0,0) + detJ_B0(0,1));

   AVG_1_D11 = ((1.0/2.0))*(D11_B0(0,0) + D11_B0(0,1));

   inv_AVG_a = 1.0/(AVG_1_a);

   inv_AVG_rho = 1.0/(AVG_1_rho);

   inv_AVG_met_fact = pow((AVG_1_D10*AVG_1_D10) + (AVG_1_D11*AVG_1_D11), (-1.0/2.0));

    AVG_1_1_LEV_00 = -(1.0/2.0)*(-2 - (AVG_1_u0*AVG_1_u0)*(inv_AVG_a*inv_AVG_a) -
      (AVG_1_u1*AVG_1_u1)*(inv_AVG_a*inv_AVG_a) + (AVG_1_u0*AVG_1_u0)*(inv_AVG_a*inv_AVG_a)*gama +
      (AVG_1_u1*AVG_1_u1)*(inv_AVG_a*inv_AVG_a)*gama);

   AVG_1_1_LEV_01 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_u0;

   AVG_1_1_LEV_02 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_u1;

   AVG_1_1_LEV_03 = -(inv_AVG_a*inv_AVG_a)*gamma_m1;

   AVG_1_1_LEV_10 = (AVG_1_D10*AVG_1_u1 - AVG_1_D11*AVG_1_u0)*inv_AVG_met_fact*inv_AVG_rho;

   AVG_1_1_LEV_11 = AVG_1_D11*inv_AVG_met_fact*inv_AVG_rho;

   AVG_1_1_LEV_12 = -AVG_1_D10*inv_AVG_met_fact*inv_AVG_rho;

    AVG_1_1_LEV_20 = -0.353553390593274*((AVG_1_u0*AVG_1_u0) + (AVG_1_u1*AVG_1_u1) - (AVG_1_u0*AVG_1_u0)*gama -
      (AVG_1_u1*AVG_1_u1)*gama + 2*AVG_1_D10*AVG_1_a*AVG_1_u0*inv_AVG_met_fact +
      2*AVG_1_D11*AVG_1_a*AVG_1_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

    AVG_1_1_LEV_21 = 0.707106781186547*(-gama*AVG_1_u0 + AVG_1_D10*AVG_1_a*inv_AVG_met_fact +
      AVG_1_u0)*inv_AVG_a*inv_AVG_rho;

    AVG_1_1_LEV_22 = 0.707106781186547*(-gama*AVG_1_u1 + AVG_1_D11*AVG_1_a*inv_AVG_met_fact +
      AVG_1_u1)*inv_AVG_a*inv_AVG_rho;

   AVG_1_1_LEV_23 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

    AVG_1_1_LEV_30 = 0.353553390593274*(-(AVG_1_u0*AVG_1_u0) - (AVG_1_u1*AVG_1_u1) + (AVG_1_u0*AVG_1_u0)*gama +
      (AVG_1_u1*AVG_1_u1)*gama + 2*AVG_1_D10*AVG_1_a*AVG_1_u0*inv_AVG_met_fact +
      2*AVG_1_D11*AVG_1_a*AVG_1_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

    AVG_1_1_LEV_31 = -0.707106781186547*(-AVG_1_u0 + gama*AVG_1_u0 +
      AVG_1_D10*AVG_1_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

    AVG_1_1_LEV_32 = -0.707106781186547*(-AVG_1_u1 + gama*AVG_1_u1 +
      AVG_1_D11*AVG_1_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

   AVG_1_1_LEV_33 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

    alpha_00 = (-rho_B0(0,-1) + rho_B0(0,0))*AVG_1_1_LEV_00 + (-rhoE_B0(0,-1) + rhoE_B0(0,0))*AVG_1_1_LEV_03 +
      (-rhou0_B0(0,-1) + rhou0_B0(0,0))*AVG_1_1_LEV_01 + (-rhou1_B0(0,-1) + rhou1_B0(0,0))*AVG_1_1_LEV_02;

    alpha_10 = (-rho_B0(0,-1) + rho_B0(0,0))*AVG_1_1_LEV_10 + (-rhou0_B0(0,-1) + rhou0_B0(0,0))*AVG_1_1_LEV_11 +
      (-rhou1_B0(0,-1) + rhou1_B0(0,0))*AVG_1_1_LEV_12;

    alpha_20 = (-rho_B0(0,-1) + rho_B0(0,0))*AVG_1_1_LEV_20 + (-rhoE_B0(0,-1) + rhoE_B0(0,0))*AVG_1_1_LEV_23 +
      (-rhou0_B0(0,-1) + rhou0_B0(0,0))*AVG_1_1_LEV_21 + (-rhou1_B0(0,-1) + rhou1_B0(0,0))*AVG_1_1_LEV_22;

    alpha_30 = (-rho_B0(0,-1) + rho_B0(0,0))*AVG_1_1_LEV_30 + (-rhoE_B0(0,-1) + rhoE_B0(0,0))*AVG_1_1_LEV_33 +
      (-rhou0_B0(0,-1) + rhou0_B0(0,0))*AVG_1_1_LEV_31 + (-rhou1_B0(0,-1) + rhou1_B0(0,0))*AVG_1_1_LEV_32;

   AVG_1_u1 = ((1.0/2.0))*(u1_B0(0,0) + u1_B0(0,1));

   AVG_1_u0 = ((1.0/2.0))*(u0_B0(0,0) + u0_B0(0,1));

   AVG_1_a = ((1.0/2.0))*(a_B0(0,0) + a_B0(0,1));

   AVG_1_rho = ((1.0/2.0))*(rho_B0(0,0) + rho_B0(0,1));

   AVG_1_D10 = ((1.0/2.0))*(D10_B0(0,0) + D10_B0(0,1));

   AVG_1_detJ = ((1.0/2.0))*(detJ_B0(0,0) + detJ_B0(0,1));

   AVG_1_D11 = ((1.0/2.0))*(D11_B0(0,0) + D11_B0(0,1));

   inv_AVG_a = 1.0/(AVG_1_a);

   inv_AVG_rho = 1.0/(AVG_1_rho);

   inv_AVG_met_fact = pow((AVG_1_D10*AVG_1_D10) + (AVG_1_D11*AVG_1_D11), (-1.0/2.0));

    AVG_1_1_LEV_00 = -(1.0/2.0)*(-2 - (AVG_1_u0*AVG_1_u0)*(inv_AVG_a*inv_AVG_a) -
      (AVG_1_u1*AVG_1_u1)*(inv_AVG_a*inv_AVG_a) + (AVG_1_u0*AVG_1_u0)*(inv_AVG_a*inv_AVG_a)*gama +
      (AVG_1_u1*AVG_1_u1)*(inv_AVG_a*inv_AVG_a)*gama);

   AVG_1_1_LEV_01 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_u0;

   AVG_1_1_LEV_02 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_u1;

   AVG_1_1_LEV_03 = -(inv_AVG_a*inv_AVG_a)*gamma_m1;

   AVG_1_1_LEV_10 = (AVG_1_D10*AVG_1_u1 - AVG_1_D11*AVG_1_u0)*inv_AVG_met_fact*inv_AVG_rho;

   AVG_1_1_LEV_11 = AVG_1_D11*inv_AVG_met_fact*inv_AVG_rho;

   AVG_1_1_LEV_12 = -AVG_1_D10*inv_AVG_met_fact*inv_AVG_rho;

    AVG_1_1_LEV_20 = -0.353553390593274*((AVG_1_u0*AVG_1_u0) + (AVG_1_u1*AVG_1_u1) - (AVG_1_u0*AVG_1_u0)*gama -
      (AVG_1_u1*AVG_1_u1)*gama + 2*AVG_1_D10*AVG_1_a*AVG_1_u0*inv_AVG_met_fact +
      2*AVG_1_D11*AVG_1_a*AVG_1_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

    AVG_1_1_LEV_21 = 0.707106781186547*(-gama*AVG_1_u0 + AVG_1_D10*AVG_1_a*inv_AVG_met_fact +
      AVG_1_u0)*inv_AVG_a*inv_AVG_rho;

    AVG_1_1_LEV_22 = 0.707106781186547*(-gama*AVG_1_u1 + AVG_1_D11*AVG_1_a*inv_AVG_met_fact +
      AVG_1_u1)*inv_AVG_a*inv_AVG_rho;

   AVG_1_1_LEV_23 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

    AVG_1_1_LEV_30 = 0.353553390593274*(-(AVG_1_u0*AVG_1_u0) - (AVG_1_u1*AVG_1_u1) + (AVG_1_u0*AVG_1_u0)*gama +
      (AVG_1_u1*AVG_1_u1)*gama + 2*AVG_1_D10*AVG_1_a*AVG_1_u0*inv_AVG_met_fact +
      2*AVG_1_D11*AVG_1_a*AVG_1_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

    AVG_1_1_LEV_31 = -0.707106781186547*(-AVG_1_u0 + gama*AVG_1_u0 +
      AVG_1_D10*AVG_1_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

    AVG_1_1_LEV_32 = -0.707106781186547*(-AVG_1_u1 + gama*AVG_1_u1 +
      AVG_1_D11*AVG_1_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

   AVG_1_1_LEV_33 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

    alpha_01 = (-rho_B0(0,0) + rho_B0(0,1))*AVG_1_1_LEV_00 + (-rhoE_B0(0,0) + rhoE_B0(0,1))*AVG_1_1_LEV_03 +
      (-rhou0_B0(0,0) + rhou0_B0(0,1))*AVG_1_1_LEV_01 + (-rhou1_B0(0,0) + rhou1_B0(0,1))*AVG_1_1_LEV_02;

    alpha_11 = (-rho_B0(0,0) + rho_B0(0,1))*AVG_1_1_LEV_10 + (-rhou0_B0(0,0) + rhou0_B0(0,1))*AVG_1_1_LEV_11 +
      (-rhou1_B0(0,0) + rhou1_B0(0,1))*AVG_1_1_LEV_12;

    alpha_21 = (-rho_B0(0,0) + rho_B0(0,1))*AVG_1_1_LEV_20 + (-rhoE_B0(0,0) + rhoE_B0(0,1))*AVG_1_1_LEV_23 +
      (-rhou0_B0(0,0) + rhou0_B0(0,1))*AVG_1_1_LEV_21 + (-rhou1_B0(0,0) + rhou1_B0(0,1))*AVG_1_1_LEV_22;

    alpha_31 = (-rho_B0(0,0) + rho_B0(0,1))*AVG_1_1_LEV_30 + (-rhoE_B0(0,0) + rhoE_B0(0,1))*AVG_1_1_LEV_33 +
      (-rhou0_B0(0,0) + rhou0_B0(0,1))*AVG_1_1_LEV_31 + (-rhou1_B0(0,0) + rhou1_B0(0,1))*AVG_1_1_LEV_32;

   ws_lambda_00 = (D10_B0(0,0)*AVG_1_u0 + D11_B0(0,0)*AVG_1_u1)*detJ_B0(0,0);

   ws_lambda_11 = (D10_B0(0,0)*AVG_1_u0 + D11_B0(0,0)*AVG_1_u1)*detJ_B0(0,0);

    ws_lambda_22 = sqrt((D10_B0(0,0)*D10_B0(0,0))*(detJ_B0(0,0)*detJ_B0(0,0)) +
      (D11_B0(0,0)*D11_B0(0,0))*(detJ_B0(0,0)*detJ_B0(0,0)))*AVG_1_a + D10_B0(0,0)*detJ_B0(0,0)*AVG_1_u0 +
      D11_B0(0,0)*detJ_B0(0,0)*AVG_1_u1;

    ws_lambda_33 = -sqrt((D10_B0(0,0)*D10_B0(0,0))*(detJ_B0(0,0)*detJ_B0(0,0)) +
      (D11_B0(0,0)*D11_B0(0,0))*(detJ_B0(0,0)*detJ_B0(0,0)))*AVG_1_a + D10_B0(0,0)*detJ_B0(0,0)*AVG_1_u0 +
      D11_B0(0,0)*detJ_B0(0,0)*AVG_1_u1;

   AVG_1_REV_00 = 1;

   AVG_1_REV_02 = 0.707106781186547*AVG_1_rho*inv_AVG_a;

   AVG_1_REV_03 = 0.707106781186547*AVG_1_rho*inv_AVG_a;

   AVG_1_REV_10 = AVG_1_u0;

   AVG_1_REV_11 = AVG_1_D11*AVG_1_rho*inv_AVG_met_fact;

   AVG_1_REV_12 = 0.707106781186547*(AVG_1_D10*AVG_1_a*inv_AVG_met_fact + AVG_1_u0)*AVG_1_rho*inv_AVG_a;

   AVG_1_REV_13 = 0.707106781186547*(-AVG_1_D10*AVG_1_a*inv_AVG_met_fact + AVG_1_u0)*AVG_1_rho*inv_AVG_a;

   AVG_1_REV_20 = AVG_1_u1;

   AVG_1_REV_21 = -AVG_1_D10*AVG_1_rho*inv_AVG_met_fact;

   AVG_1_REV_22 = 0.707106781186547*(AVG_1_D11*AVG_1_a*inv_AVG_met_fact + AVG_1_u1)*AVG_1_rho*inv_AVG_a;

   AVG_1_REV_23 = 0.707106781186547*(-AVG_1_D11*AVG_1_a*inv_AVG_met_fact + AVG_1_u1)*AVG_1_rho*inv_AVG_a;

   AVG_1_REV_30 = ((1.0/2.0))*(AVG_1_u0*AVG_1_u0) + ((1.0/2.0))*(AVG_1_u1*AVG_1_u1);

   AVG_1_REV_31 = (AVG_1_D11*AVG_1_u0*inv_AVG_met_fact - AVG_1_D10*AVG_1_u1*inv_AVG_met_fact)*AVG_1_rho;

    AVG_1_REV_32 = 0.707106781186547*(((AVG_1_a*AVG_1_a) + ((1.0/2.0))*((AVG_1_u0*AVG_1_u0) +
      (AVG_1_u1*AVG_1_u1))*gamma_m1)*invgamma_m1 + (AVG_1_D10*AVG_1_u0*inv_AVG_met_fact +
      AVG_1_D11*AVG_1_u1*inv_AVG_met_fact)*AVG_1_a)*AVG_1_rho*inv_AVG_a;

    AVG_1_REV_33 = 0.707106781186547*(((AVG_1_a*AVG_1_a) + ((1.0/2.0))*((AVG_1_u0*AVG_1_u0) +
      (AVG_1_u1*AVG_1_u1))*gamma_m1)*invgamma_m1 - (AVG_1_D10*AVG_1_u0*inv_AVG_met_fact +
      AVG_1_D11*AVG_1_u1*inv_AVG_met_fact)*AVG_1_a)*AVG_1_rho*inv_AVG_a;

   AVG_1_u1 = ((1.0/2.0))*(u1_B0(0,1) + u1_B0(0,2));

   AVG_1_u0 = ((1.0/2.0))*(u0_B0(0,1) + u0_B0(0,2));

   AVG_1_a = ((1.0/2.0))*(a_B0(0,1) + a_B0(0,2));

   AVG_1_rho = ((1.0/2.0))*(rho_B0(0,1) + rho_B0(0,2));

   AVG_1_D10 = ((1.0/2.0))*(D10_B0(0,0) + D10_B0(0,1));

   AVG_1_detJ = ((1.0/2.0))*(detJ_B0(0,0) + detJ_B0(0,1));

   AVG_1_D11 = ((1.0/2.0))*(D11_B0(0,0) + D11_B0(0,1));

   inv_AVG_a = 1.0/(AVG_1_a);

   inv_AVG_rho = 1.0/(AVG_1_rho);

   inv_AVG_met_fact = pow((AVG_1_D10*AVG_1_D10) + (AVG_1_D11*AVG_1_D11), (-1.0/2.0));

    AVG_1_1_LEV_00 = -(1.0/2.0)*(-2 - (AVG_1_u0*AVG_1_u0)*(inv_AVG_a*inv_AVG_a) -
      (AVG_1_u1*AVG_1_u1)*(inv_AVG_a*inv_AVG_a) + (AVG_1_u0*AVG_1_u0)*(inv_AVG_a*inv_AVG_a)*gama +
      (AVG_1_u1*AVG_1_u1)*(inv_AVG_a*inv_AVG_a)*gama);

   AVG_1_1_LEV_01 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_u0;

   AVG_1_1_LEV_02 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_u1;

   AVG_1_1_LEV_03 = -(inv_AVG_a*inv_AVG_a)*gamma_m1;

   AVG_1_1_LEV_10 = (AVG_1_D10*AVG_1_u1 - AVG_1_D11*AVG_1_u0)*inv_AVG_met_fact*inv_AVG_rho;

   AVG_1_1_LEV_11 = AVG_1_D11*inv_AVG_met_fact*inv_AVG_rho;

   AVG_1_1_LEV_12 = -AVG_1_D10*inv_AVG_met_fact*inv_AVG_rho;

    AVG_1_1_LEV_20 = -0.353553390593274*((AVG_1_u0*AVG_1_u0) + (AVG_1_u1*AVG_1_u1) - (AVG_1_u0*AVG_1_u0)*gama -
      (AVG_1_u1*AVG_1_u1)*gama + 2*AVG_1_D10*AVG_1_a*AVG_1_u0*inv_AVG_met_fact +
      2*AVG_1_D11*AVG_1_a*AVG_1_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

    AVG_1_1_LEV_21 = 0.707106781186547*(-gama*AVG_1_u0 + AVG_1_D10*AVG_1_a*inv_AVG_met_fact +
      AVG_1_u0)*inv_AVG_a*inv_AVG_rho;

    AVG_1_1_LEV_22 = 0.707106781186547*(-gama*AVG_1_u1 + AVG_1_D11*AVG_1_a*inv_AVG_met_fact +
      AVG_1_u1)*inv_AVG_a*inv_AVG_rho;

   AVG_1_1_LEV_23 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

    AVG_1_1_LEV_30 = 0.353553390593274*(-(AVG_1_u0*AVG_1_u0) - (AVG_1_u1*AVG_1_u1) + (AVG_1_u0*AVG_1_u0)*gama +
      (AVG_1_u1*AVG_1_u1)*gama + 2*AVG_1_D10*AVG_1_a*AVG_1_u0*inv_AVG_met_fact +
      2*AVG_1_D11*AVG_1_a*AVG_1_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

    AVG_1_1_LEV_31 = -0.707106781186547*(-AVG_1_u0 + gama*AVG_1_u0 +
      AVG_1_D10*AVG_1_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

    AVG_1_1_LEV_32 = -0.707106781186547*(-AVG_1_u1 + gama*AVG_1_u1 +
      AVG_1_D11*AVG_1_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

   AVG_1_1_LEV_33 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

    alpha_02 = (-rho_B0(0,1) + rho_B0(0,2))*AVG_1_1_LEV_00 + (-rhoE_B0(0,1) + rhoE_B0(0,2))*AVG_1_1_LEV_03 +
      (-rhou0_B0(0,1) + rhou0_B0(0,2))*AVG_1_1_LEV_01 + (-rhou1_B0(0,1) + rhou1_B0(0,2))*AVG_1_1_LEV_02;

    alpha_12 = (-rho_B0(0,1) + rho_B0(0,2))*AVG_1_1_LEV_10 + (-rhou0_B0(0,1) + rhou0_B0(0,2))*AVG_1_1_LEV_11 +
      (-rhou1_B0(0,1) + rhou1_B0(0,2))*AVG_1_1_LEV_12;

    alpha_22 = (-rho_B0(0,1) + rho_B0(0,2))*AVG_1_1_LEV_20 + (-rhoE_B0(0,1) + rhoE_B0(0,2))*AVG_1_1_LEV_23 +
      (-rhou0_B0(0,1) + rhou0_B0(0,2))*AVG_1_1_LEV_21 + (-rhou1_B0(0,1) + rhou1_B0(0,2))*AVG_1_1_LEV_22;

    alpha_32 = (-rho_B0(0,1) + rho_B0(0,2))*AVG_1_1_LEV_30 + (-rhoE_B0(0,1) + rhoE_B0(0,2))*AVG_1_1_LEV_33 +
      (-rhou0_B0(0,1) + rhou0_B0(0,2))*AVG_1_1_LEV_31 + (-rhou1_B0(0,1) + rhou1_B0(0,2))*AVG_1_1_LEV_32;

    sigma_0_0 = ((fabs(ws_lambda_00) >= delta_TVD) ? (
   fabs(ws_lambda_00)
)
: (
  
      ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_00*ws_lambda_00))*invdelta_TVD
));

    sigma_0_1 = ((fabs(ws_lambda_11) >= delta_TVD) ? (
   fabs(ws_lambda_11)
)
: (
  
      ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_11*ws_lambda_11))*invdelta_TVD
));

    sigma_0_2 = ((fabs(ws_lambda_22) >= delta_TVD) ? (
   fabs(ws_lambda_22)
)
: (
  
      ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_22*ws_lambda_22))*invdelta_TVD
));

    sigma_0_3 = ((fabs(ws_lambda_33) >= delta_TVD) ? (
   fabs(ws_lambda_33)
)
: (
  
      ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_33*ws_lambda_33))*invdelta_TVD
));

   S = (alpha_01 > 0) ? 1 : ((alpha_01 < 0) ? -1 : 0);

   t1 = fmax(0.0, fmin(S*alpha_00, 2*fabs(alpha_01)));

   t2 = fmin(fabs(alpha_01), 2*S*alpha_00);

   g_00 = S*fmax(t1, t2);

   S = (alpha_11 > 0) ? 1 : ((alpha_11 < 0) ? -1 : 0);

   t1 = fmax(0.0, fmin(S*alpha_10, 2*fabs(alpha_11)));

   t2 = fmin(fabs(alpha_11), 2*S*alpha_10);

   g_10 = S*fmax(t1, t2);

   S = (alpha_21 > 0) ? 1 : ((alpha_21 < 0) ? -1 : 0);

   t1 = fmax(0.0, fmin(S*alpha_20, 2*fabs(alpha_21)));

   t2 = fmin(fabs(alpha_21), 2*S*alpha_20);

   g_20 = S*fmax(t1, t2);

   S = (alpha_31 > 0) ? 1 : ((alpha_31 < 0) ? -1 : 0);

   t1 = fmax(0.0, fmin(S*alpha_30, 2*fabs(alpha_31)));

   t2 = fmin(fabs(alpha_31), 2*S*alpha_30);

   g_30 = S*fmax(t1, t2);

   S = (alpha_02 > 0) ? 1 : ((alpha_02 < 0) ? -1 : 0);

   t1 = fmax(0.0, fmin(S*alpha_01, 2*fabs(alpha_02)));

   t2 = fmin(fabs(alpha_02), 2*S*alpha_01);

   g_01 = S*fmax(t1, t2);

   S = (alpha_12 > 0) ? 1 : ((alpha_12 < 0) ? -1 : 0);

   t1 = fmax(0.0, fmin(S*alpha_11, 2*fabs(alpha_12)));

   t2 = fmin(fabs(alpha_12), 2*S*alpha_11);

   g_11 = S*fmax(t1, t2);

   S = (alpha_22 > 0) ? 1 : ((alpha_22 < 0) ? -1 : 0);

   t1 = fmax(0.0, fmin(S*alpha_21, 2*fabs(alpha_22)));

   t2 = fmin(fabs(alpha_22), 2*S*alpha_21);

   g_21 = S*fmax(t1, t2);

   S = (alpha_32 > 0) ? 1 : ((alpha_32 < 0) ? -1 : 0);

   t1 = fmax(0.0, fmin(S*alpha_31, 2*fabs(alpha_32)));

   t2 = fmin(fabs(alpha_32), 2*S*alpha_31);

   g_31 = S*fmax(t1, t2);

   gamma_0 = ((alpha_01 == 0) ? (
   0
)
: (
   (-g_00 + g_01)*alpha_01*sigma_0_0/((alpha_01*alpha_01) + eps_TVD)
));

   gamma_1 = ((alpha_11 == 0) ? (
   0
)
: (
   (-g_10 + g_11)*alpha_11*sigma_0_1/((alpha_11*alpha_11) + eps_TVD)
));

   gamma_2 = ((alpha_21 == 0) ? (
   0
)
: (
   (-g_20 + g_21)*alpha_21*sigma_0_2/((alpha_21*alpha_21) + eps_TVD)
));

   gamma_3 = ((alpha_31 == 0) ? (
   0
)
: (
   (-g_30 + g_31)*alpha_31*sigma_0_3/((alpha_31*alpha_31) + eps_TVD)
));

    sigma_1_0 = ((fabs(gamma_0) >= delta_TVD) ? (
   fabs(gamma_0)
)
: (
   ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD)
      + (gamma_0*gamma_0))*invdelta_TVD
));

    sigma_1_1 = ((fabs(gamma_1) >= delta_TVD) ? (
   fabs(gamma_1)
)
: (
   ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD)
      + (gamma_1*gamma_1))*invdelta_TVD
));

    sigma_1_2 = ((fabs(gamma_2) >= delta_TVD) ? (
   fabs(gamma_2)
)
: (
   ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD)
      + (gamma_2*gamma_2))*invdelta_TVD
));

    sigma_1_3 = ((fabs(gamma_3) >= delta_TVD) ? (
   fabs(gamma_3)
)
: (
   ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD)
      + (gamma_3*gamma_3))*invdelta_TVD
));

   phi_0 = -fabs(sigma_0_0 + sigma_1_0)*alpha_01 + 0.5*(g_00 + g_01)*sigma_0_0;

   phi_1 = -fabs(sigma_0_1 + sigma_1_1)*alpha_11 + 0.5*(g_10 + g_11)*sigma_0_1;

   phi_2 = -fabs(sigma_0_2 + sigma_1_2)*alpha_21 + 0.5*(g_20 + g_21)*sigma_0_2;

   phi_3 = -fabs(sigma_0_3 + sigma_1_3)*alpha_31 + 0.5*(g_30 + g_31)*sigma_0_3;

   t1 = -fabs(alpha_00) + fabs(alpha_01);

   t2 = fabs(alpha_00) + fabs(alpha_01) + eps_TVD;

   theta_hat_00 = (fabs(t1/t2)*fabs(t1/t2));

   t1 = -fabs(alpha_10) + fabs(alpha_11);

   t2 = fabs(alpha_10) + fabs(alpha_11) + eps_TVD;

   theta_hat_10 = (fabs(t1/t2)*fabs(t1/t2));

   t1 = -fabs(alpha_20) + fabs(alpha_21);

   t2 = fabs(alpha_20) + fabs(alpha_21) + eps_TVD;

   theta_hat_20 = (fabs(t1/t2)*fabs(t1/t2));

   t1 = -fabs(alpha_30) + fabs(alpha_31);

   t2 = fabs(alpha_30) + fabs(alpha_31) + eps_TVD;

   theta_hat_30 = (fabs(t1/t2)*fabs(t1/t2));

   t1 = -fabs(alpha_01) + fabs(alpha_02);

   t2 = fabs(alpha_01) + fabs(alpha_02) + eps_TVD;

   theta_hat_01 = (fabs(t1/t2)*fabs(t1/t2));

   t1 = -fabs(alpha_11) + fabs(alpha_12);

   t2 = fabs(alpha_11) + fabs(alpha_12) + eps_TVD;

   theta_hat_11 = (fabs(t1/t2)*fabs(t1/t2));

   t1 = -fabs(alpha_21) + fabs(alpha_22);

   t2 = fabs(alpha_21) + fabs(alpha_22) + eps_TVD;

   theta_hat_21 = (fabs(t1/t2)*fabs(t1/t2));

   t1 = -fabs(alpha_31) + fabs(alpha_32);

   t2 = fabs(alpha_31) + fabs(alpha_32) + eps_TVD;

   theta_hat_31 = (fabs(t1/t2)*fabs(t1/t2));

   theta_0 = fmax(theta_hat_00, theta_hat_01);

   theta_1 = fmax(theta_hat_10, theta_hat_11);

   theta_2 = fmax(theta_hat_20, theta_hat_21);

   theta_3 = fmax(theta_hat_30, theta_hat_31);

   phi_star_0 = kappa_TVD*phi_0*theta_0;

   phi_star_1 = kappa_TVD*phi_1*theta_1;

   phi_star_2 = kappa_TVD*phi_2*theta_2;

   phi_star_3 = kappa_TVD*phi_3*theta_3;

   Residual0_B0(0,0) = 0.5*(AVG_1_REV_00*phi_star_0 + AVG_1_REV_02*phi_star_2 + AVG_1_REV_03*phi_star_3);

    Residual1_B0(0,0) = 0.5*(AVG_1_REV_10*phi_star_0 + AVG_1_REV_11*phi_star_1 + AVG_1_REV_12*phi_star_2 +
      AVG_1_REV_13*phi_star_3);

    Residual2_B0(0,0) = 0.5*(AVG_1_REV_20*phi_star_0 + AVG_1_REV_21*phi_star_1 + AVG_1_REV_22*phi_star_2 +
      AVG_1_REV_23*phi_star_3);

    Residual3_B0(0,0) = 0.5*(AVG_1_REV_30*phi_star_0 + AVG_1_REV_31*phi_star_1 + AVG_1_REV_32*phi_star_2 +
      AVG_1_REV_33*phi_star_3);

}

 void opensbliblock00Kernel048(const ACC<double> &Residual0_B0, const ACC<double> &Residual1_B0, const ACC<double>
&Residual2_B0, const ACC<double> &Residual3_B0, const ACC<double> &kappa_B0, const ACC<double> &wk0_B0, const
ACC<double> &wk1_B0, const ACC<double> &wk2_B0, const ACC<double> &wk3_B0, ACC<double> &TVD_filter_B0, ACC<double>
&rhoE_B0, ACC<double> &rho_B0, ACC<double> &rhou0_B0, ACC<double> &rhou1_B0, const int *idx)
{
   double Grid_0 = 0.0;
   double Grid_1 = 0.0;
   double Wall = 0.0;
   Grid_0 = idx[0];

   Grid_1 = idx[1];

   Wall = ((Grid_1 <= 5) ? (
   0
)
: (
   1
));

    TVD_filter_B0(0,0) = ((fmax(kappa_B0(0,2), fmax(kappa_B0(0,0), fmax(kappa_B0(-1,0), fmax(kappa_B0(0,-1),
      fmax(kappa_B0(1,0), fmax(kappa_B0(2,0), kappa_B0(0,1))))))) >= Ducros_select) ? (
   1
)
: (
   0.0
));

    rho_B0(0,0) = (-(-wk0_B0(-1,0) + wk0_B0(0,0))*invDelta0block0 - (-Residual0_B0(0,-1) +
      Residual0_B0(0,0))*invDelta1block0)*dt*TVD_filter_B0(0,0) + rho_B0(0,0);

    rhou0_B0(0,0) = (-(-wk1_B0(-1,0) + wk1_B0(0,0))*invDelta0block0 - (-Residual1_B0(0,-1) +
      Residual1_B0(0,0))*invDelta1block0)*dt*TVD_filter_B0(0,0) + rhou0_B0(0,0);

    rhou1_B0(0,0) = (-(-wk2_B0(-1,0) + wk2_B0(0,0))*invDelta0block0 - (-Residual2_B0(0,-1) +
      Residual2_B0(0,0))*invDelta1block0)*dt*TVD_filter_B0(0,0) + rhou1_B0(0,0);

    rhoE_B0(0,0) = (-(-wk3_B0(-1,0) + wk3_B0(0,0))*invDelta0block0 - (-Residual3_B0(0,-1) +
      Residual3_B0(0,0))*invDelta1block0)*dt*TVD_filter_B0(0,0) + rhoE_B0(0,0);

}

#endif
