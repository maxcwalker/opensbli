#ifndef OPENSBLIBLOCK00_KERNEL_H
#define OPENSBLIBLOCK00_KERNEL_H
 void opensbliblock00Kernel042(ACC<double> &rhoE_B0, ACC<double> &rho_B0, ACC<double> &rhou0_B0, ACC<double> &rhou1_B0,
ACC<double> &rhou2_B0, ACC<double> &x0_B0, ACC<double> &x2_B0, ACC<double> &x1_B0, const int *idx)
{
   double T = 0.0;
   double rho = 0.0;
   double rhou0 = 0.0;
   double rhou1 = 0.0;
   x0_B0(0,0,0) = Delta0block0*idx[0];

    x1_B0(0,0,0) = ((1.0/20.0))*H*exp(-((-(1.0/2.0)*L + Delta0block0*idx[0])*(-(1.0/2.0)*L +
      Delta0block0*idx[0]))*inv2a) + (-(1.0/20.0)*H*exp(-((-(1.0/2.0)*L + Delta0block0*idx[0])*(-(1.0/2.0)*L +
      Delta0block0*idx[0]))*inv2a) + H)*sinh(b*invH*Delta1block0*idx[1])/sinh(b);

   x2_B0(0,0,0) = Delta2block0*idx[2];

    rhou0 = ((x1_B0(0,0,0) < 3.06430643064306) ? (
   2.98010537508574e-7 + 2.17137893910512e-8*pow(x1_B0(0,0,0), 27) +
      0.0252449626304193*pow(x1_B0(0,0,0), 14) + 1.72288869974662e-16*pow(x1_B0(0,0,0), 44) +
      30.6037023000319*pow(x1_B0(0,0,0), 7) + 2.12843517734356e-5*pow(x1_B0(0,0,0), 20) + 0.70500345124088*x1_B0(0,0,0)
      + 1.32482987815919e-15*pow(x1_B0(0,0,0), 42) + 4.35046042189372e-12*pow(x1_B0(0,0,0), 35) +
      1.28472097728017*pow(x1_B0(0,0,0), 10) + 5.40448458421883*pow(x1_B0(0,0,0), 9) +
      7.67673035724381e-13*pow(x1_B0(0,0,0), 36) + 0.000211166618419883*pow(x1_B0(0,0,0), 19) +
      5.2776959398151e-8*pow(x1_B0(0,0,0), 24) + 1.30783741946686e-11*pow(x1_B0(0,0,0), 34) +
      3.99039681831242*(x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)) + 0.000518125029896123*pow(x1_B0(0,0,0), 18) +
      0.133865868334425*pow(x1_B0(0,0,0), 13) + 6.70874505326609e-20*pow(x1_B0(0,0,0), 48) +
      19.9087894702914*(x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)) +
      2.05227695456625e-11*pow(x1_B0(0,0,0), 33) + 6.89065718764235e-16*pow(x1_B0(0,0,0), 43) +
      1.36444444761311e-18*pow(x1_B0(0,0,0), 49) + 9.94338036470296e-8*pow(x1_B0(0,0,0), 26) +
      2.29770520340474e-7*pow(x1_B0(0,0,0), 25) - 3.14685525043011e-18*pow(x1_B0(0,0,0), 45) -
      5.54663857336047e-14*pow(x1_B0(0,0,0), 39) - 2.50967722926707e-9*pow(x1_B0(0,0,0), 29) -
      3.75537943671666e-10*pow(x1_B0(0,0,0), 28) - 1.2970382233701e-13*pow(x1_B0(0,0,0), 38) -
      19.4490714625157*pow(x1_B0(0,0,0), 8) - 9.84001869224845*(x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)) -
      1.17917798848888e-9*pow(x1_B0(0,0,0), 30) - 3.08824172034029e-10*pow(x1_B0(0,0,0), 31) -
      1.36055618730943*(x1_B0(0,0,0)*x1_B0(0,0,0)) - 0.00549316667051347*pow(x1_B0(0,0,0), 16) -
      29.7489710517421*(x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)) -
      1.92048017861274e-6*pow(x1_B0(0,0,0), 23) - 8.27802057742277e-6*pow(x1_B0(0,0,0), 22) -
      1.0958051866497*pow(x1_B0(0,0,0), 11) - 0.000296044358818979*pow(x1_B0(0,0,0), 17) -
      8.74763938491298e-18*pow(x1_B0(0,0,0), 47) - 0.0811820521446499*pow(x1_B0(0,0,0), 12) -
      0.0110103876402037*pow(x1_B0(0,0,0), 15) - 8.9227208199772e-14*pow(x1_B0(0,0,0), 37) -
      2.26097375236549e-17*pow(x1_B0(0,0,0), 46) - 2.57705290058786e-11*pow(x1_B0(0,0,0), 32) -
      3.9396145861337e-16*pow(x1_B0(0,0,0), 41) - 1.94065718568835e-19*pow(x1_B0(0,0,0), 50) -
      1.33377666289244e-14*pow(x1_B0(0,0,0), 40) - 1.46567217885769e-5*pow(x1_B0(0,0,0), 21)
)
: (
  
      0.999998963470747
));

    rhou1 = ((x1_B0(0,0,0) < 3.06430643064306) ? (
   -4.54052089570034e-9 + 8.1880548886519e-6*pow(x1_B0(0,0,0), 15) +
      3.15590063406684e-7*pow(x1_B0(0,0,0), 20) +
      0.040425268842647*(x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)) +
      2.0154496007228e-11*pow(x1_B0(0,0,0), 28) + 0.0242329259197411*pow(x1_B0(0,0,0), 10) +
      0.000291381826494586*pow(x1_B0(0,0,0), 14) + 6.73898204799131e-10*pow(x1_B0(0,0,0), 25) +
      1.85416600135407e-16*pow(x1_B0(0,0,0), 37) + 2.46346518485074e-14*pow(x1_B0(0,0,0), 35) +
      3.55996755975014e-18*pow(x1_B0(0,0,0), 43) + 5.96015141953445e-14*pow(x1_B0(0,0,0), 34) +
      7.19961160237273e-21*pow(x1_B0(0,0,0), 49) + 5.11019492260991e-10*pow(x1_B0(0,0,0), 26) +
      0.000271933313720515*pow(x1_B0(0,0,0), 13) + 1.02819050245244e-18*pow(x1_B0(0,0,0), 44) +
      1.20076383298111e-6*pow(x1_B0(0,0,0), 19) + 0.0802767538273824*pow(x1_B0(0,0,0), 8) +
      1.60952352657344e-10*pow(x1_B0(0,0,0), 27) + 0.000675804420077356*(x1_B0(0,0,0)*x1_B0(0,0,0)) +
      3.46646111091862e-7*x1_B0(0,0,0) + 3.95659671623606e-20*pow(x1_B0(0,0,0), 45) +
      0.00601485560417741*(x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)) + 5.44509393295634e-18*pow(x1_B0(0,0,0),
      42) + 4.56390658216947e-14*pow(x1_B0(0,0,0), 33) + 5.77610054249051e-15*pow(x1_B0(0,0,0), 36) +
      9.37278284543165e-7*pow(x1_B0(0,0,0), 18) - 3.43043397023927e-13*pow(x1_B0(0,0,0), 32) -
      1.97603337376184e-9*pow(x1_B0(0,0,0), 24) -
      0.0173159424327144*(x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)) -
      1.08374437841993e-21*pow(x1_B0(0,0,0), 48) - 3.84328807722218e-8*pow(x1_B0(0,0,0), 22) -
      0.00174020189862055*(x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)) - 1.98806894410881e-12*pow(x1_B0(0,0,0), 31) -
      9.78788444400239e-22*pow(x1_B0(0,0,0), 50) - 0.00248243956904384*pow(x1_B0(0,0,0), 12) -
      1.09492602247293e-19*pow(x1_B0(0,0,0), 46) - 7.69040185413285e-12*pow(x1_B0(0,0,0), 29) -
      8.33906981903121e-6*pow(x1_B0(0,0,0), 17) - 0.0687165671173466*pow(x1_B0(0,0,0), 7) -
      8.2833798617672e-18*pow(x1_B0(0,0,0), 41) - 5.42856439731251e-16*pow(x1_B0(0,0,0), 38) -
      2.9053357388848e-16*pow(x1_B0(0,0,0), 39) - 0.00141134699427674*pow(x1_B0(0,0,0), 11) -
      8.33338364767477e-17*pow(x1_B0(0,0,0), 40) - 5.82577714670976e-12*pow(x1_B0(0,0,0), 30) -
      1.19380225994185e-8*pow(x1_B0(0,0,0), 21) - 4.82177190833371e-20*pow(x1_B0(0,0,0), 47) -
      0.0600438180785648*pow(x1_B0(0,0,0), 9) - 1.43879912982306e-8*pow(x1_B0(0,0,0), 23) -
      3.04892028367409e-5*pow(x1_B0(0,0,0), 16)
)
: (
   0.00193194788504255
));

    T = ((x1_B0(0,0,0) < 3.06430643064306) ? (
   1.36969826742154 + 0.0992963978742254*pow(x1_B0(0,0,0), 13) +
      2.86617027971165e-15*pow(x1_B0(0,0,0), 41) + 2.0268337344622*x1_B0(0,0,0) + 42.4845202774873*pow(x1_B0(0,0,0), 9)
      + 0.00582133304112724*pow(x1_B0(0,0,0), 16) + 6.64980553213925e-6*pow(x1_B0(0,0,0), 22) +
      1.13879429024366e-10*pow(x1_B0(0,0,0), 32) + 1.1308454106724e-13*pow(x1_B0(0,0,0), 38) +
      0.00030145027063903*pow(x1_B0(0,0,0), 18) + 1.26189273290074e-9*pow(x1_B0(0,0,0), 30) +
      97.5431351348556*pow(x1_B0(0,0,0), 7) + 4.37375087293463e-19*pow(x1_B0(0,0,0), 48) +
      3.91704143820735e-6*pow(x1_B0(0,0,0), 23) + 1.09546598579685*pow(x1_B0(0,0,0), 12) +
      5.19322330244578e-10*pow(x1_B0(0,0,0), 31) + 2.50553276623531e-19*pow(x1_B0(0,0,0), 50) +
      7.12556727621899e-14*pow(x1_B0(0,0,0), 39) +
      43.2952051988253*(x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)) +
      5.94617332276474*(x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)) + 2.23675251451957e-14*pow(x1_B0(0,0,0), 40) +
      7.43073974634038e-10*pow(x1_B0(0,0,0), 29) + 0.00339078474382293*pow(x1_B0(0,0,0), 17) +
      1.26410264823667e-17*pow(x1_B0(0,0,0), 47) + 8.92551641671999e-7*pow(x1_B0(0,0,0), 24) +
      2.69256935130225e-17*pow(x1_B0(0,0,0), 46) - 4.43354296488102e-8*pow(x1_B0(0,0,0), 27) -
      1.38796867965428e-13*pow(x1_B0(0,0,0), 37) - 0.0983732879910376*pow(x1_B0(0,0,0), 14) -
      81.9540739658969*pow(x1_B0(0,0,0), 8) - 0.0214185365200827*pow(x1_B0(0,0,0), 15) -
      3.36981953913679*(x1_B0(0,0,0)*x1_B0(0,0,0)) - 1.26838474894301e-11*pow(x1_B0(0,0,0), 34) -
      1.08493288242023e-7*pow(x1_B0(0,0,0), 26) - 8.8861672751871e-16*pow(x1_B0(0,0,0), 43) -
      0.000251816345600445*pow(x1_B0(0,0,0), 19) - 1.86978885577543e-18*pow(x1_B0(0,0,0), 49) -
      17.5412907280677*(x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)) - 8.58959654131943e-9*pow(x1_B0(0,0,0), 28)
      - 3.48338396716385e-8*pow(x1_B0(0,0,0), 25) - 1.66670032495984e-17*pow(x1_B0(0,0,0), 45) -
      77.8084617211988*(x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)*x1_B0(0,0,0)) -
      2.75031316978532e-16*pow(x1_B0(0,0,0), 44) - 10.1079111210035*pow(x1_B0(0,0,0), 10) -
      1.17119752904835e-15*pow(x1_B0(0,0,0), 42) - 1.34176860771771*pow(x1_B0(0,0,0), 11) -
      7.56013271459707e-13*pow(x1_B0(0,0,0), 33) - 6.14617333062365e-12*pow(x1_B0(0,0,0), 35) -
      1.29935522041302e-5*pow(x1_B0(0,0,0), 21) - 1.64571857521028e-12*pow(x1_B0(0,0,0), 36) -
      0.00011149693097182*pow(x1_B0(0,0,0), 20)
)
: (
   1.00000103348235
));

   rho = 1.0/T;

   rho_B0(0,0,0) = rho;

   rhou0_B0(0,0,0) = rhou0;

   rhou1_B0(0,0,0) = rhou1;

   rhoE_B0(0,0,0) = (0.5*(rhou0*rhou0) + 0.5*(rhou1*rhou1))/rho + invgama*inv2Minf*inv_gamma_m1*T*rho;

   rhou2_B0(0,0,0) = 0.0;

}

 void opensbliblock00Kernel045(const ACC<double> &x0_B0, const ACC<double> &x1_B0, ACC<double> &D00_B0, ACC<double>
&D01_B0, ACC<double> &D10_B0, ACC<double> &D11_B0, ACC<double> &detJ_B0, ACC<double> &wk0_B0, ACC<double> &wk1_B0,
ACC<double> &wk3_B0, ACC<double> &wk4_B0, const int *idx)
{
   double d1_x0_dx = 0.0;
   double d1_x0_dy = 0.0;
   double d1_x1_dx = 0.0;
   double d1_x1_dy = 0.0;
    d1_x0_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*x0_B0(0,2,0) + 4*x0_B0(0,1,0) - (25.0/12.0)*x0_B0(0,0,0) -
      (1.0/4.0)*x0_B0(0,4,0) + ((4.0/3.0))*x0_B0(0,3,0)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*x0_B0(0,0,0) -
      (1.0/2.0)*x0_B0(0,2,0) - (1.0/4.0)*x0_B0(0,-1,0) + ((1.0/12.0))*x0_B0(0,3,0) + ((3.0/2.0))*x0_B0(0,1,0)
)
: (
  
      -(2.0/3.0)*x0_B0(0,-1,0) - (1.0/12.0)*x0_B0(0,2,0) + ((1.0/12.0))*x0_B0(0,-2,0) + ((2.0/3.0))*x0_B0(0,1,0)
)));

    d1_x1_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*x1_B0(2,0,0) + 4*x1_B0(1,0,0) - (25.0/12.0)*x1_B0(0,0,0) -
      (1.0/4.0)*x1_B0(4,0,0) + ((4.0/3.0))*x1_B0(3,0,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*x1_B0(0,0,0) -
      (1.0/2.0)*x1_B0(2,0,0) - (1.0/4.0)*x1_B0(-1,0,0) + ((1.0/12.0))*x1_B0(3,0,0) + ((3.0/2.0))*x1_B0(1,0,0)
)
:
      ((idx[0] == -1 + block0np0) ? (
   -4*x1_B0(-1,0,0) + 3*x1_B0(-2,0,0) - (4.0/3.0)*x1_B0(-3,0,0) +
      ((1.0/4.0))*x1_B0(-4,0,0) + ((25.0/12.0))*x1_B0(0,0,0)
)
: ((idx[0] == -2 + block0np0) ? (
  
      ((1.0/2.0))*x1_B0(-2,0,0) - (3.0/2.0)*x1_B0(-1,0,0) - (1.0/12.0)*x1_B0(-3,0,0) + ((1.0/4.0))*x1_B0(1,0,0) +
      ((5.0/6.0))*x1_B0(0,0,0)
)
: (
   -(2.0/3.0)*x1_B0(-1,0,0) - (1.0/12.0)*x1_B0(2,0,0) + ((1.0/12.0))*x1_B0(-2,0,0)
      + ((2.0/3.0))*x1_B0(1,0,0)
)))));

    d1_x1_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*x1_B0(0,2,0) + 4*x1_B0(0,1,0) - (25.0/12.0)*x1_B0(0,0,0) -
      (1.0/4.0)*x1_B0(0,4,0) + ((4.0/3.0))*x1_B0(0,3,0)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*x1_B0(0,0,0) -
      (1.0/2.0)*x1_B0(0,2,0) - (1.0/4.0)*x1_B0(0,-1,0) + ((1.0/12.0))*x1_B0(0,3,0) + ((3.0/2.0))*x1_B0(0,1,0)
)
: (
  
      -(2.0/3.0)*x1_B0(0,-1,0) - (1.0/12.0)*x1_B0(0,2,0) + ((1.0/12.0))*x1_B0(0,-2,0) + ((2.0/3.0))*x1_B0(0,1,0)
)));

    d1_x0_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*x0_B0(2,0,0) + 4*x0_B0(1,0,0) - (25.0/12.0)*x0_B0(0,0,0) -
      (1.0/4.0)*x0_B0(4,0,0) + ((4.0/3.0))*x0_B0(3,0,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*x0_B0(0,0,0) -
      (1.0/2.0)*x0_B0(2,0,0) - (1.0/4.0)*x0_B0(-1,0,0) + ((1.0/12.0))*x0_B0(3,0,0) + ((3.0/2.0))*x0_B0(1,0,0)
)
:
      ((idx[0] == -1 + block0np0) ? (
   -4*x0_B0(-1,0,0) + 3*x0_B0(-2,0,0) - (4.0/3.0)*x0_B0(-3,0,0) +
      ((1.0/4.0))*x0_B0(-4,0,0) + ((25.0/12.0))*x0_B0(0,0,0)
)
: ((idx[0] == -2 + block0np0) ? (
  
      ((1.0/2.0))*x0_B0(-2,0,0) - (3.0/2.0)*x0_B0(-1,0,0) - (1.0/12.0)*x0_B0(-3,0,0) + ((1.0/4.0))*x0_B0(1,0,0) +
      ((5.0/6.0))*x0_B0(0,0,0)
)
: (
   -(2.0/3.0)*x0_B0(-1,0,0) - (1.0/12.0)*x0_B0(2,0,0) + ((1.0/12.0))*x0_B0(-2,0,0)
      + ((2.0/3.0))*x0_B0(1,0,0)
)))));

   wk0_B0(0,0,0) = d1_x0_dx;

   wk1_B0(0,0,0) = d1_x0_dy;

   wk3_B0(0,0,0) = d1_x1_dx;

   wk4_B0(0,0,0) = d1_x1_dy;

   detJ_B0(0,0,0) = d1_x0_dx*d1_x1_dy - d1_x0_dy*d1_x1_dx;

   D00_B0(0,0,0) = d1_x1_dy/(d1_x0_dx*d1_x1_dy - d1_x0_dy*d1_x1_dx);

   D01_B0(0,0,0) = -d1_x0_dy/(d1_x0_dx*d1_x1_dy - d1_x0_dy*d1_x1_dx);

   D10_B0(0,0,0) = -d1_x1_dx/(d1_x0_dx*d1_x1_dy - d1_x0_dy*d1_x1_dx);

   D11_B0(0,0,0) = d1_x0_dx/(d1_x0_dx*d1_x1_dy - d1_x0_dy*d1_x1_dx);

}

 void opensbliblock00Kernel046(ACC<double> &D00_B0, ACC<double> &D01_B0, ACC<double> &D10_B0, ACC<double> &D11_B0,
ACC<double> &detJ_B0)
{
   D00_B0(-1,0,0) = D00_B0(1,0,0);

   D01_B0(-1,0,0) = D01_B0(1,0,0);

   D10_B0(-1,0,0) = D10_B0(1,0,0);

   D11_B0(-1,0,0) = D11_B0(1,0,0);

   detJ_B0(-1,0,0) = detJ_B0(1,0,0);

   D00_B0(-2,0,0) = D00_B0(2,0,0);

   D01_B0(-2,0,0) = D01_B0(2,0,0);

   D10_B0(-2,0,0) = D10_B0(2,0,0);

   D11_B0(-2,0,0) = D11_B0(2,0,0);

   detJ_B0(-2,0,0) = detJ_B0(2,0,0);

}

 void opensbliblock00Kernel047(ACC<double> &D00_B0, ACC<double> &D01_B0, ACC<double> &D10_B0, ACC<double> &D11_B0,
ACC<double> &detJ_B0)
{
   D00_B0(1,0,0) = D00_B0(-1,0,0);

   D01_B0(1,0,0) = D01_B0(-1,0,0);

   D10_B0(1,0,0) = D10_B0(-1,0,0);

   D11_B0(1,0,0) = D11_B0(-1,0,0);

   detJ_B0(1,0,0) = detJ_B0(-1,0,0);

   D00_B0(2,0,0) = D00_B0(-2,0,0);

   D01_B0(2,0,0) = D01_B0(-2,0,0);

   D10_B0(2,0,0) = D10_B0(-2,0,0);

   D11_B0(2,0,0) = D11_B0(-2,0,0);

   detJ_B0(2,0,0) = detJ_B0(-2,0,0);

}

 void opensbliblock00Kernel048(ACC<double> &D00_B0, ACC<double> &D01_B0, ACC<double> &D10_B0, ACC<double> &D11_B0,
ACC<double> &detJ_B0)
{
   D00_B0(0,-1,0) = D00_B0(0,1,0);

   D01_B0(0,-1,0) = D01_B0(0,1,0);

   D10_B0(0,-1,0) = D10_B0(0,1,0);

   D11_B0(0,-1,0) = D11_B0(0,1,0);

   detJ_B0(0,-1,0) = detJ_B0(0,1,0);

   D00_B0(0,-2,0) = D00_B0(0,2,0);

   D01_B0(0,-2,0) = D01_B0(0,2,0);

   D10_B0(0,-2,0) = D10_B0(0,2,0);

   D11_B0(0,-2,0) = D11_B0(0,2,0);

   detJ_B0(0,-2,0) = detJ_B0(0,2,0);

}

 void opensbliblock00Kernel049(ACC<double> &D00_B0, ACC<double> &D01_B0, ACC<double> &D10_B0, ACC<double> &D11_B0,
ACC<double> &detJ_B0)
{
   D00_B0(0,1,0) = D00_B0(0,-1,0);

   D01_B0(0,1,0) = D01_B0(0,-1,0);

   D10_B0(0,1,0) = D10_B0(0,-1,0);

   D11_B0(0,1,0) = D11_B0(0,-1,0);

   detJ_B0(0,1,0) = detJ_B0(0,-1,0);

   D00_B0(0,2,0) = D00_B0(0,-2,0);

   D01_B0(0,2,0) = D01_B0(0,-2,0);

   D10_B0(0,2,0) = D10_B0(0,-2,0);

   D11_B0(0,2,0) = D11_B0(0,-2,0);

   detJ_B0(0,2,0) = detJ_B0(0,-2,0);

}

 void opensbliblock00Kernel056(const ACC<double> &D00_B0, const ACC<double> &D01_B0, const ACC<double> &D10_B0, const
ACC<double> &D11_B0, ACC<double> &SD000_B0, ACC<double> &SD001_B0, ACC<double> &SD010_B0, ACC<double> &SD011_B0,
ACC<double> &SD100_B0, ACC<double> &SD101_B0, ACC<double> &SD110_B0, ACC<double> &SD111_B0, const int *idx)
{
   double d1_D00_dx = 0.0;
   double d1_D00_dy = 0.0;
   double d1_D01_dx = 0.0;
   double d1_D01_dy = 0.0;
   double d1_D10_dx = 0.0;
   double d1_D10_dy = 0.0;
   double d1_D11_dx = 0.0;
   double d1_D11_dy = 0.0;
    d1_D00_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*D00_B0(0,2,0) + 4*D00_B0(0,1,0) - (25.0/12.0)*D00_B0(0,0,0) -
      (1.0/4.0)*D00_B0(0,4,0) + ((4.0/3.0))*D00_B0(0,3,0)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*D00_B0(0,0,0) -
      (1.0/2.0)*D00_B0(0,2,0) - (1.0/4.0)*D00_B0(0,-1,0) + ((1.0/12.0))*D00_B0(0,3,0) + ((3.0/2.0))*D00_B0(0,1,0)
)
: (

        -(2.0/3.0)*D00_B0(0,-1,0) - (1.0/12.0)*D00_B0(0,2,0) + ((1.0/12.0))*D00_B0(0,-2,0) +
      ((2.0/3.0))*D00_B0(0,1,0)
)));

    d1_D10_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*D10_B0(0,2,0) + 4*D10_B0(0,1,0) - (25.0/12.0)*D10_B0(0,0,0) -
      (1.0/4.0)*D10_B0(0,4,0) + ((4.0/3.0))*D10_B0(0,3,0)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*D10_B0(0,0,0) -
      (1.0/2.0)*D10_B0(0,2,0) - (1.0/4.0)*D10_B0(0,-1,0) + ((1.0/12.0))*D10_B0(0,3,0) + ((3.0/2.0))*D10_B0(0,1,0)
)
: (

        -(2.0/3.0)*D10_B0(0,-1,0) - (1.0/12.0)*D10_B0(0,2,0) + ((1.0/12.0))*D10_B0(0,-2,0) +
      ((2.0/3.0))*D10_B0(0,1,0)
)));

    d1_D11_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*D11_B0(0,2,0) + 4*D11_B0(0,1,0) - (25.0/12.0)*D11_B0(0,0,0) -
      (1.0/4.0)*D11_B0(0,4,0) + ((4.0/3.0))*D11_B0(0,3,0)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*D11_B0(0,0,0) -
      (1.0/2.0)*D11_B0(0,2,0) - (1.0/4.0)*D11_B0(0,-1,0) + ((1.0/12.0))*D11_B0(0,3,0) + ((3.0/2.0))*D11_B0(0,1,0)
)
: (

        -(2.0/3.0)*D11_B0(0,-1,0) - (1.0/12.0)*D11_B0(0,2,0) + ((1.0/12.0))*D11_B0(0,-2,0) +
      ((2.0/3.0))*D11_B0(0,1,0)
)));

    d1_D01_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*D01_B0(2,0,0) + 4*D01_B0(1,0,0) - (25.0/12.0)*D01_B0(0,0,0) -
      (1.0/4.0)*D01_B0(4,0,0) + ((4.0/3.0))*D01_B0(3,0,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*D01_B0(0,0,0) -
      (1.0/2.0)*D01_B0(2,0,0) - (1.0/4.0)*D01_B0(-1,0,0) + ((1.0/12.0))*D01_B0(3,0,0) + ((3.0/2.0))*D01_B0(1,0,0)
)
:
      ((idx[0] == -1 + block0np0) ? (
   -4*D01_B0(-1,0,0) + 3*D01_B0(-2,0,0) - (4.0/3.0)*D01_B0(-3,0,0) +
      ((1.0/4.0))*D01_B0(-4,0,0) + ((25.0/12.0))*D01_B0(0,0,0)
)
: ((idx[0] == -2 + block0np0) ? (
  
      ((1.0/2.0))*D01_B0(-2,0,0) - (3.0/2.0)*D01_B0(-1,0,0) - (1.0/12.0)*D01_B0(-3,0,0) + ((1.0/4.0))*D01_B0(1,0,0) +
      ((5.0/6.0))*D01_B0(0,0,0)
)
: (
   -(2.0/3.0)*D01_B0(-1,0,0) - (1.0/12.0)*D01_B0(2,0,0) +
      ((1.0/12.0))*D01_B0(-2,0,0) + ((2.0/3.0))*D01_B0(1,0,0)
)))));

    d1_D00_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*D00_B0(2,0,0) + 4*D00_B0(1,0,0) - (25.0/12.0)*D00_B0(0,0,0) -
      (1.0/4.0)*D00_B0(4,0,0) + ((4.0/3.0))*D00_B0(3,0,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*D00_B0(0,0,0) -
      (1.0/2.0)*D00_B0(2,0,0) - (1.0/4.0)*D00_B0(-1,0,0) + ((1.0/12.0))*D00_B0(3,0,0) + ((3.0/2.0))*D00_B0(1,0,0)
)
:
      ((idx[0] == -1 + block0np0) ? (
   -4*D00_B0(-1,0,0) + 3*D00_B0(-2,0,0) - (4.0/3.0)*D00_B0(-3,0,0) +
      ((1.0/4.0))*D00_B0(-4,0,0) + ((25.0/12.0))*D00_B0(0,0,0)
)
: ((idx[0] == -2 + block0np0) ? (
  
      ((1.0/2.0))*D00_B0(-2,0,0) - (3.0/2.0)*D00_B0(-1,0,0) - (1.0/12.0)*D00_B0(-3,0,0) + ((1.0/4.0))*D00_B0(1,0,0) +
      ((5.0/6.0))*D00_B0(0,0,0)
)
: (
   -(2.0/3.0)*D00_B0(-1,0,0) - (1.0/12.0)*D00_B0(2,0,0) +
      ((1.0/12.0))*D00_B0(-2,0,0) + ((2.0/3.0))*D00_B0(1,0,0)
)))));

    d1_D10_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*D10_B0(2,0,0) + 4*D10_B0(1,0,0) - (25.0/12.0)*D10_B0(0,0,0) -
      (1.0/4.0)*D10_B0(4,0,0) + ((4.0/3.0))*D10_B0(3,0,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*D10_B0(0,0,0) -
      (1.0/2.0)*D10_B0(2,0,0) - (1.0/4.0)*D10_B0(-1,0,0) + ((1.0/12.0))*D10_B0(3,0,0) + ((3.0/2.0))*D10_B0(1,0,0)
)
:
      ((idx[0] == -1 + block0np0) ? (
   -4*D10_B0(-1,0,0) + 3*D10_B0(-2,0,0) - (4.0/3.0)*D10_B0(-3,0,0) +
      ((1.0/4.0))*D10_B0(-4,0,0) + ((25.0/12.0))*D10_B0(0,0,0)
)
: ((idx[0] == -2 + block0np0) ? (
  
      ((1.0/2.0))*D10_B0(-2,0,0) - (3.0/2.0)*D10_B0(-1,0,0) - (1.0/12.0)*D10_B0(-3,0,0) + ((1.0/4.0))*D10_B0(1,0,0) +
      ((5.0/6.0))*D10_B0(0,0,0)
)
: (
   -(2.0/3.0)*D10_B0(-1,0,0) - (1.0/12.0)*D10_B0(2,0,0) +
      ((1.0/12.0))*D10_B0(-2,0,0) + ((2.0/3.0))*D10_B0(1,0,0)
)))));

    d1_D11_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*D11_B0(2,0,0) + 4*D11_B0(1,0,0) - (25.0/12.0)*D11_B0(0,0,0) -
      (1.0/4.0)*D11_B0(4,0,0) + ((4.0/3.0))*D11_B0(3,0,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*D11_B0(0,0,0) -
      (1.0/2.0)*D11_B0(2,0,0) - (1.0/4.0)*D11_B0(-1,0,0) + ((1.0/12.0))*D11_B0(3,0,0) + ((3.0/2.0))*D11_B0(1,0,0)
)
:
      ((idx[0] == -1 + block0np0) ? (
   -4*D11_B0(-1,0,0) + 3*D11_B0(-2,0,0) - (4.0/3.0)*D11_B0(-3,0,0) +
      ((1.0/4.0))*D11_B0(-4,0,0) + ((25.0/12.0))*D11_B0(0,0,0)
)
: ((idx[0] == -2 + block0np0) ? (
  
      ((1.0/2.0))*D11_B0(-2,0,0) - (3.0/2.0)*D11_B0(-1,0,0) - (1.0/12.0)*D11_B0(-3,0,0) + ((1.0/4.0))*D11_B0(1,0,0) +
      ((5.0/6.0))*D11_B0(0,0,0)
)
: (
   -(2.0/3.0)*D11_B0(-1,0,0) - (1.0/12.0)*D11_B0(2,0,0) +
      ((1.0/12.0))*D11_B0(-2,0,0) + ((2.0/3.0))*D11_B0(1,0,0)
)))));

    d1_D01_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*D01_B0(0,2,0) + 4*D01_B0(0,1,0) - (25.0/12.0)*D01_B0(0,0,0) -
      (1.0/4.0)*D01_B0(0,4,0) + ((4.0/3.0))*D01_B0(0,3,0)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*D01_B0(0,0,0) -
      (1.0/2.0)*D01_B0(0,2,0) - (1.0/4.0)*D01_B0(0,-1,0) + ((1.0/12.0))*D01_B0(0,3,0) + ((3.0/2.0))*D01_B0(0,1,0)
)
: (

        -(2.0/3.0)*D01_B0(0,-1,0) - (1.0/12.0)*D01_B0(0,2,0) + ((1.0/12.0))*D01_B0(0,-2,0) +
      ((2.0/3.0))*D01_B0(0,1,0)
)));

   SD000_B0(0,0,0) = d1_D00_dx;

   SD001_B0(0,0,0) = d1_D00_dy;

   SD010_B0(0,0,0) = d1_D01_dx;

   SD011_B0(0,0,0) = d1_D01_dy;

   SD100_B0(0,0,0) = d1_D10_dx;

   SD101_B0(0,0,0) = d1_D10_dy;

   SD110_B0(0,0,0) = d1_D11_dx;

   SD111_B0(0,0,0) = d1_D11_dy;

}

 void opensbliblock00Kernel036(ACC<double> &rhoE_B0, ACC<double> &rho_B0, ACC<double> &rhou0_B0, ACC<double> &rhou1_B0,
ACC<double> &rhou2_B0)
{
   rho_B0(0,0,0) = rho_B0(-1,0,0);

   rhou0_B0(0,0,0) = rhou0_B0(-1,0,0);

   rhou1_B0(0,0,0) = rhou1_B0(-1,0,0);

   rhou2_B0(0,0,0) = rhou2_B0(-1,0,0);

   rhoE_B0(0,0,0) = rhoE_B0(-1,0,0);

}

 void opensbliblock00Kernel037(ACC<double> &rhoE_B0, ACC<double> &rho_B0, ACC<double> &rhou0_B0, ACC<double> &rhou1_B0,
ACC<double> &rhou2_B0)
{
   rho_B0(0,0,0) = rho_B0(-1,0,0);

   rhou0_B0(0,0,0) = rhou0_B0(-1,0,0);

   rhou1_B0(0,0,0) = rhou1_B0(-1,0,0);

   rhou2_B0(0,0,0) = rhou2_B0(-1,0,0);

   rhoE_B0(0,0,0) = rhoE_B0(-1,0,0);

   rho_B0(1,0,0) = rho_B0(-1,0,0);

   rhou0_B0(1,0,0) = rhou0_B0(-1,0,0);

   rhou1_B0(1,0,0) = rhou1_B0(-1,0,0);

   rhou2_B0(1,0,0) = rhou2_B0(-1,0,0);

   rhoE_B0(1,0,0) = rhoE_B0(-1,0,0);

   rho_B0(2,0,0) = rho_B0(-1,0,0);

   rhou0_B0(2,0,0) = rhou0_B0(-1,0,0);

   rhou1_B0(2,0,0) = rhou1_B0(-1,0,0);

   rhou2_B0(2,0,0) = rhou2_B0(-1,0,0);

   rhoE_B0(2,0,0) = rhoE_B0(-1,0,0);

}

 void opensbliblock00Kernel038(const int *iter, const ACC<double> &x0_B0, const ACC<double> &x2_B0, ACC<double>
&rhoE_B0, ACC<double> &rho_B0, ACC<double> &rhou0_B0, ACC<double> &rhou1_B0, ACC<double> &rhou2_B0)
{
   double Pwall = 0.0;
   double T1 = 0.0;
   double T2 = 0.0;
   double T_above = 0.0;
   double rho_halo_1 = 0.0;
   double rho_halo_2 = 0.0;
   double u01 = 0.0;
   double u02 = 0.0;
   double u11 = 0.0;
   double u12 = 0.0;
   double u21 = 0.0;
   double u22 = 0.0;
    rhou1_B0(0,0,0) = (sin(dt*omega_0* *iter) + sin(dt*omega_1* *iter + phi_0) + sin(dt*omega_2* *iter + phi_1) +
      sin(dt*omega_3* *iter + phi_2))*tripA*rho_B0(0,0,0)*exp(-((-xts + x0_B0(0,0,0))*(-xts +
      x0_B0(0,0,0)))*b_f)*sin(beta_0*x2_B0(0,0,0));

   rhou0_B0(0,0,0) = 0.0;

   rhou2_B0(0,0,0) = 0.0;

   rhoE_B0(0,0,0) = Twall*inv2Minf*rho_B0(0,0,0)/(gama*(-1.0 + gama));

    Pwall = (-1 + gama)*(-(((1.0/2.0))*(rhou0_B0(0,0,0)*rhou0_B0(0,0,0)) + ((1.0/2.0))*(rhou1_B0(0,0,0)*rhou1_B0(0,0,0))
      + ((1.0/2.0))*(rhou2_B0(0,0,0)*rhou2_B0(0,0,0)))/rho_B0(0,0,0) + rhoE_B0(0,0,0));

   u01 = rhou0_B0(0,1,0)/rho_B0(0,1,0);

   u02 = rhou0_B0(0,2,0)/rho_B0(0,2,0);

   u11 = rhou1_B0(0,1,0)/rho_B0(0,1,0);

   u12 = rhou1_B0(0,2,0)/rho_B0(0,2,0);

   u21 = rhou2_B0(0,1,0)/rho_B0(0,1,0);

   u22 = rhou2_B0(0,2,0)/rho_B0(0,2,0);

    T_above = (Minf*Minf)*(-1 + gama)*(-(((1.0/2.0))*(rhou0_B0(0,1,0)*rhou0_B0(0,1,0)) +
      ((1.0/2.0))*(rhou1_B0(0,1,0)*rhou1_B0(0,1,0)) + ((1.0/2.0))*(rhou2_B0(0,1,0)*rhou2_B0(0,1,0)))/rho_B0(0,1,0) +
      rhoE_B0(0,1,0))*gama/rho_B0(0,1,0);

   T1 = -T_above + 2*Twall;

   T2 = -2*T_above + 3*Twall;

   rho_halo_1 = (Minf*Minf)*gama*Pwall/T1;

   rho_B0(0,-1,0) = rho_halo_1;

   rho_halo_2 = (Minf*Minf)*gama*Pwall/T2;

   rho_B0(0,-2,0) = rho_halo_2;

   rhou0_B0(0,-1,0) = -rho_halo_1*u01;

   rhou1_B0(0,-1,0) = -rho_halo_1*u11;

   rhou2_B0(0,-1,0) = -rho_halo_1*u21;

   rhou0_B0(0,-2,0) = -rho_halo_2*u02;

   rhou1_B0(0,-2,0) = -rho_halo_2*u12;

   rhou2_B0(0,-2,0) = -rho_halo_2*u22;

   rhoE_B0(0,-1,0) = inv_gamma_m1*Pwall + ((1.0/2.0))*((u01*u01) + (u11*u11) + (u21*u21))*rho_halo_1;

   rhoE_B0(0,-2,0) = inv_gamma_m1*Pwall + ((1.0/2.0))*((u02*u02) + (u12*u12) + (u22*u22))*rho_halo_2;

}

 void opensbliblock00Kernel039(ACC<double> &rhoE_B0, ACC<double> &rho_B0, ACC<double> &rhou0_B0, ACC<double> &rhou1_B0,
ACC<double> &rhou2_B0)
{
   rho_B0(0,0,0) = rho_B0(0,-1,0);

   rhou0_B0(0,0,0) = rhou0_B0(0,-1,0);

   rhou1_B0(0,0,0) = rhou1_B0(0,-1,0);

   rhou2_B0(0,0,0) = rhou2_B0(0,-1,0);

   rhoE_B0(0,0,0) = rhoE_B0(0,-1,0);

   rho_B0(0,1,0) = rho_B0(0,-1,0);

   rhou0_B0(0,1,0) = rhou0_B0(0,-1,0);

   rhou1_B0(0,1,0) = rhou1_B0(0,-1,0);

   rhou2_B0(0,1,0) = rhou2_B0(0,-1,0);

   rhoE_B0(0,1,0) = rhoE_B0(0,-1,0);

   rho_B0(0,2,0) = rho_B0(0,-2,0);

   rhou0_B0(0,2,0) = rhou0_B0(0,-2,0);

   rhou1_B0(0,2,0) = rhou1_B0(0,-2,0);

   rhou2_B0(0,2,0) = rhou2_B0(0,-2,0);

   rhoE_B0(0,2,0) = rhoE_B0(0,-2,0);

}

void opensbliblock00Kernel005(const ACC<double> &rho_B0, const ACC<double> &rhou0_B0, ACC<double> &u0_B0)
{
   u0_B0(0,0,0) = rhou0_B0(0,0,0)/rho_B0(0,0,0);

}

void opensbliblock00Kernel007(const ACC<double> &rho_B0, const ACC<double> &rhou1_B0, ACC<double> &u1_B0)
{
   u1_B0(0,0,0) = rhou1_B0(0,0,0)/rho_B0(0,0,0);

}

void opensbliblock00Kernel009(const ACC<double> &rho_B0, const ACC<double> &rhou2_B0, ACC<double> &u2_B0)
{
   u2_B0(0,0,0) = rhou2_B0(0,0,0)/rho_B0(0,0,0);

}

 void opensbliblock00Kernel020(const ACC<double> &rhoE_B0, const ACC<double> &rho_B0, const ACC<double> &u0_B0, const
ACC<double> &u1_B0, const ACC<double> &u2_B0, ACC<double> &p_B0)
{
    p_B0(0,0,0) = (-1 + gama)*(-(1.0/2.0)*(u0_B0(0,0,0)*u0_B0(0,0,0))*rho_B0(0,0,0) -
      (1.0/2.0)*(u1_B0(0,0,0)*u1_B0(0,0,0))*rho_B0(0,0,0) - (1.0/2.0)*(u2_B0(0,0,0)*u2_B0(0,0,0))*rho_B0(0,0,0) +
      rhoE_B0(0,0,0));

}

void opensbliblock00Kernel011(const ACC<double> &p_B0, const ACC<double> &rho_B0, ACC<double> &T_B0)
{
   T_B0(0,0,0) = (Minf*Minf)*gama*p_B0(0,0,0)/rho_B0(0,0,0);

}

void opensbliblock00Kernel026(const ACC<double> &T_B0, ACC<double> &mu_B0)
{
   mu_B0(0,0,0) = T_B0(0,0,0)*sqrt(T_B0(0,0,0))*(1.0 + SuthT*invRefT)/(SuthT*invRefT + T_B0(0,0,0));

}

void opensbliblock00Kernel004(const ACC<double> &u0_B0, ACC<double> &wk0_B0, const int *idx)
{
   if (idx[0] == 0){

       wk0_B0(0,0,0) = (-3*u0_B0(2,0,0) + 4*u0_B0(1,0,0) - (25.0/12.0)*u0_B0(0,0,0) - (1.0/4.0)*u0_B0(4,0,0) +
            ((4.0/3.0))*u0_B0(3,0,0))*invDelta0block0;

   }

   else if (idx[0] == 1){

       wk0_B0(0,0,0) = (-(5.0/6.0)*u0_B0(0,0,0) - (1.0/2.0)*u0_B0(2,0,0) - (1.0/4.0)*u0_B0(-1,0,0) +
            ((1.0/12.0))*u0_B0(3,0,0) + ((3.0/2.0))*u0_B0(1,0,0))*invDelta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       wk0_B0(0,0,0) = (-4*u0_B0(-1,0,0) + 3*u0_B0(-2,0,0) - (4.0/3.0)*u0_B0(-3,0,0) + ((1.0/4.0))*u0_B0(-4,0,0) +
            ((25.0/12.0))*u0_B0(0,0,0))*invDelta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       wk0_B0(0,0,0) = (((1.0/2.0))*u0_B0(-2,0,0) - (3.0/2.0)*u0_B0(-1,0,0) - (1.0/12.0)*u0_B0(-3,0,0) +
            ((1.0/4.0))*u0_B0(1,0,0) + ((5.0/6.0))*u0_B0(0,0,0))*invDelta0block0;

   }

   else{

       wk0_B0(0,0,0) = (-(2.0/3.0)*u0_B0(-1,0,0) - (1.0/12.0)*u0_B0(2,0,0) + ((1.0/12.0))*u0_B0(-2,0,0) +
            ((2.0/3.0))*u0_B0(1,0,0))*invDelta0block0;

   }

}

void opensbliblock00Kernel006(const ACC<double> &u1_B0, ACC<double> &wk1_B0, const int *idx)
{
   if (idx[0] == 0){

       wk1_B0(0,0,0) = (-3*u1_B0(2,0,0) + 4*u1_B0(1,0,0) - (25.0/12.0)*u1_B0(0,0,0) - (1.0/4.0)*u1_B0(4,0,0) +
            ((4.0/3.0))*u1_B0(3,0,0))*invDelta0block0;

   }

   else if (idx[0] == 1){

       wk1_B0(0,0,0) = (-(5.0/6.0)*u1_B0(0,0,0) - (1.0/2.0)*u1_B0(2,0,0) - (1.0/4.0)*u1_B0(-1,0,0) +
            ((1.0/12.0))*u1_B0(3,0,0) + ((3.0/2.0))*u1_B0(1,0,0))*invDelta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       wk1_B0(0,0,0) = (-4*u1_B0(-1,0,0) + 3*u1_B0(-2,0,0) - (4.0/3.0)*u1_B0(-3,0,0) + ((1.0/4.0))*u1_B0(-4,0,0) +
            ((25.0/12.0))*u1_B0(0,0,0))*invDelta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       wk1_B0(0,0,0) = (((1.0/2.0))*u1_B0(-2,0,0) - (3.0/2.0)*u1_B0(-1,0,0) - (1.0/12.0)*u1_B0(-3,0,0) +
            ((1.0/4.0))*u1_B0(1,0,0) + ((5.0/6.0))*u1_B0(0,0,0))*invDelta0block0;

   }

   else{

       wk1_B0(0,0,0) = (-(2.0/3.0)*u1_B0(-1,0,0) - (1.0/12.0)*u1_B0(2,0,0) + ((1.0/12.0))*u1_B0(-2,0,0) +
            ((2.0/3.0))*u1_B0(1,0,0))*invDelta0block0;

   }

}

void opensbliblock00Kernel008(const ACC<double> &u2_B0, ACC<double> &wk2_B0, const int *idx)
{
   if (idx[0] == 0){

       wk2_B0(0,0,0) = (-3*u2_B0(2,0,0) + 4*u2_B0(1,0,0) - (25.0/12.0)*u2_B0(0,0,0) - (1.0/4.0)*u2_B0(4,0,0) +
            ((4.0/3.0))*u2_B0(3,0,0))*invDelta0block0;

   }

   else if (idx[0] == 1){

       wk2_B0(0,0,0) = (-(5.0/6.0)*u2_B0(0,0,0) - (1.0/2.0)*u2_B0(2,0,0) - (1.0/4.0)*u2_B0(-1,0,0) +
            ((1.0/12.0))*u2_B0(3,0,0) + ((3.0/2.0))*u2_B0(1,0,0))*invDelta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       wk2_B0(0,0,0) = (-4*u2_B0(-1,0,0) + 3*u2_B0(-2,0,0) - (4.0/3.0)*u2_B0(-3,0,0) + ((1.0/4.0))*u2_B0(-4,0,0) +
            ((25.0/12.0))*u2_B0(0,0,0))*invDelta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       wk2_B0(0,0,0) = (((1.0/2.0))*u2_B0(-2,0,0) - (3.0/2.0)*u2_B0(-1,0,0) - (1.0/12.0)*u2_B0(-3,0,0) +
            ((1.0/4.0))*u2_B0(1,0,0) + ((5.0/6.0))*u2_B0(0,0,0))*invDelta0block0;

   }

   else{

       wk2_B0(0,0,0) = (-(2.0/3.0)*u2_B0(-1,0,0) - (1.0/12.0)*u2_B0(2,0,0) + ((1.0/12.0))*u2_B0(-2,0,0) +
            ((2.0/3.0))*u2_B0(1,0,0))*invDelta0block0;

   }

}

void opensbliblock00Kernel010(const ACC<double> &T_B0, ACC<double> &wk3_B0, const int *idx)
{
   if (idx[0] == 0){

       wk3_B0(0,0,0) = (-3*T_B0(2,0,0) + 4*T_B0(1,0,0) - (25.0/12.0)*T_B0(0,0,0) - (1.0/4.0)*T_B0(4,0,0) +
            ((4.0/3.0))*T_B0(3,0,0))*invDelta0block0;

   }

   else if (idx[0] == 1){

       wk3_B0(0,0,0) = (-(5.0/6.0)*T_B0(0,0,0) - (1.0/2.0)*T_B0(2,0,0) - (1.0/4.0)*T_B0(-1,0,0) +
            ((1.0/12.0))*T_B0(3,0,0) + ((3.0/2.0))*T_B0(1,0,0))*invDelta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       wk3_B0(0,0,0) = (-4*T_B0(-1,0,0) + 3*T_B0(-2,0,0) - (4.0/3.0)*T_B0(-3,0,0) + ((1.0/4.0))*T_B0(-4,0,0) +
            ((25.0/12.0))*T_B0(0,0,0))*invDelta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       wk3_B0(0,0,0) = (((1.0/2.0))*T_B0(-2,0,0) - (3.0/2.0)*T_B0(-1,0,0) - (1.0/12.0)*T_B0(-3,0,0) +
            ((1.0/4.0))*T_B0(1,0,0) + ((5.0/6.0))*T_B0(0,0,0))*invDelta0block0;

   }

   else{

       wk3_B0(0,0,0) = (-(2.0/3.0)*T_B0(-1,0,0) - (1.0/12.0)*T_B0(2,0,0) + ((1.0/12.0))*T_B0(-2,0,0) +
            ((2.0/3.0))*T_B0(1,0,0))*invDelta0block0;

   }

}

void opensbliblock00Kernel012(const ACC<double> &u0_B0, ACC<double> &wk4_B0, const int *idx)
{
   if (idx[1] == 0){

       wk4_B0(0,0,0) = (-3*u0_B0(0,2,0) + 4*u0_B0(0,1,0) - (25.0/12.0)*u0_B0(0,0,0) - (1.0/4.0)*u0_B0(0,4,0) +
            ((4.0/3.0))*u0_B0(0,3,0))*invDelta1block0;

   }

   else if (idx[1] == 1){

       wk4_B0(0,0,0) = (-(5.0/6.0)*u0_B0(0,0,0) - (1.0/2.0)*u0_B0(0,2,0) - (1.0/4.0)*u0_B0(0,-1,0) +
            ((1.0/12.0))*u0_B0(0,3,0) + ((3.0/2.0))*u0_B0(0,1,0))*invDelta1block0;

   }

   else{

       wk4_B0(0,0,0) = (-(2.0/3.0)*u0_B0(0,-1,0) - (1.0/12.0)*u0_B0(0,2,0) + ((1.0/12.0))*u0_B0(0,-2,0) +
            ((2.0/3.0))*u0_B0(0,1,0))*invDelta1block0;

   }

}

void opensbliblock00Kernel013(const ACC<double> &u1_B0, ACC<double> &wk5_B0, const int *idx)
{
   if (idx[1] == 0){

       wk5_B0(0,0,0) = (-3*u1_B0(0,2,0) + 4*u1_B0(0,1,0) - (25.0/12.0)*u1_B0(0,0,0) - (1.0/4.0)*u1_B0(0,4,0) +
            ((4.0/3.0))*u1_B0(0,3,0))*invDelta1block0;

   }

   else if (idx[1] == 1){

       wk5_B0(0,0,0) = (-(5.0/6.0)*u1_B0(0,0,0) - (1.0/2.0)*u1_B0(0,2,0) - (1.0/4.0)*u1_B0(0,-1,0) +
            ((1.0/12.0))*u1_B0(0,3,0) + ((3.0/2.0))*u1_B0(0,1,0))*invDelta1block0;

   }

   else{

       wk5_B0(0,0,0) = (-(2.0/3.0)*u1_B0(0,-1,0) - (1.0/12.0)*u1_B0(0,2,0) + ((1.0/12.0))*u1_B0(0,-2,0) +
            ((2.0/3.0))*u1_B0(0,1,0))*invDelta1block0;

   }

}

void opensbliblock00Kernel014(const ACC<double> &u2_B0, ACC<double> &wk6_B0, const int *idx)
{
   if (idx[1] == 0){

       wk6_B0(0,0,0) = (-3*u2_B0(0,2,0) + 4*u2_B0(0,1,0) - (25.0/12.0)*u2_B0(0,0,0) - (1.0/4.0)*u2_B0(0,4,0) +
            ((4.0/3.0))*u2_B0(0,3,0))*invDelta1block0;

   }

   else if (idx[1] == 1){

       wk6_B0(0,0,0) = (-(5.0/6.0)*u2_B0(0,0,0) - (1.0/2.0)*u2_B0(0,2,0) - (1.0/4.0)*u2_B0(0,-1,0) +
            ((1.0/12.0))*u2_B0(0,3,0) + ((3.0/2.0))*u2_B0(0,1,0))*invDelta1block0;

   }

   else{

       wk6_B0(0,0,0) = (-(2.0/3.0)*u2_B0(0,-1,0) - (1.0/12.0)*u2_B0(0,2,0) + ((1.0/12.0))*u2_B0(0,-2,0) +
            ((2.0/3.0))*u2_B0(0,1,0))*invDelta1block0;

   }

}

void opensbliblock00Kernel015(const ACC<double> &T_B0, ACC<double> &wk7_B0, const int *idx)
{
   if (idx[1] == 0){

       wk7_B0(0,0,0) = (-3*T_B0(0,2,0) + 4*T_B0(0,1,0) - (25.0/12.0)*T_B0(0,0,0) - (1.0/4.0)*T_B0(0,4,0) +
            ((4.0/3.0))*T_B0(0,3,0))*invDelta1block0;

   }

   else if (idx[1] == 1){

       wk7_B0(0,0,0) = (-(5.0/6.0)*T_B0(0,0,0) - (1.0/2.0)*T_B0(0,2,0) - (1.0/4.0)*T_B0(0,-1,0) +
            ((1.0/12.0))*T_B0(0,3,0) + ((3.0/2.0))*T_B0(0,1,0))*invDelta1block0;

   }

   else{

       wk7_B0(0,0,0) = (-(2.0/3.0)*T_B0(0,-1,0) - (1.0/12.0)*T_B0(0,2,0) + ((1.0/12.0))*T_B0(0,-2,0) +
            ((2.0/3.0))*T_B0(0,1,0))*invDelta1block0;

   }

}

void opensbliblock00Kernel016(const ACC<double> &u0_B0, ACC<double> &wk8_B0)
{
    wk8_B0(0,0,0) = (-(2.0/3.0)*u0_B0(0,0,-1) - (1.0/12.0)*u0_B0(0,0,2) + ((1.0/12.0))*u0_B0(0,0,-2) +
      ((2.0/3.0))*u0_B0(0,0,1))*invDelta2block0;

}

void opensbliblock00Kernel017(const ACC<double> &u1_B0, ACC<double> &wk9_B0)
{
    wk9_B0(0,0,0) = (-(2.0/3.0)*u1_B0(0,0,-1) - (1.0/12.0)*u1_B0(0,0,2) + ((1.0/12.0))*u1_B0(0,0,-2) +
      ((2.0/3.0))*u1_B0(0,0,1))*invDelta2block0;

}

void opensbliblock00Kernel018(const ACC<double> &u2_B0, ACC<double> &wk10_B0)
{
    wk10_B0(0,0,0) = (-(2.0/3.0)*u2_B0(0,0,-1) - (1.0/12.0)*u2_B0(0,0,2) + ((1.0/12.0))*u2_B0(0,0,-2) +
      ((2.0/3.0))*u2_B0(0,0,1))*invDelta2block0;

}

void opensbliblock00Kernel019(const ACC<double> &T_B0, ACC<double> &wk11_B0)
{
    wk11_B0(0,0,0) = (-(2.0/3.0)*T_B0(0,0,-1) - (1.0/12.0)*T_B0(0,0,2) + ((1.0/12.0))*T_B0(0,0,-2) +
      ((2.0/3.0))*T_B0(0,0,1))*invDelta2block0;

}

 void opensbliblock00Kernel034(const ACC<double> &D00_B0, const ACC<double> &D01_B0, const ACC<double> &D10_B0, const
ACC<double> &D11_B0, const ACC<double> &p_B0, const ACC<double> &rhoE_B0, const ACC<double> &rho_B0, const ACC<double>
&rhou0_B0, const ACC<double> &rhou1_B0, const ACC<double> &rhou2_B0, const ACC<double> &u0_B0, const ACC<double> &u1_B0,
const ACC<double> &u2_B0, const ACC<double> &wk0_B0, const ACC<double> &wk10_B0, const ACC<double> &wk1_B0, const
ACC<double> &wk2_B0, const ACC<double> &wk4_B0, const ACC<double> &wk5_B0, const ACC<double> &wk6_B0, const ACC<double>
&wk8_B0, const ACC<double> &wk9_B0, ACC<double> &Residual0_B0, ACC<double> &Residual1_B0, ACC<double> &Residual2_B0,
ACC<double> &Residual3_B0, ACC<double> &Residual4_B0, const int *idx)
{
   double d1_inv_rhoErho_dx = 0.0;
   double d1_inv_rhoErho_dy = 0.0;
   double d1_inv_rhoErho_dz = 0.0;
   double d1_inv_rhoErhou0_dx = 0.0;
   double d1_inv_rhoErhou0_dy = 0.0;
   double d1_inv_rhoErhou1_dx = 0.0;
   double d1_inv_rhoErhou1_dy = 0.0;
   double d1_inv_rhoErhou2_dz = 0.0;
   double d1_p_dx = 0.0;
   double d1_p_dy = 0.0;
   double d1_p_dz = 0.0;
   double d1_pu0_dx = 0.0;
   double d1_pu0_dy = 0.0;
   double d1_pu1_dx = 0.0;
   double d1_pu1_dy = 0.0;
   double d1_pu2_dz = 0.0;
   double d1_rhoE_dx = 0.0;
   double d1_rhoE_dy = 0.0;
   double d1_rhoE_dz = 0.0;
   double d1_rhoEu0_dx = 0.0;
   double d1_rhoEu0_dy = 0.0;
   double d1_rhoEu1_dx = 0.0;
   double d1_rhoEu1_dy = 0.0;
   double d1_rhoEu2_dz = 0.0;
   double d1_rho_dx = 0.0;
   double d1_rho_dy = 0.0;
   double d1_rho_dz = 0.0;
   double d1_rhou0_dx = 0.0;
   double d1_rhou0_dy = 0.0;
   double d1_rhou0_dz = 0.0;
   double d1_rhou0u0_dx = 0.0;
   double d1_rhou0u0_dy = 0.0;
   double d1_rhou0u1_dx = 0.0;
   double d1_rhou0u1_dy = 0.0;
   double d1_rhou0u2_dx = 0.0;
   double d1_rhou0u2_dy = 0.0;
   double d1_rhou1_dx = 0.0;
   double d1_rhou1_dy = 0.0;
   double d1_rhou1_dz = 0.0;
   double d1_rhou1u0_dx = 0.0;
   double d1_rhou1u0_dy = 0.0;
   double d1_rhou1u1_dx = 0.0;
   double d1_rhou1u1_dy = 0.0;
   double d1_rhou1u2_dx = 0.0;
   double d1_rhou1u2_dy = 0.0;
   double d1_rhou2_dx = 0.0;
   double d1_rhou2_dy = 0.0;
   double d1_rhou2_dz = 0.0;
   double d1_rhou2u0_dz = 0.0;
   double d1_rhou2u1_dz = 0.0;
   double d1_rhou2u2_dz = 0.0;
   double d1_u0u0_dx = 0.0;
   double d1_u0u0_dy = 0.0;
   double d1_u0u1_dx = 0.0;
   double d1_u0u1_dy = 0.0;
   double d1_u0u2_dx = 0.0;
   double d1_u0u2_dy = 0.0;
   double d1_u0u2_dz = 0.0;
   double d1_u1u1_dx = 0.0;
   double d1_u1u1_dy = 0.0;
   double d1_u1u2_dx = 0.0;
   double d1_u1u2_dy = 0.0;
   double d1_u1u2_dz = 0.0;
   double d1_u2u2_dz = 0.0;
   if (idx[0] == 0){

       d1_p_dx = (-3*p_B0(2,0,0) + 4*p_B0(1,0,0) - (25.0/12.0)*p_B0(0,0,0) - (1.0/4.0)*p_B0(4,0,0) +
            ((4.0/3.0))*p_B0(3,0,0))*invDelta0block0;

       d1_pu0_dx = (-3*p_B0(2,0,0)*u0_B0(2,0,0) + 4*p_B0(1,0,0)*u0_B0(1,0,0) - (25.0/12.0)*p_B0(0,0,0)*u0_B0(0,0,0) -
            (1.0/4.0)*p_B0(4,0,0)*u0_B0(4,0,0) + ((4.0/3.0))*p_B0(3,0,0)*u0_B0(3,0,0))*invDelta0block0;

       d1_pu1_dx = (-3*p_B0(2,0,0)*u1_B0(2,0,0) + 4*p_B0(1,0,0)*u1_B0(1,0,0) - (25.0/12.0)*p_B0(0,0,0)*u1_B0(0,0,0) -
            (1.0/4.0)*p_B0(4,0,0)*u1_B0(4,0,0) + ((4.0/3.0))*p_B0(3,0,0)*u1_B0(3,0,0))*invDelta0block0;

       d1_rhoE_dx = (-3*rhoE_B0(2,0,0) + 4*rhoE_B0(1,0,0) - (25.0/12.0)*rhoE_B0(0,0,0) - (1.0/4.0)*rhoE_B0(4,0,0) +
            ((4.0/3.0))*rhoE_B0(3,0,0))*invDelta0block0;

       d1_rhoEu0_dx = (-3*u0_B0(2,0,0)*rhoE_B0(2,0,0) + 4*u0_B0(1,0,0)*rhoE_B0(1,0,0) -
            (25.0/12.0)*u0_B0(0,0,0)*rhoE_B0(0,0,0) - (1.0/4.0)*u0_B0(4,0,0)*rhoE_B0(4,0,0) +
            ((4.0/3.0))*u0_B0(3,0,0)*rhoE_B0(3,0,0))*invDelta0block0;

       d1_inv_rhoErhou0_dx = (-3*u0_B0(2,0,0)*rhoE_B0(2,0,0)/rho_B0(2,0,0) + 4*u0_B0(1,0,0)*rhoE_B0(1,0,0)/rho_B0(1,0,0)
            - (25.0/12.0)*u0_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
            (1.0/4.0)*u0_B0(4,0,0)*rhoE_B0(4,0,0)/rho_B0(4,0,0) +
            ((4.0/3.0))*u0_B0(3,0,0)*rhoE_B0(3,0,0)/rho_B0(3,0,0))*invDelta0block0;

       d1_rhoEu1_dx = (-3*u1_B0(2,0,0)*rhoE_B0(2,0,0) + 4*u1_B0(1,0,0)*rhoE_B0(1,0,0) -
            (25.0/12.0)*u1_B0(0,0,0)*rhoE_B0(0,0,0) - (1.0/4.0)*u1_B0(4,0,0)*rhoE_B0(4,0,0) +
            ((4.0/3.0))*u1_B0(3,0,0)*rhoE_B0(3,0,0))*invDelta0block0;

       d1_inv_rhoErhou1_dx = (-3*u1_B0(2,0,0)*rhoE_B0(2,0,0)/rho_B0(2,0,0) + 4*u1_B0(1,0,0)*rhoE_B0(1,0,0)/rho_B0(1,0,0)
            - (25.0/12.0)*u1_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
            (1.0/4.0)*u1_B0(4,0,0)*rhoE_B0(4,0,0)/rho_B0(4,0,0) +
            ((4.0/3.0))*u1_B0(3,0,0)*rhoE_B0(3,0,0)/rho_B0(3,0,0))*invDelta0block0;

       d1_inv_rhoErho_dx = (-3*rhoE_B0(2,0,0)/rho_B0(2,0,0) + 4*rhoE_B0(1,0,0)/rho_B0(1,0,0) -
            (25.0/12.0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) - (1.0/4.0)*rhoE_B0(4,0,0)/rho_B0(4,0,0) +
            ((4.0/3.0))*rhoE_B0(3,0,0)/rho_B0(3,0,0))*invDelta0block0;

       d1_rho_dx = (-3*rho_B0(2,0,0) + 4*rho_B0(1,0,0) - (25.0/12.0)*rho_B0(0,0,0) - (1.0/4.0)*rho_B0(4,0,0) +
            ((4.0/3.0))*rho_B0(3,0,0))*invDelta0block0;

       d1_rhou0_dx = (-3*rhou0_B0(2,0,0) + 4*rhou0_B0(1,0,0) - (25.0/12.0)*rhou0_B0(0,0,0) - (1.0/4.0)*rhou0_B0(4,0,0) +
            ((4.0/3.0))*rhou0_B0(3,0,0))*invDelta0block0;

       d1_rhou0u0_dx = (-3*u0_B0(2,0,0)*rhou0_B0(2,0,0) + 4*u0_B0(1,0,0)*rhou0_B0(1,0,0) -
            (25.0/12.0)*u0_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/4.0)*u0_B0(4,0,0)*rhou0_B0(4,0,0) +
            ((4.0/3.0))*u0_B0(3,0,0)*rhou0_B0(3,0,0))*invDelta0block0;

       d1_rhou0u1_dx = (-3*u1_B0(2,0,0)*rhou0_B0(2,0,0) + 4*u1_B0(1,0,0)*rhou0_B0(1,0,0) -
            (25.0/12.0)*u1_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/4.0)*u1_B0(4,0,0)*rhou0_B0(4,0,0) +
            ((4.0/3.0))*u1_B0(3,0,0)*rhou0_B0(3,0,0))*invDelta0block0;

       d1_rhou0u2_dx = (-3*u2_B0(2,0,0)*rhou0_B0(2,0,0) + 4*u2_B0(1,0,0)*rhou0_B0(1,0,0) -
            (25.0/12.0)*u2_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/4.0)*u2_B0(4,0,0)*rhou0_B0(4,0,0) +
            ((4.0/3.0))*u2_B0(3,0,0)*rhou0_B0(3,0,0))*invDelta0block0;

       d1_rhou1_dx = (-3*rhou1_B0(2,0,0) + 4*rhou1_B0(1,0,0) - (25.0/12.0)*rhou1_B0(0,0,0) - (1.0/4.0)*rhou1_B0(4,0,0) +
            ((4.0/3.0))*rhou1_B0(3,0,0))*invDelta0block0;

       d1_rhou1u0_dx = (-3*u0_B0(2,0,0)*rhou1_B0(2,0,0) + 4*u0_B0(1,0,0)*rhou1_B0(1,0,0) -
            (25.0/12.0)*u0_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/4.0)*u0_B0(4,0,0)*rhou1_B0(4,0,0) +
            ((4.0/3.0))*u0_B0(3,0,0)*rhou1_B0(3,0,0))*invDelta0block0;

       d1_rhou1u1_dx = (-3*u1_B0(2,0,0)*rhou1_B0(2,0,0) + 4*u1_B0(1,0,0)*rhou1_B0(1,0,0) -
            (25.0/12.0)*u1_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/4.0)*u1_B0(4,0,0)*rhou1_B0(4,0,0) +
            ((4.0/3.0))*u1_B0(3,0,0)*rhou1_B0(3,0,0))*invDelta0block0;

       d1_rhou1u2_dx = (-3*u2_B0(2,0,0)*rhou1_B0(2,0,0) + 4*u2_B0(1,0,0)*rhou1_B0(1,0,0) -
            (25.0/12.0)*u2_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/4.0)*u2_B0(4,0,0)*rhou1_B0(4,0,0) +
            ((4.0/3.0))*u2_B0(3,0,0)*rhou1_B0(3,0,0))*invDelta0block0;

       d1_rhou2_dx = (-3*rhou2_B0(2,0,0) + 4*rhou2_B0(1,0,0) - (25.0/12.0)*rhou2_B0(0,0,0) - (1.0/4.0)*rhou2_B0(4,0,0) +
            ((4.0/3.0))*rhou2_B0(3,0,0))*invDelta0block0;

       d1_u0u0_dx = (-3*(u0_B0(2,0,0)*u0_B0(2,0,0)) + 4*(u0_B0(1,0,0)*u0_B0(1,0,0)) -
            (25.0/12.0)*(u0_B0(0,0,0)*u0_B0(0,0,0)) - (1.0/4.0)*(u0_B0(4,0,0)*u0_B0(4,0,0)) +
            ((4.0/3.0))*(u0_B0(3,0,0)*u0_B0(3,0,0)))*invDelta0block0;

       d1_u0u1_dx = (-3*u0_B0(2,0,0)*u1_B0(2,0,0) + 4*u0_B0(1,0,0)*u1_B0(1,0,0) - (25.0/12.0)*u0_B0(0,0,0)*u1_B0(0,0,0)
            - (1.0/4.0)*u0_B0(4,0,0)*u1_B0(4,0,0) + ((4.0/3.0))*u0_B0(3,0,0)*u1_B0(3,0,0))*invDelta0block0;

       d1_u0u2_dx = (-3*u0_B0(2,0,0)*u2_B0(2,0,0) + 4*u0_B0(1,0,0)*u2_B0(1,0,0) - (25.0/12.0)*u0_B0(0,0,0)*u2_B0(0,0,0)
            - (1.0/4.0)*u0_B0(4,0,0)*u2_B0(4,0,0) + ((4.0/3.0))*u0_B0(3,0,0)*u2_B0(3,0,0))*invDelta0block0;

       d1_u1u1_dx = (-3*(u1_B0(2,0,0)*u1_B0(2,0,0)) + 4*(u1_B0(1,0,0)*u1_B0(1,0,0)) -
            (25.0/12.0)*(u1_B0(0,0,0)*u1_B0(0,0,0)) - (1.0/4.0)*(u1_B0(4,0,0)*u1_B0(4,0,0)) +
            ((4.0/3.0))*(u1_B0(3,0,0)*u1_B0(3,0,0)))*invDelta0block0;

       d1_u1u2_dx = (-3*u1_B0(2,0,0)*u2_B0(2,0,0) + 4*u1_B0(1,0,0)*u2_B0(1,0,0) - (25.0/12.0)*u1_B0(0,0,0)*u2_B0(0,0,0)
            - (1.0/4.0)*u1_B0(4,0,0)*u2_B0(4,0,0) + ((4.0/3.0))*u1_B0(3,0,0)*u2_B0(3,0,0))*invDelta0block0;

   }

   else if (idx[0] == 1){

       d1_p_dx = (-(5.0/6.0)*p_B0(0,0,0) - (1.0/2.0)*p_B0(2,0,0) - (1.0/4.0)*p_B0(-1,0,0) + ((1.0/12.0))*p_B0(3,0,0) +
            ((3.0/2.0))*p_B0(1,0,0))*invDelta0block0;

       d1_pu0_dx = (-(5.0/6.0)*p_B0(0,0,0)*u0_B0(0,0,0) - (1.0/2.0)*p_B0(2,0,0)*u0_B0(2,0,0) -
            (1.0/4.0)*p_B0(-1,0,0)*u0_B0(-1,0,0) + ((1.0/12.0))*p_B0(3,0,0)*u0_B0(3,0,0) +
            ((3.0/2.0))*p_B0(1,0,0)*u0_B0(1,0,0))*invDelta0block0;

       d1_pu1_dx = (-(5.0/6.0)*p_B0(0,0,0)*u1_B0(0,0,0) - (1.0/2.0)*p_B0(2,0,0)*u1_B0(2,0,0) -
            (1.0/4.0)*p_B0(-1,0,0)*u1_B0(-1,0,0) + ((1.0/12.0))*p_B0(3,0,0)*u1_B0(3,0,0) +
            ((3.0/2.0))*p_B0(1,0,0)*u1_B0(1,0,0))*invDelta0block0;

       d1_rhoE_dx = (-(5.0/6.0)*rhoE_B0(0,0,0) - (1.0/2.0)*rhoE_B0(2,0,0) - (1.0/4.0)*rhoE_B0(-1,0,0) +
            ((1.0/12.0))*rhoE_B0(3,0,0) + ((3.0/2.0))*rhoE_B0(1,0,0))*invDelta0block0;

       d1_rhoEu0_dx = (-(5.0/6.0)*u0_B0(0,0,0)*rhoE_B0(0,0,0) - (1.0/2.0)*u0_B0(2,0,0)*rhoE_B0(2,0,0) -
            (1.0/4.0)*u0_B0(-1,0,0)*rhoE_B0(-1,0,0) + ((1.0/12.0))*u0_B0(3,0,0)*rhoE_B0(3,0,0) +
            ((3.0/2.0))*u0_B0(1,0,0)*rhoE_B0(1,0,0))*invDelta0block0;

       d1_inv_rhoErhou0_dx = (-(5.0/6.0)*u0_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
            (1.0/2.0)*u0_B0(2,0,0)*rhoE_B0(2,0,0)/rho_B0(2,0,0) - (1.0/4.0)*u0_B0(-1,0,0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0)
            + ((1.0/12.0))*u0_B0(3,0,0)*rhoE_B0(3,0,0)/rho_B0(3,0,0) +
            ((3.0/2.0))*u0_B0(1,0,0)*rhoE_B0(1,0,0)/rho_B0(1,0,0))*invDelta0block0;

       d1_rhoEu1_dx = (-(5.0/6.0)*u1_B0(0,0,0)*rhoE_B0(0,0,0) - (1.0/2.0)*u1_B0(2,0,0)*rhoE_B0(2,0,0) -
            (1.0/4.0)*u1_B0(-1,0,0)*rhoE_B0(-1,0,0) + ((1.0/12.0))*u1_B0(3,0,0)*rhoE_B0(3,0,0) +
            ((3.0/2.0))*u1_B0(1,0,0)*rhoE_B0(1,0,0))*invDelta0block0;

       d1_inv_rhoErhou1_dx = (-(5.0/6.0)*u1_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
            (1.0/2.0)*u1_B0(2,0,0)*rhoE_B0(2,0,0)/rho_B0(2,0,0) - (1.0/4.0)*u1_B0(-1,0,0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0)
            + ((1.0/12.0))*u1_B0(3,0,0)*rhoE_B0(3,0,0)/rho_B0(3,0,0) +
            ((3.0/2.0))*u1_B0(1,0,0)*rhoE_B0(1,0,0)/rho_B0(1,0,0))*invDelta0block0;

       d1_inv_rhoErho_dx = (-(5.0/6.0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) - (1.0/2.0)*rhoE_B0(2,0,0)/rho_B0(2,0,0) -
            (1.0/4.0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0) + ((1.0/12.0))*rhoE_B0(3,0,0)/rho_B0(3,0,0) +
            ((3.0/2.0))*rhoE_B0(1,0,0)/rho_B0(1,0,0))*invDelta0block0;

       d1_rho_dx = (-(5.0/6.0)*rho_B0(0,0,0) - (1.0/2.0)*rho_B0(2,0,0) - (1.0/4.0)*rho_B0(-1,0,0) +
            ((1.0/12.0))*rho_B0(3,0,0) + ((3.0/2.0))*rho_B0(1,0,0))*invDelta0block0;

       d1_rhou0_dx = (-(5.0/6.0)*rhou0_B0(0,0,0) - (1.0/2.0)*rhou0_B0(2,0,0) - (1.0/4.0)*rhou0_B0(-1,0,0) +
            ((1.0/12.0))*rhou0_B0(3,0,0) + ((3.0/2.0))*rhou0_B0(1,0,0))*invDelta0block0;

       d1_rhou0u0_dx = (-(5.0/6.0)*u0_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/2.0)*u0_B0(2,0,0)*rhou0_B0(2,0,0) -
            (1.0/4.0)*u0_B0(-1,0,0)*rhou0_B0(-1,0,0) + ((1.0/12.0))*u0_B0(3,0,0)*rhou0_B0(3,0,0) +
            ((3.0/2.0))*u0_B0(1,0,0)*rhou0_B0(1,0,0))*invDelta0block0;

       d1_rhou0u1_dx = (-(5.0/6.0)*u1_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/2.0)*u1_B0(2,0,0)*rhou0_B0(2,0,0) -
            (1.0/4.0)*u1_B0(-1,0,0)*rhou0_B0(-1,0,0) + ((1.0/12.0))*u1_B0(3,0,0)*rhou0_B0(3,0,0) +
            ((3.0/2.0))*u1_B0(1,0,0)*rhou0_B0(1,0,0))*invDelta0block0;

       d1_rhou0u2_dx = (-(5.0/6.0)*u2_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/2.0)*u2_B0(2,0,0)*rhou0_B0(2,0,0) -
            (1.0/4.0)*u2_B0(-1,0,0)*rhou0_B0(-1,0,0) + ((1.0/12.0))*u2_B0(3,0,0)*rhou0_B0(3,0,0) +
            ((3.0/2.0))*u2_B0(1,0,0)*rhou0_B0(1,0,0))*invDelta0block0;

       d1_rhou1_dx = (-(5.0/6.0)*rhou1_B0(0,0,0) - (1.0/2.0)*rhou1_B0(2,0,0) - (1.0/4.0)*rhou1_B0(-1,0,0) +
            ((1.0/12.0))*rhou1_B0(3,0,0) + ((3.0/2.0))*rhou1_B0(1,0,0))*invDelta0block0;

       d1_rhou1u0_dx = (-(5.0/6.0)*u0_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/2.0)*u0_B0(2,0,0)*rhou1_B0(2,0,0) -
            (1.0/4.0)*u0_B0(-1,0,0)*rhou1_B0(-1,0,0) + ((1.0/12.0))*u0_B0(3,0,0)*rhou1_B0(3,0,0) +
            ((3.0/2.0))*u0_B0(1,0,0)*rhou1_B0(1,0,0))*invDelta0block0;

       d1_rhou1u1_dx = (-(5.0/6.0)*u1_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/2.0)*u1_B0(2,0,0)*rhou1_B0(2,0,0) -
            (1.0/4.0)*u1_B0(-1,0,0)*rhou1_B0(-1,0,0) + ((1.0/12.0))*u1_B0(3,0,0)*rhou1_B0(3,0,0) +
            ((3.0/2.0))*u1_B0(1,0,0)*rhou1_B0(1,0,0))*invDelta0block0;

       d1_rhou1u2_dx = (-(5.0/6.0)*u2_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/2.0)*u2_B0(2,0,0)*rhou1_B0(2,0,0) -
            (1.0/4.0)*u2_B0(-1,0,0)*rhou1_B0(-1,0,0) + ((1.0/12.0))*u2_B0(3,0,0)*rhou1_B0(3,0,0) +
            ((3.0/2.0))*u2_B0(1,0,0)*rhou1_B0(1,0,0))*invDelta0block0;

       d1_rhou2_dx = (-(5.0/6.0)*rhou2_B0(0,0,0) - (1.0/2.0)*rhou2_B0(2,0,0) - (1.0/4.0)*rhou2_B0(-1,0,0) +
            ((1.0/12.0))*rhou2_B0(3,0,0) + ((3.0/2.0))*rhou2_B0(1,0,0))*invDelta0block0;

       d1_u0u0_dx = (-(5.0/6.0)*(u0_B0(0,0,0)*u0_B0(0,0,0)) - (1.0/2.0)*(u0_B0(2,0,0)*u0_B0(2,0,0)) -
            (1.0/4.0)*(u0_B0(-1,0,0)*u0_B0(-1,0,0)) + ((1.0/12.0))*(u0_B0(3,0,0)*u0_B0(3,0,0)) +
            ((3.0/2.0))*(u0_B0(1,0,0)*u0_B0(1,0,0)))*invDelta0block0;

       d1_u0u1_dx = (-(5.0/6.0)*u0_B0(0,0,0)*u1_B0(0,0,0) - (1.0/2.0)*u0_B0(2,0,0)*u1_B0(2,0,0) -
            (1.0/4.0)*u0_B0(-1,0,0)*u1_B0(-1,0,0) + ((1.0/12.0))*u0_B0(3,0,0)*u1_B0(3,0,0) +
            ((3.0/2.0))*u0_B0(1,0,0)*u1_B0(1,0,0))*invDelta0block0;

       d1_u0u2_dx = (-(5.0/6.0)*u0_B0(0,0,0)*u2_B0(0,0,0) - (1.0/2.0)*u0_B0(2,0,0)*u2_B0(2,0,0) -
            (1.0/4.0)*u0_B0(-1,0,0)*u2_B0(-1,0,0) + ((1.0/12.0))*u0_B0(3,0,0)*u2_B0(3,0,0) +
            ((3.0/2.0))*u0_B0(1,0,0)*u2_B0(1,0,0))*invDelta0block0;

       d1_u1u1_dx = (-(5.0/6.0)*(u1_B0(0,0,0)*u1_B0(0,0,0)) - (1.0/2.0)*(u1_B0(2,0,0)*u1_B0(2,0,0)) -
            (1.0/4.0)*(u1_B0(-1,0,0)*u1_B0(-1,0,0)) + ((1.0/12.0))*(u1_B0(3,0,0)*u1_B0(3,0,0)) +
            ((3.0/2.0))*(u1_B0(1,0,0)*u1_B0(1,0,0)))*invDelta0block0;

       d1_u1u2_dx = (-(5.0/6.0)*u1_B0(0,0,0)*u2_B0(0,0,0) - (1.0/2.0)*u1_B0(2,0,0)*u2_B0(2,0,0) -
            (1.0/4.0)*u1_B0(-1,0,0)*u2_B0(-1,0,0) + ((1.0/12.0))*u1_B0(3,0,0)*u2_B0(3,0,0) +
            ((3.0/2.0))*u1_B0(1,0,0)*u2_B0(1,0,0))*invDelta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       d1_p_dx = (-4*p_B0(-1,0,0) + 3*p_B0(-2,0,0) - (4.0/3.0)*p_B0(-3,0,0) + ((1.0/4.0))*p_B0(-4,0,0) +
            ((25.0/12.0))*p_B0(0,0,0))*invDelta0block0;

       d1_pu0_dx = (-4*p_B0(-1,0,0)*u0_B0(-1,0,0) + 3*p_B0(-2,0,0)*u0_B0(-2,0,0) - (4.0/3.0)*p_B0(-3,0,0)*u0_B0(-3,0,0)
            + ((1.0/4.0))*p_B0(-4,0,0)*u0_B0(-4,0,0) + ((25.0/12.0))*p_B0(0,0,0)*u0_B0(0,0,0))*invDelta0block0;

       d1_pu1_dx = (-4*p_B0(-1,0,0)*u1_B0(-1,0,0) + 3*p_B0(-2,0,0)*u1_B0(-2,0,0) - (4.0/3.0)*p_B0(-3,0,0)*u1_B0(-3,0,0)
            + ((1.0/4.0))*p_B0(-4,0,0)*u1_B0(-4,0,0) + ((25.0/12.0))*p_B0(0,0,0)*u1_B0(0,0,0))*invDelta0block0;

       d1_rhoE_dx = (-4*rhoE_B0(-1,0,0) + 3*rhoE_B0(-2,0,0) - (4.0/3.0)*rhoE_B0(-3,0,0) + ((1.0/4.0))*rhoE_B0(-4,0,0) +
            ((25.0/12.0))*rhoE_B0(0,0,0))*invDelta0block0;

       d1_rhoEu0_dx = (-4*u0_B0(-1,0,0)*rhoE_B0(-1,0,0) + 3*u0_B0(-2,0,0)*rhoE_B0(-2,0,0) -
            (4.0/3.0)*u0_B0(-3,0,0)*rhoE_B0(-3,0,0) + ((1.0/4.0))*u0_B0(-4,0,0)*rhoE_B0(-4,0,0) +
            ((25.0/12.0))*u0_B0(0,0,0)*rhoE_B0(0,0,0))*invDelta0block0;

       d1_inv_rhoErhou0_dx = (-4*u0_B0(-1,0,0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0) +
            3*u0_B0(-2,0,0)*rhoE_B0(-2,0,0)/rho_B0(-2,0,0) - (4.0/3.0)*u0_B0(-3,0,0)*rhoE_B0(-3,0,0)/rho_B0(-3,0,0) +
            ((1.0/4.0))*u0_B0(-4,0,0)*rhoE_B0(-4,0,0)/rho_B0(-4,0,0) +
            ((25.0/12.0))*u0_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0))*invDelta0block0;

       d1_rhoEu1_dx = (-4*u1_B0(-1,0,0)*rhoE_B0(-1,0,0) + 3*u1_B0(-2,0,0)*rhoE_B0(-2,0,0) -
            (4.0/3.0)*u1_B0(-3,0,0)*rhoE_B0(-3,0,0) + ((1.0/4.0))*u1_B0(-4,0,0)*rhoE_B0(-4,0,0) +
            ((25.0/12.0))*u1_B0(0,0,0)*rhoE_B0(0,0,0))*invDelta0block0;

       d1_inv_rhoErhou1_dx = (-4*u1_B0(-1,0,0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0) +
            3*u1_B0(-2,0,0)*rhoE_B0(-2,0,0)/rho_B0(-2,0,0) - (4.0/3.0)*u1_B0(-3,0,0)*rhoE_B0(-3,0,0)/rho_B0(-3,0,0) +
            ((1.0/4.0))*u1_B0(-4,0,0)*rhoE_B0(-4,0,0)/rho_B0(-4,0,0) +
            ((25.0/12.0))*u1_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0))*invDelta0block0;

       d1_inv_rhoErho_dx = (-4*rhoE_B0(-1,0,0)/rho_B0(-1,0,0) + 3*rhoE_B0(-2,0,0)/rho_B0(-2,0,0) -
            (4.0/3.0)*rhoE_B0(-3,0,0)/rho_B0(-3,0,0) + ((1.0/4.0))*rhoE_B0(-4,0,0)/rho_B0(-4,0,0) +
            ((25.0/12.0))*rhoE_B0(0,0,0)/rho_B0(0,0,0))*invDelta0block0;

       d1_rho_dx = (-4*rho_B0(-1,0,0) + 3*rho_B0(-2,0,0) - (4.0/3.0)*rho_B0(-3,0,0) + ((1.0/4.0))*rho_B0(-4,0,0) +
            ((25.0/12.0))*rho_B0(0,0,0))*invDelta0block0;

       d1_rhou0_dx = (-4*rhou0_B0(-1,0,0) + 3*rhou0_B0(-2,0,0) - (4.0/3.0)*rhou0_B0(-3,0,0) +
            ((1.0/4.0))*rhou0_B0(-4,0,0) + ((25.0/12.0))*rhou0_B0(0,0,0))*invDelta0block0;

       d1_rhou0u0_dx = (-4*u0_B0(-1,0,0)*rhou0_B0(-1,0,0) + 3*u0_B0(-2,0,0)*rhou0_B0(-2,0,0) -
            (4.0/3.0)*u0_B0(-3,0,0)*rhou0_B0(-3,0,0) + ((1.0/4.0))*u0_B0(-4,0,0)*rhou0_B0(-4,0,0) +
            ((25.0/12.0))*u0_B0(0,0,0)*rhou0_B0(0,0,0))*invDelta0block0;

       d1_rhou0u1_dx = (-4*u1_B0(-1,0,0)*rhou0_B0(-1,0,0) + 3*u1_B0(-2,0,0)*rhou0_B0(-2,0,0) -
            (4.0/3.0)*u1_B0(-3,0,0)*rhou0_B0(-3,0,0) + ((1.0/4.0))*u1_B0(-4,0,0)*rhou0_B0(-4,0,0) +
            ((25.0/12.0))*u1_B0(0,0,0)*rhou0_B0(0,0,0))*invDelta0block0;

       d1_rhou0u2_dx = (-4*u2_B0(-1,0,0)*rhou0_B0(-1,0,0) + 3*u2_B0(-2,0,0)*rhou0_B0(-2,0,0) -
            (4.0/3.0)*u2_B0(-3,0,0)*rhou0_B0(-3,0,0) + ((1.0/4.0))*u2_B0(-4,0,0)*rhou0_B0(-4,0,0) +
            ((25.0/12.0))*u2_B0(0,0,0)*rhou0_B0(0,0,0))*invDelta0block0;

       d1_rhou1_dx = (-4*rhou1_B0(-1,0,0) + 3*rhou1_B0(-2,0,0) - (4.0/3.0)*rhou1_B0(-3,0,0) +
            ((1.0/4.0))*rhou1_B0(-4,0,0) + ((25.0/12.0))*rhou1_B0(0,0,0))*invDelta0block0;

       d1_rhou1u0_dx = (-4*u0_B0(-1,0,0)*rhou1_B0(-1,0,0) + 3*u0_B0(-2,0,0)*rhou1_B0(-2,0,0) -
            (4.0/3.0)*u0_B0(-3,0,0)*rhou1_B0(-3,0,0) + ((1.0/4.0))*u0_B0(-4,0,0)*rhou1_B0(-4,0,0) +
            ((25.0/12.0))*u0_B0(0,0,0)*rhou1_B0(0,0,0))*invDelta0block0;

       d1_rhou1u1_dx = (-4*u1_B0(-1,0,0)*rhou1_B0(-1,0,0) + 3*u1_B0(-2,0,0)*rhou1_B0(-2,0,0) -
            (4.0/3.0)*u1_B0(-3,0,0)*rhou1_B0(-3,0,0) + ((1.0/4.0))*u1_B0(-4,0,0)*rhou1_B0(-4,0,0) +
            ((25.0/12.0))*u1_B0(0,0,0)*rhou1_B0(0,0,0))*invDelta0block0;

       d1_rhou1u2_dx = (-4*u2_B0(-1,0,0)*rhou1_B0(-1,0,0) + 3*u2_B0(-2,0,0)*rhou1_B0(-2,0,0) -
            (4.0/3.0)*u2_B0(-3,0,0)*rhou1_B0(-3,0,0) + ((1.0/4.0))*u2_B0(-4,0,0)*rhou1_B0(-4,0,0) +
            ((25.0/12.0))*u2_B0(0,0,0)*rhou1_B0(0,0,0))*invDelta0block0;

       d1_rhou2_dx = (-4*rhou2_B0(-1,0,0) + 3*rhou2_B0(-2,0,0) - (4.0/3.0)*rhou2_B0(-3,0,0) +
            ((1.0/4.0))*rhou2_B0(-4,0,0) + ((25.0/12.0))*rhou2_B0(0,0,0))*invDelta0block0;

       d1_u0u0_dx = (-4*(u0_B0(-1,0,0)*u0_B0(-1,0,0)) + 3*(u0_B0(-2,0,0)*u0_B0(-2,0,0)) -
            (4.0/3.0)*(u0_B0(-3,0,0)*u0_B0(-3,0,0)) + ((1.0/4.0))*(u0_B0(-4,0,0)*u0_B0(-4,0,0)) +
            ((25.0/12.0))*(u0_B0(0,0,0)*u0_B0(0,0,0)))*invDelta0block0;

       d1_u0u1_dx = (-4*u0_B0(-1,0,0)*u1_B0(-1,0,0) + 3*u0_B0(-2,0,0)*u1_B0(-2,0,0) -
            (4.0/3.0)*u0_B0(-3,0,0)*u1_B0(-3,0,0) + ((1.0/4.0))*u0_B0(-4,0,0)*u1_B0(-4,0,0) +
            ((25.0/12.0))*u0_B0(0,0,0)*u1_B0(0,0,0))*invDelta0block0;

       d1_u0u2_dx = (-4*u0_B0(-1,0,0)*u2_B0(-1,0,0) + 3*u0_B0(-2,0,0)*u2_B0(-2,0,0) -
            (4.0/3.0)*u0_B0(-3,0,0)*u2_B0(-3,0,0) + ((1.0/4.0))*u0_B0(-4,0,0)*u2_B0(-4,0,0) +
            ((25.0/12.0))*u0_B0(0,0,0)*u2_B0(0,0,0))*invDelta0block0;

       d1_u1u1_dx = (-4*(u1_B0(-1,0,0)*u1_B0(-1,0,0)) + 3*(u1_B0(-2,0,0)*u1_B0(-2,0,0)) -
            (4.0/3.0)*(u1_B0(-3,0,0)*u1_B0(-3,0,0)) + ((1.0/4.0))*(u1_B0(-4,0,0)*u1_B0(-4,0,0)) +
            ((25.0/12.0))*(u1_B0(0,0,0)*u1_B0(0,0,0)))*invDelta0block0;

       d1_u1u2_dx = (-4*u1_B0(-1,0,0)*u2_B0(-1,0,0) + 3*u1_B0(-2,0,0)*u2_B0(-2,0,0) -
            (4.0/3.0)*u1_B0(-3,0,0)*u2_B0(-3,0,0) + ((1.0/4.0))*u1_B0(-4,0,0)*u2_B0(-4,0,0) +
            ((25.0/12.0))*u1_B0(0,0,0)*u2_B0(0,0,0))*invDelta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       d1_p_dx = (((1.0/2.0))*p_B0(-2,0,0) - (3.0/2.0)*p_B0(-1,0,0) - (1.0/12.0)*p_B0(-3,0,0) + ((1.0/4.0))*p_B0(1,0,0)
            + ((5.0/6.0))*p_B0(0,0,0))*invDelta0block0;

       d1_pu0_dx = (((1.0/2.0))*p_B0(-2,0,0)*u0_B0(-2,0,0) - (3.0/2.0)*p_B0(-1,0,0)*u0_B0(-1,0,0) -
            (1.0/12.0)*p_B0(-3,0,0)*u0_B0(-3,0,0) + ((1.0/4.0))*p_B0(1,0,0)*u0_B0(1,0,0) +
            ((5.0/6.0))*p_B0(0,0,0)*u0_B0(0,0,0))*invDelta0block0;

       d1_pu1_dx = (((1.0/2.0))*p_B0(-2,0,0)*u1_B0(-2,0,0) - (3.0/2.0)*p_B0(-1,0,0)*u1_B0(-1,0,0) -
            (1.0/12.0)*p_B0(-3,0,0)*u1_B0(-3,0,0) + ((1.0/4.0))*p_B0(1,0,0)*u1_B0(1,0,0) +
            ((5.0/6.0))*p_B0(0,0,0)*u1_B0(0,0,0))*invDelta0block0;

       d1_rhoE_dx = (((1.0/2.0))*rhoE_B0(-2,0,0) - (3.0/2.0)*rhoE_B0(-1,0,0) - (1.0/12.0)*rhoE_B0(-3,0,0) +
            ((1.0/4.0))*rhoE_B0(1,0,0) + ((5.0/6.0))*rhoE_B0(0,0,0))*invDelta0block0;

       d1_rhoEu0_dx = (((1.0/2.0))*u0_B0(-2,0,0)*rhoE_B0(-2,0,0) - (3.0/2.0)*u0_B0(-1,0,0)*rhoE_B0(-1,0,0) -
            (1.0/12.0)*u0_B0(-3,0,0)*rhoE_B0(-3,0,0) + ((1.0/4.0))*u0_B0(1,0,0)*rhoE_B0(1,0,0) +
            ((5.0/6.0))*u0_B0(0,0,0)*rhoE_B0(0,0,0))*invDelta0block0;

       d1_inv_rhoErhou0_dx = (((1.0/2.0))*u0_B0(-2,0,0)*rhoE_B0(-2,0,0)/rho_B0(-2,0,0) -
            (3.0/2.0)*u0_B0(-1,0,0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0) -
            (1.0/12.0)*u0_B0(-3,0,0)*rhoE_B0(-3,0,0)/rho_B0(-3,0,0) +
            ((1.0/4.0))*u0_B0(1,0,0)*rhoE_B0(1,0,0)/rho_B0(1,0,0) +
            ((5.0/6.0))*u0_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0))*invDelta0block0;

       d1_rhoEu1_dx = (((1.0/2.0))*u1_B0(-2,0,0)*rhoE_B0(-2,0,0) - (3.0/2.0)*u1_B0(-1,0,0)*rhoE_B0(-1,0,0) -
            (1.0/12.0)*u1_B0(-3,0,0)*rhoE_B0(-3,0,0) + ((1.0/4.0))*u1_B0(1,0,0)*rhoE_B0(1,0,0) +
            ((5.0/6.0))*u1_B0(0,0,0)*rhoE_B0(0,0,0))*invDelta0block0;

       d1_inv_rhoErhou1_dx = (((1.0/2.0))*u1_B0(-2,0,0)*rhoE_B0(-2,0,0)/rho_B0(-2,0,0) -
            (3.0/2.0)*u1_B0(-1,0,0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0) -
            (1.0/12.0)*u1_B0(-3,0,0)*rhoE_B0(-3,0,0)/rho_B0(-3,0,0) +
            ((1.0/4.0))*u1_B0(1,0,0)*rhoE_B0(1,0,0)/rho_B0(1,0,0) +
            ((5.0/6.0))*u1_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0))*invDelta0block0;

       d1_inv_rhoErho_dx = (((1.0/2.0))*rhoE_B0(-2,0,0)/rho_B0(-2,0,0) - (3.0/2.0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0) -
            (1.0/12.0)*rhoE_B0(-3,0,0)/rho_B0(-3,0,0) + ((1.0/4.0))*rhoE_B0(1,0,0)/rho_B0(1,0,0) +
            ((5.0/6.0))*rhoE_B0(0,0,0)/rho_B0(0,0,0))*invDelta0block0;

       d1_rho_dx = (((1.0/2.0))*rho_B0(-2,0,0) - (3.0/2.0)*rho_B0(-1,0,0) - (1.0/12.0)*rho_B0(-3,0,0) +
            ((1.0/4.0))*rho_B0(1,0,0) + ((5.0/6.0))*rho_B0(0,0,0))*invDelta0block0;

       d1_rhou0_dx = (((1.0/2.0))*rhou0_B0(-2,0,0) - (3.0/2.0)*rhou0_B0(-1,0,0) - (1.0/12.0)*rhou0_B0(-3,0,0) +
            ((1.0/4.0))*rhou0_B0(1,0,0) + ((5.0/6.0))*rhou0_B0(0,0,0))*invDelta0block0;

       d1_rhou0u0_dx = (((1.0/2.0))*u0_B0(-2,0,0)*rhou0_B0(-2,0,0) - (3.0/2.0)*u0_B0(-1,0,0)*rhou0_B0(-1,0,0) -
            (1.0/12.0)*u0_B0(-3,0,0)*rhou0_B0(-3,0,0) + ((1.0/4.0))*u0_B0(1,0,0)*rhou0_B0(1,0,0) +
            ((5.0/6.0))*u0_B0(0,0,0)*rhou0_B0(0,0,0))*invDelta0block0;

       d1_rhou0u1_dx = (((1.0/2.0))*u1_B0(-2,0,0)*rhou0_B0(-2,0,0) - (3.0/2.0)*u1_B0(-1,0,0)*rhou0_B0(-1,0,0) -
            (1.0/12.0)*u1_B0(-3,0,0)*rhou0_B0(-3,0,0) + ((1.0/4.0))*u1_B0(1,0,0)*rhou0_B0(1,0,0) +
            ((5.0/6.0))*u1_B0(0,0,0)*rhou0_B0(0,0,0))*invDelta0block0;

       d1_rhou0u2_dx = (((1.0/2.0))*u2_B0(-2,0,0)*rhou0_B0(-2,0,0) - (3.0/2.0)*u2_B0(-1,0,0)*rhou0_B0(-1,0,0) -
            (1.0/12.0)*u2_B0(-3,0,0)*rhou0_B0(-3,0,0) + ((1.0/4.0))*u2_B0(1,0,0)*rhou0_B0(1,0,0) +
            ((5.0/6.0))*u2_B0(0,0,0)*rhou0_B0(0,0,0))*invDelta0block0;

       d1_rhou1_dx = (((1.0/2.0))*rhou1_B0(-2,0,0) - (3.0/2.0)*rhou1_B0(-1,0,0) - (1.0/12.0)*rhou1_B0(-3,0,0) +
            ((1.0/4.0))*rhou1_B0(1,0,0) + ((5.0/6.0))*rhou1_B0(0,0,0))*invDelta0block0;

       d1_rhou1u0_dx = (((1.0/2.0))*u0_B0(-2,0,0)*rhou1_B0(-2,0,0) - (3.0/2.0)*u0_B0(-1,0,0)*rhou1_B0(-1,0,0) -
            (1.0/12.0)*u0_B0(-3,0,0)*rhou1_B0(-3,0,0) + ((1.0/4.0))*u0_B0(1,0,0)*rhou1_B0(1,0,0) +
            ((5.0/6.0))*u0_B0(0,0,0)*rhou1_B0(0,0,0))*invDelta0block0;

       d1_rhou1u1_dx = (((1.0/2.0))*u1_B0(-2,0,0)*rhou1_B0(-2,0,0) - (3.0/2.0)*u1_B0(-1,0,0)*rhou1_B0(-1,0,0) -
            (1.0/12.0)*u1_B0(-3,0,0)*rhou1_B0(-3,0,0) + ((1.0/4.0))*u1_B0(1,0,0)*rhou1_B0(1,0,0) +
            ((5.0/6.0))*u1_B0(0,0,0)*rhou1_B0(0,0,0))*invDelta0block0;

       d1_rhou1u2_dx = (((1.0/2.0))*u2_B0(-2,0,0)*rhou1_B0(-2,0,0) - (3.0/2.0)*u2_B0(-1,0,0)*rhou1_B0(-1,0,0) -
            (1.0/12.0)*u2_B0(-3,0,0)*rhou1_B0(-3,0,0) + ((1.0/4.0))*u2_B0(1,0,0)*rhou1_B0(1,0,0) +
            ((5.0/6.0))*u2_B0(0,0,0)*rhou1_B0(0,0,0))*invDelta0block0;

       d1_rhou2_dx = (((1.0/2.0))*rhou2_B0(-2,0,0) - (3.0/2.0)*rhou2_B0(-1,0,0) - (1.0/12.0)*rhou2_B0(-3,0,0) +
            ((1.0/4.0))*rhou2_B0(1,0,0) + ((5.0/6.0))*rhou2_B0(0,0,0))*invDelta0block0;

       d1_u0u0_dx = (((1.0/2.0))*(u0_B0(-2,0,0)*u0_B0(-2,0,0)) - (3.0/2.0)*(u0_B0(-1,0,0)*u0_B0(-1,0,0)) -
            (1.0/12.0)*(u0_B0(-3,0,0)*u0_B0(-3,0,0)) + ((1.0/4.0))*(u0_B0(1,0,0)*u0_B0(1,0,0)) +
            ((5.0/6.0))*(u0_B0(0,0,0)*u0_B0(0,0,0)))*invDelta0block0;

       d1_u0u1_dx = (((1.0/2.0))*u0_B0(-2,0,0)*u1_B0(-2,0,0) - (3.0/2.0)*u0_B0(-1,0,0)*u1_B0(-1,0,0) -
            (1.0/12.0)*u0_B0(-3,0,0)*u1_B0(-3,0,0) + ((1.0/4.0))*u0_B0(1,0,0)*u1_B0(1,0,0) +
            ((5.0/6.0))*u0_B0(0,0,0)*u1_B0(0,0,0))*invDelta0block0;

       d1_u0u2_dx = (((1.0/2.0))*u0_B0(-2,0,0)*u2_B0(-2,0,0) - (3.0/2.0)*u0_B0(-1,0,0)*u2_B0(-1,0,0) -
            (1.0/12.0)*u0_B0(-3,0,0)*u2_B0(-3,0,0) + ((1.0/4.0))*u0_B0(1,0,0)*u2_B0(1,0,0) +
            ((5.0/6.0))*u0_B0(0,0,0)*u2_B0(0,0,0))*invDelta0block0;

       d1_u1u1_dx = (((1.0/2.0))*(u1_B0(-2,0,0)*u1_B0(-2,0,0)) - (3.0/2.0)*(u1_B0(-1,0,0)*u1_B0(-1,0,0)) -
            (1.0/12.0)*(u1_B0(-3,0,0)*u1_B0(-3,0,0)) + ((1.0/4.0))*(u1_B0(1,0,0)*u1_B0(1,0,0)) +
            ((5.0/6.0))*(u1_B0(0,0,0)*u1_B0(0,0,0)))*invDelta0block0;

       d1_u1u2_dx = (((1.0/2.0))*u1_B0(-2,0,0)*u2_B0(-2,0,0) - (3.0/2.0)*u1_B0(-1,0,0)*u2_B0(-1,0,0) -
            (1.0/12.0)*u1_B0(-3,0,0)*u2_B0(-3,0,0) + ((1.0/4.0))*u1_B0(1,0,0)*u2_B0(1,0,0) +
            ((5.0/6.0))*u1_B0(0,0,0)*u2_B0(0,0,0))*invDelta0block0;

   }

   else{

       d1_p_dx = (-(2.0/3.0)*p_B0(-1,0,0) - (1.0/12.0)*p_B0(2,0,0) + ((1.0/12.0))*p_B0(-2,0,0) +
            ((2.0/3.0))*p_B0(1,0,0))*invDelta0block0;

       d1_pu0_dx = (-(2.0/3.0)*p_B0(-1,0,0)*u0_B0(-1,0,0) - (1.0/12.0)*p_B0(2,0,0)*u0_B0(2,0,0) +
            ((1.0/12.0))*p_B0(-2,0,0)*u0_B0(-2,0,0) + ((2.0/3.0))*p_B0(1,0,0)*u0_B0(1,0,0))*invDelta0block0;

       d1_pu1_dx = (-(2.0/3.0)*p_B0(-1,0,0)*u1_B0(-1,0,0) - (1.0/12.0)*p_B0(2,0,0)*u1_B0(2,0,0) +
            ((1.0/12.0))*p_B0(-2,0,0)*u1_B0(-2,0,0) + ((2.0/3.0))*p_B0(1,0,0)*u1_B0(1,0,0))*invDelta0block0;

       d1_rhoE_dx = (-(2.0/3.0)*rhoE_B0(-1,0,0) - (1.0/12.0)*rhoE_B0(2,0,0) + ((1.0/12.0))*rhoE_B0(-2,0,0) +
            ((2.0/3.0))*rhoE_B0(1,0,0))*invDelta0block0;

       d1_rhoEu0_dx = (-(2.0/3.0)*u0_B0(-1,0,0)*rhoE_B0(-1,0,0) - (1.0/12.0)*u0_B0(2,0,0)*rhoE_B0(2,0,0) +
            ((1.0/12.0))*u0_B0(-2,0,0)*rhoE_B0(-2,0,0) + ((2.0/3.0))*u0_B0(1,0,0)*rhoE_B0(1,0,0))*invDelta0block0;

       d1_inv_rhoErhou0_dx = (-(2.0/3.0)*u0_B0(-1,0,0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0) -
            (1.0/12.0)*u0_B0(2,0,0)*rhoE_B0(2,0,0)/rho_B0(2,0,0) +
            ((1.0/12.0))*u0_B0(-2,0,0)*rhoE_B0(-2,0,0)/rho_B0(-2,0,0) +
            ((2.0/3.0))*u0_B0(1,0,0)*rhoE_B0(1,0,0)/rho_B0(1,0,0))*invDelta0block0;

       d1_rhoEu1_dx = (-(2.0/3.0)*u1_B0(-1,0,0)*rhoE_B0(-1,0,0) - (1.0/12.0)*u1_B0(2,0,0)*rhoE_B0(2,0,0) +
            ((1.0/12.0))*u1_B0(-2,0,0)*rhoE_B0(-2,0,0) + ((2.0/3.0))*u1_B0(1,0,0)*rhoE_B0(1,0,0))*invDelta0block0;

       d1_inv_rhoErhou1_dx = (-(2.0/3.0)*u1_B0(-1,0,0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0) -
            (1.0/12.0)*u1_B0(2,0,0)*rhoE_B0(2,0,0)/rho_B0(2,0,0) +
            ((1.0/12.0))*u1_B0(-2,0,0)*rhoE_B0(-2,0,0)/rho_B0(-2,0,0) +
            ((2.0/3.0))*u1_B0(1,0,0)*rhoE_B0(1,0,0)/rho_B0(1,0,0))*invDelta0block0;

       d1_inv_rhoErho_dx = (-(2.0/3.0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0) - (1.0/12.0)*rhoE_B0(2,0,0)/rho_B0(2,0,0) +
            ((1.0/12.0))*rhoE_B0(-2,0,0)/rho_B0(-2,0,0) + ((2.0/3.0))*rhoE_B0(1,0,0)/rho_B0(1,0,0))*invDelta0block0;

       d1_rho_dx = (-(2.0/3.0)*rho_B0(-1,0,0) - (1.0/12.0)*rho_B0(2,0,0) + ((1.0/12.0))*rho_B0(-2,0,0) +
            ((2.0/3.0))*rho_B0(1,0,0))*invDelta0block0;

       d1_rhou0_dx = (-(2.0/3.0)*rhou0_B0(-1,0,0) - (1.0/12.0)*rhou0_B0(2,0,0) + ((1.0/12.0))*rhou0_B0(-2,0,0) +
            ((2.0/3.0))*rhou0_B0(1,0,0))*invDelta0block0;

       d1_rhou0u0_dx = (-(2.0/3.0)*u0_B0(-1,0,0)*rhou0_B0(-1,0,0) - (1.0/12.0)*u0_B0(2,0,0)*rhou0_B0(2,0,0) +
            ((1.0/12.0))*u0_B0(-2,0,0)*rhou0_B0(-2,0,0) + ((2.0/3.0))*u0_B0(1,0,0)*rhou0_B0(1,0,0))*invDelta0block0;

       d1_rhou0u1_dx = (-(2.0/3.0)*u1_B0(-1,0,0)*rhou0_B0(-1,0,0) - (1.0/12.0)*u1_B0(2,0,0)*rhou0_B0(2,0,0) +
            ((1.0/12.0))*u1_B0(-2,0,0)*rhou0_B0(-2,0,0) + ((2.0/3.0))*u1_B0(1,0,0)*rhou0_B0(1,0,0))*invDelta0block0;

       d1_rhou0u2_dx = (-(2.0/3.0)*u2_B0(-1,0,0)*rhou0_B0(-1,0,0) - (1.0/12.0)*u2_B0(2,0,0)*rhou0_B0(2,0,0) +
            ((1.0/12.0))*u2_B0(-2,0,0)*rhou0_B0(-2,0,0) + ((2.0/3.0))*u2_B0(1,0,0)*rhou0_B0(1,0,0))*invDelta0block0;

       d1_rhou1_dx = (-(2.0/3.0)*rhou1_B0(-1,0,0) - (1.0/12.0)*rhou1_B0(2,0,0) + ((1.0/12.0))*rhou1_B0(-2,0,0) +
            ((2.0/3.0))*rhou1_B0(1,0,0))*invDelta0block0;

       d1_rhou1u0_dx = (-(2.0/3.0)*u0_B0(-1,0,0)*rhou1_B0(-1,0,0) - (1.0/12.0)*u0_B0(2,0,0)*rhou1_B0(2,0,0) +
            ((1.0/12.0))*u0_B0(-2,0,0)*rhou1_B0(-2,0,0) + ((2.0/3.0))*u0_B0(1,0,0)*rhou1_B0(1,0,0))*invDelta0block0;

       d1_rhou1u1_dx = (-(2.0/3.0)*u1_B0(-1,0,0)*rhou1_B0(-1,0,0) - (1.0/12.0)*u1_B0(2,0,0)*rhou1_B0(2,0,0) +
            ((1.0/12.0))*u1_B0(-2,0,0)*rhou1_B0(-2,0,0) + ((2.0/3.0))*u1_B0(1,0,0)*rhou1_B0(1,0,0))*invDelta0block0;

       d1_rhou1u2_dx = (-(2.0/3.0)*u2_B0(-1,0,0)*rhou1_B0(-1,0,0) - (1.0/12.0)*u2_B0(2,0,0)*rhou1_B0(2,0,0) +
            ((1.0/12.0))*u2_B0(-2,0,0)*rhou1_B0(-2,0,0) + ((2.0/3.0))*u2_B0(1,0,0)*rhou1_B0(1,0,0))*invDelta0block0;

       d1_rhou2_dx = (-(2.0/3.0)*rhou2_B0(-1,0,0) - (1.0/12.0)*rhou2_B0(2,0,0) + ((1.0/12.0))*rhou2_B0(-2,0,0) +
            ((2.0/3.0))*rhou2_B0(1,0,0))*invDelta0block0;

       d1_u0u0_dx = (-(2.0/3.0)*(u0_B0(-1,0,0)*u0_B0(-1,0,0)) - (1.0/12.0)*(u0_B0(2,0,0)*u0_B0(2,0,0)) +
            ((1.0/12.0))*(u0_B0(-2,0,0)*u0_B0(-2,0,0)) + ((2.0/3.0))*(u0_B0(1,0,0)*u0_B0(1,0,0)))*invDelta0block0;

       d1_u0u1_dx = (-(2.0/3.0)*u0_B0(-1,0,0)*u1_B0(-1,0,0) - (1.0/12.0)*u0_B0(2,0,0)*u1_B0(2,0,0) +
            ((1.0/12.0))*u0_B0(-2,0,0)*u1_B0(-2,0,0) + ((2.0/3.0))*u0_B0(1,0,0)*u1_B0(1,0,0))*invDelta0block0;

       d1_u0u2_dx = (-(2.0/3.0)*u0_B0(-1,0,0)*u2_B0(-1,0,0) - (1.0/12.0)*u0_B0(2,0,0)*u2_B0(2,0,0) +
            ((1.0/12.0))*u0_B0(-2,0,0)*u2_B0(-2,0,0) + ((2.0/3.0))*u0_B0(1,0,0)*u2_B0(1,0,0))*invDelta0block0;

       d1_u1u1_dx = (-(2.0/3.0)*(u1_B0(-1,0,0)*u1_B0(-1,0,0)) - (1.0/12.0)*(u1_B0(2,0,0)*u1_B0(2,0,0)) +
            ((1.0/12.0))*(u1_B0(-2,0,0)*u1_B0(-2,0,0)) + ((2.0/3.0))*(u1_B0(1,0,0)*u1_B0(1,0,0)))*invDelta0block0;

       d1_u1u2_dx = (-(2.0/3.0)*u1_B0(-1,0,0)*u2_B0(-1,0,0) - (1.0/12.0)*u1_B0(2,0,0)*u2_B0(2,0,0) +
            ((1.0/12.0))*u1_B0(-2,0,0)*u2_B0(-2,0,0) + ((2.0/3.0))*u1_B0(1,0,0)*u2_B0(1,0,0))*invDelta0block0;

   }

   if (idx[1] == 0){

       d1_p_dy = (-3*p_B0(0,2,0) + 4*p_B0(0,1,0) - (25.0/12.0)*p_B0(0,0,0) - (1.0/4.0)*p_B0(0,4,0) +
            ((4.0/3.0))*p_B0(0,3,0))*invDelta1block0;

       d1_pu0_dy = (-3*p_B0(0,2,0)*u0_B0(0,2,0) + 4*p_B0(0,1,0)*u0_B0(0,1,0) - (25.0/12.0)*p_B0(0,0,0)*u0_B0(0,0,0) -
            (1.0/4.0)*p_B0(0,4,0)*u0_B0(0,4,0) + ((4.0/3.0))*p_B0(0,3,0)*u0_B0(0,3,0))*invDelta1block0;

       d1_pu1_dy = (-3*p_B0(0,2,0)*u1_B0(0,2,0) + 4*p_B0(0,1,0)*u1_B0(0,1,0) - (25.0/12.0)*p_B0(0,0,0)*u1_B0(0,0,0) -
            (1.0/4.0)*p_B0(0,4,0)*u1_B0(0,4,0) + ((4.0/3.0))*p_B0(0,3,0)*u1_B0(0,3,0))*invDelta1block0;

       d1_rhoE_dy = (-3*rhoE_B0(0,2,0) + 4*rhoE_B0(0,1,0) - (25.0/12.0)*rhoE_B0(0,0,0) - (1.0/4.0)*rhoE_B0(0,4,0) +
            ((4.0/3.0))*rhoE_B0(0,3,0))*invDelta1block0;

       d1_rhoEu0_dy = (-3*u0_B0(0,2,0)*rhoE_B0(0,2,0) + 4*u0_B0(0,1,0)*rhoE_B0(0,1,0) -
            (25.0/12.0)*u0_B0(0,0,0)*rhoE_B0(0,0,0) - (1.0/4.0)*u0_B0(0,4,0)*rhoE_B0(0,4,0) +
            ((4.0/3.0))*u0_B0(0,3,0)*rhoE_B0(0,3,0))*invDelta1block0;

       d1_inv_rhoErhou0_dy = (-3*u0_B0(0,2,0)*rhoE_B0(0,2,0)/rho_B0(0,2,0) + 4*u0_B0(0,1,0)*rhoE_B0(0,1,0)/rho_B0(0,1,0)
            - (25.0/12.0)*u0_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
            (1.0/4.0)*u0_B0(0,4,0)*rhoE_B0(0,4,0)/rho_B0(0,4,0) +
            ((4.0/3.0))*u0_B0(0,3,0)*rhoE_B0(0,3,0)/rho_B0(0,3,0))*invDelta1block0;

       d1_rhoEu1_dy = (-3*u1_B0(0,2,0)*rhoE_B0(0,2,0) + 4*u1_B0(0,1,0)*rhoE_B0(0,1,0) -
            (25.0/12.0)*u1_B0(0,0,0)*rhoE_B0(0,0,0) - (1.0/4.0)*u1_B0(0,4,0)*rhoE_B0(0,4,0) +
            ((4.0/3.0))*u1_B0(0,3,0)*rhoE_B0(0,3,0))*invDelta1block0;

       d1_inv_rhoErhou1_dy = (-3*u1_B0(0,2,0)*rhoE_B0(0,2,0)/rho_B0(0,2,0) + 4*u1_B0(0,1,0)*rhoE_B0(0,1,0)/rho_B0(0,1,0)
            - (25.0/12.0)*u1_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
            (1.0/4.0)*u1_B0(0,4,0)*rhoE_B0(0,4,0)/rho_B0(0,4,0) +
            ((4.0/3.0))*u1_B0(0,3,0)*rhoE_B0(0,3,0)/rho_B0(0,3,0))*invDelta1block0;

       d1_inv_rhoErho_dy = (-3*rhoE_B0(0,2,0)/rho_B0(0,2,0) + 4*rhoE_B0(0,1,0)/rho_B0(0,1,0) -
            (25.0/12.0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) - (1.0/4.0)*rhoE_B0(0,4,0)/rho_B0(0,4,0) +
            ((4.0/3.0))*rhoE_B0(0,3,0)/rho_B0(0,3,0))*invDelta1block0;

       d1_rho_dy = (-3*rho_B0(0,2,0) + 4*rho_B0(0,1,0) - (25.0/12.0)*rho_B0(0,0,0) - (1.0/4.0)*rho_B0(0,4,0) +
            ((4.0/3.0))*rho_B0(0,3,0))*invDelta1block0;

       d1_rhou0_dy = (-3*rhou0_B0(0,2,0) + 4*rhou0_B0(0,1,0) - (25.0/12.0)*rhou0_B0(0,0,0) - (1.0/4.0)*rhou0_B0(0,4,0) +
            ((4.0/3.0))*rhou0_B0(0,3,0))*invDelta1block0;

       d1_rhou0u0_dy = (-3*u0_B0(0,2,0)*rhou0_B0(0,2,0) + 4*u0_B0(0,1,0)*rhou0_B0(0,1,0) -
            (25.0/12.0)*u0_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/4.0)*u0_B0(0,4,0)*rhou0_B0(0,4,0) +
            ((4.0/3.0))*u0_B0(0,3,0)*rhou0_B0(0,3,0))*invDelta1block0;

       d1_rhou0u1_dy = (-3*u1_B0(0,2,0)*rhou0_B0(0,2,0) + 4*u1_B0(0,1,0)*rhou0_B0(0,1,0) -
            (25.0/12.0)*u1_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/4.0)*u1_B0(0,4,0)*rhou0_B0(0,4,0) +
            ((4.0/3.0))*u1_B0(0,3,0)*rhou0_B0(0,3,0))*invDelta1block0;

       d1_rhou0u2_dy = (-3*u2_B0(0,2,0)*rhou0_B0(0,2,0) + 4*u2_B0(0,1,0)*rhou0_B0(0,1,0) -
            (25.0/12.0)*u2_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/4.0)*u2_B0(0,4,0)*rhou0_B0(0,4,0) +
            ((4.0/3.0))*u2_B0(0,3,0)*rhou0_B0(0,3,0))*invDelta1block0;

       d1_rhou1_dy = (-3*rhou1_B0(0,2,0) + 4*rhou1_B0(0,1,0) - (25.0/12.0)*rhou1_B0(0,0,0) - (1.0/4.0)*rhou1_B0(0,4,0) +
            ((4.0/3.0))*rhou1_B0(0,3,0))*invDelta1block0;

       d1_rhou1u0_dy = (-3*u0_B0(0,2,0)*rhou1_B0(0,2,0) + 4*u0_B0(0,1,0)*rhou1_B0(0,1,0) -
            (25.0/12.0)*u0_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/4.0)*u0_B0(0,4,0)*rhou1_B0(0,4,0) +
            ((4.0/3.0))*u0_B0(0,3,0)*rhou1_B0(0,3,0))*invDelta1block0;

       d1_rhou1u1_dy = (-3*u1_B0(0,2,0)*rhou1_B0(0,2,0) + 4*u1_B0(0,1,0)*rhou1_B0(0,1,0) -
            (25.0/12.0)*u1_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/4.0)*u1_B0(0,4,0)*rhou1_B0(0,4,0) +
            ((4.0/3.0))*u1_B0(0,3,0)*rhou1_B0(0,3,0))*invDelta1block0;

       d1_rhou1u2_dy = (-3*u2_B0(0,2,0)*rhou1_B0(0,2,0) + 4*u2_B0(0,1,0)*rhou1_B0(0,1,0) -
            (25.0/12.0)*u2_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/4.0)*u2_B0(0,4,0)*rhou1_B0(0,4,0) +
            ((4.0/3.0))*u2_B0(0,3,0)*rhou1_B0(0,3,0))*invDelta1block0;

       d1_rhou2_dy = (-3*rhou2_B0(0,2,0) + 4*rhou2_B0(0,1,0) - (25.0/12.0)*rhou2_B0(0,0,0) - (1.0/4.0)*rhou2_B0(0,4,0) +
            ((4.0/3.0))*rhou2_B0(0,3,0))*invDelta1block0;

       d1_u0u0_dy = (-3*(u0_B0(0,2,0)*u0_B0(0,2,0)) + 4*(u0_B0(0,1,0)*u0_B0(0,1,0)) -
            (25.0/12.0)*(u0_B0(0,0,0)*u0_B0(0,0,0)) - (1.0/4.0)*(u0_B0(0,4,0)*u0_B0(0,4,0)) +
            ((4.0/3.0))*(u0_B0(0,3,0)*u0_B0(0,3,0)))*invDelta1block0;

       d1_u0u1_dy = (-3*u0_B0(0,2,0)*u1_B0(0,2,0) + 4*u0_B0(0,1,0)*u1_B0(0,1,0) - (25.0/12.0)*u0_B0(0,0,0)*u1_B0(0,0,0)
            - (1.0/4.0)*u0_B0(0,4,0)*u1_B0(0,4,0) + ((4.0/3.0))*u0_B0(0,3,0)*u1_B0(0,3,0))*invDelta1block0;

       d1_u0u2_dy = (-3*u0_B0(0,2,0)*u2_B0(0,2,0) + 4*u0_B0(0,1,0)*u2_B0(0,1,0) - (25.0/12.0)*u0_B0(0,0,0)*u2_B0(0,0,0)
            - (1.0/4.0)*u0_B0(0,4,0)*u2_B0(0,4,0) + ((4.0/3.0))*u0_B0(0,3,0)*u2_B0(0,3,0))*invDelta1block0;

       d1_u1u1_dy = (-3*(u1_B0(0,2,0)*u1_B0(0,2,0)) + 4*(u1_B0(0,1,0)*u1_B0(0,1,0)) -
            (25.0/12.0)*(u1_B0(0,0,0)*u1_B0(0,0,0)) - (1.0/4.0)*(u1_B0(0,4,0)*u1_B0(0,4,0)) +
            ((4.0/3.0))*(u1_B0(0,3,0)*u1_B0(0,3,0)))*invDelta1block0;

       d1_u1u2_dy = (-3*u1_B0(0,2,0)*u2_B0(0,2,0) + 4*u1_B0(0,1,0)*u2_B0(0,1,0) - (25.0/12.0)*u1_B0(0,0,0)*u2_B0(0,0,0)
            - (1.0/4.0)*u1_B0(0,4,0)*u2_B0(0,4,0) + ((4.0/3.0))*u1_B0(0,3,0)*u2_B0(0,3,0))*invDelta1block0;

   }

   else if (idx[1] == 1){

       d1_p_dy = (-(5.0/6.0)*p_B0(0,0,0) - (1.0/2.0)*p_B0(0,2,0) - (1.0/4.0)*p_B0(0,-1,0) + ((1.0/12.0))*p_B0(0,3,0) +
            ((3.0/2.0))*p_B0(0,1,0))*invDelta1block0;

       d1_pu0_dy = (-(5.0/6.0)*p_B0(0,0,0)*u0_B0(0,0,0) - (1.0/2.0)*p_B0(0,2,0)*u0_B0(0,2,0) -
            (1.0/4.0)*p_B0(0,-1,0)*u0_B0(0,-1,0) + ((1.0/12.0))*p_B0(0,3,0)*u0_B0(0,3,0) +
            ((3.0/2.0))*p_B0(0,1,0)*u0_B0(0,1,0))*invDelta1block0;

       d1_pu1_dy = (-(5.0/6.0)*p_B0(0,0,0)*u1_B0(0,0,0) - (1.0/2.0)*p_B0(0,2,0)*u1_B0(0,2,0) -
            (1.0/4.0)*p_B0(0,-1,0)*u1_B0(0,-1,0) + ((1.0/12.0))*p_B0(0,3,0)*u1_B0(0,3,0) +
            ((3.0/2.0))*p_B0(0,1,0)*u1_B0(0,1,0))*invDelta1block0;

       d1_rhoE_dy = (-(5.0/6.0)*rhoE_B0(0,0,0) - (1.0/2.0)*rhoE_B0(0,2,0) - (1.0/4.0)*rhoE_B0(0,-1,0) +
            ((1.0/12.0))*rhoE_B0(0,3,0) + ((3.0/2.0))*rhoE_B0(0,1,0))*invDelta1block0;

       d1_rhoEu0_dy = (-(5.0/6.0)*u0_B0(0,0,0)*rhoE_B0(0,0,0) - (1.0/2.0)*u0_B0(0,2,0)*rhoE_B0(0,2,0) -
            (1.0/4.0)*u0_B0(0,-1,0)*rhoE_B0(0,-1,0) + ((1.0/12.0))*u0_B0(0,3,0)*rhoE_B0(0,3,0) +
            ((3.0/2.0))*u0_B0(0,1,0)*rhoE_B0(0,1,0))*invDelta1block0;

       d1_inv_rhoErhou0_dy = (-(5.0/6.0)*u0_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
            (1.0/2.0)*u0_B0(0,2,0)*rhoE_B0(0,2,0)/rho_B0(0,2,0) - (1.0/4.0)*u0_B0(0,-1,0)*rhoE_B0(0,-1,0)/rho_B0(0,-1,0)
            + ((1.0/12.0))*u0_B0(0,3,0)*rhoE_B0(0,3,0)/rho_B0(0,3,0) +
            ((3.0/2.0))*u0_B0(0,1,0)*rhoE_B0(0,1,0)/rho_B0(0,1,0))*invDelta1block0;

       d1_rhoEu1_dy = (-(5.0/6.0)*u1_B0(0,0,0)*rhoE_B0(0,0,0) - (1.0/2.0)*u1_B0(0,2,0)*rhoE_B0(0,2,0) -
            (1.0/4.0)*u1_B0(0,-1,0)*rhoE_B0(0,-1,0) + ((1.0/12.0))*u1_B0(0,3,0)*rhoE_B0(0,3,0) +
            ((3.0/2.0))*u1_B0(0,1,0)*rhoE_B0(0,1,0))*invDelta1block0;

       d1_inv_rhoErhou1_dy = (-(5.0/6.0)*u1_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
            (1.0/2.0)*u1_B0(0,2,0)*rhoE_B0(0,2,0)/rho_B0(0,2,0) - (1.0/4.0)*u1_B0(0,-1,0)*rhoE_B0(0,-1,0)/rho_B0(0,-1,0)
            + ((1.0/12.0))*u1_B0(0,3,0)*rhoE_B0(0,3,0)/rho_B0(0,3,0) +
            ((3.0/2.0))*u1_B0(0,1,0)*rhoE_B0(0,1,0)/rho_B0(0,1,0))*invDelta1block0;

       d1_inv_rhoErho_dy = (-(5.0/6.0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) - (1.0/2.0)*rhoE_B0(0,2,0)/rho_B0(0,2,0) -
            (1.0/4.0)*rhoE_B0(0,-1,0)/rho_B0(0,-1,0) + ((1.0/12.0))*rhoE_B0(0,3,0)/rho_B0(0,3,0) +
            ((3.0/2.0))*rhoE_B0(0,1,0)/rho_B0(0,1,0))*invDelta1block0;

       d1_rho_dy = (-(5.0/6.0)*rho_B0(0,0,0) - (1.0/2.0)*rho_B0(0,2,0) - (1.0/4.0)*rho_B0(0,-1,0) +
            ((1.0/12.0))*rho_B0(0,3,0) + ((3.0/2.0))*rho_B0(0,1,0))*invDelta1block0;

       d1_rhou0_dy = (-(5.0/6.0)*rhou0_B0(0,0,0) - (1.0/2.0)*rhou0_B0(0,2,0) - (1.0/4.0)*rhou0_B0(0,-1,0) +
            ((1.0/12.0))*rhou0_B0(0,3,0) + ((3.0/2.0))*rhou0_B0(0,1,0))*invDelta1block0;

       d1_rhou0u0_dy = (-(5.0/6.0)*u0_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/2.0)*u0_B0(0,2,0)*rhou0_B0(0,2,0) -
            (1.0/4.0)*u0_B0(0,-1,0)*rhou0_B0(0,-1,0) + ((1.0/12.0))*u0_B0(0,3,0)*rhou0_B0(0,3,0) +
            ((3.0/2.0))*u0_B0(0,1,0)*rhou0_B0(0,1,0))*invDelta1block0;

       d1_rhou0u1_dy = (-(5.0/6.0)*u1_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/2.0)*u1_B0(0,2,0)*rhou0_B0(0,2,0) -
            (1.0/4.0)*u1_B0(0,-1,0)*rhou0_B0(0,-1,0) + ((1.0/12.0))*u1_B0(0,3,0)*rhou0_B0(0,3,0) +
            ((3.0/2.0))*u1_B0(0,1,0)*rhou0_B0(0,1,0))*invDelta1block0;

       d1_rhou0u2_dy = (-(5.0/6.0)*u2_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/2.0)*u2_B0(0,2,0)*rhou0_B0(0,2,0) -
            (1.0/4.0)*u2_B0(0,-1,0)*rhou0_B0(0,-1,0) + ((1.0/12.0))*u2_B0(0,3,0)*rhou0_B0(0,3,0) +
            ((3.0/2.0))*u2_B0(0,1,0)*rhou0_B0(0,1,0))*invDelta1block0;

       d1_rhou1_dy = (-(5.0/6.0)*rhou1_B0(0,0,0) - (1.0/2.0)*rhou1_B0(0,2,0) - (1.0/4.0)*rhou1_B0(0,-1,0) +
            ((1.0/12.0))*rhou1_B0(0,3,0) + ((3.0/2.0))*rhou1_B0(0,1,0))*invDelta1block0;

       d1_rhou1u0_dy = (-(5.0/6.0)*u0_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/2.0)*u0_B0(0,2,0)*rhou1_B0(0,2,0) -
            (1.0/4.0)*u0_B0(0,-1,0)*rhou1_B0(0,-1,0) + ((1.0/12.0))*u0_B0(0,3,0)*rhou1_B0(0,3,0) +
            ((3.0/2.0))*u0_B0(0,1,0)*rhou1_B0(0,1,0))*invDelta1block0;

       d1_rhou1u1_dy = (-(5.0/6.0)*u1_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/2.0)*u1_B0(0,2,0)*rhou1_B0(0,2,0) -
            (1.0/4.0)*u1_B0(0,-1,0)*rhou1_B0(0,-1,0) + ((1.0/12.0))*u1_B0(0,3,0)*rhou1_B0(0,3,0) +
            ((3.0/2.0))*u1_B0(0,1,0)*rhou1_B0(0,1,0))*invDelta1block0;

       d1_rhou1u2_dy = (-(5.0/6.0)*u2_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/2.0)*u2_B0(0,2,0)*rhou1_B0(0,2,0) -
            (1.0/4.0)*u2_B0(0,-1,0)*rhou1_B0(0,-1,0) + ((1.0/12.0))*u2_B0(0,3,0)*rhou1_B0(0,3,0) +
            ((3.0/2.0))*u2_B0(0,1,0)*rhou1_B0(0,1,0))*invDelta1block0;

       d1_rhou2_dy = (-(5.0/6.0)*rhou2_B0(0,0,0) - (1.0/2.0)*rhou2_B0(0,2,0) - (1.0/4.0)*rhou2_B0(0,-1,0) +
            ((1.0/12.0))*rhou2_B0(0,3,0) + ((3.0/2.0))*rhou2_B0(0,1,0))*invDelta1block0;

       d1_u0u0_dy = (-(5.0/6.0)*(u0_B0(0,0,0)*u0_B0(0,0,0)) - (1.0/2.0)*(u0_B0(0,2,0)*u0_B0(0,2,0)) -
            (1.0/4.0)*(u0_B0(0,-1,0)*u0_B0(0,-1,0)) + ((1.0/12.0))*(u0_B0(0,3,0)*u0_B0(0,3,0)) +
            ((3.0/2.0))*(u0_B0(0,1,0)*u0_B0(0,1,0)))*invDelta1block0;

       d1_u0u1_dy = (-(5.0/6.0)*u0_B0(0,0,0)*u1_B0(0,0,0) - (1.0/2.0)*u0_B0(0,2,0)*u1_B0(0,2,0) -
            (1.0/4.0)*u0_B0(0,-1,0)*u1_B0(0,-1,0) + ((1.0/12.0))*u0_B0(0,3,0)*u1_B0(0,3,0) +
            ((3.0/2.0))*u0_B0(0,1,0)*u1_B0(0,1,0))*invDelta1block0;

       d1_u0u2_dy = (-(5.0/6.0)*u0_B0(0,0,0)*u2_B0(0,0,0) - (1.0/2.0)*u0_B0(0,2,0)*u2_B0(0,2,0) -
            (1.0/4.0)*u0_B0(0,-1,0)*u2_B0(0,-1,0) + ((1.0/12.0))*u0_B0(0,3,0)*u2_B0(0,3,0) +
            ((3.0/2.0))*u0_B0(0,1,0)*u2_B0(0,1,0))*invDelta1block0;

       d1_u1u1_dy = (-(5.0/6.0)*(u1_B0(0,0,0)*u1_B0(0,0,0)) - (1.0/2.0)*(u1_B0(0,2,0)*u1_B0(0,2,0)) -
            (1.0/4.0)*(u1_B0(0,-1,0)*u1_B0(0,-1,0)) + ((1.0/12.0))*(u1_B0(0,3,0)*u1_B0(0,3,0)) +
            ((3.0/2.0))*(u1_B0(0,1,0)*u1_B0(0,1,0)))*invDelta1block0;

       d1_u1u2_dy = (-(5.0/6.0)*u1_B0(0,0,0)*u2_B0(0,0,0) - (1.0/2.0)*u1_B0(0,2,0)*u2_B0(0,2,0) -
            (1.0/4.0)*u1_B0(0,-1,0)*u2_B0(0,-1,0) + ((1.0/12.0))*u1_B0(0,3,0)*u2_B0(0,3,0) +
            ((3.0/2.0))*u1_B0(0,1,0)*u2_B0(0,1,0))*invDelta1block0;

   }

   else{

       d1_p_dy = (-(2.0/3.0)*p_B0(0,-1,0) - (1.0/12.0)*p_B0(0,2,0) + ((1.0/12.0))*p_B0(0,-2,0) +
            ((2.0/3.0))*p_B0(0,1,0))*invDelta1block0;

       d1_pu0_dy = (-(2.0/3.0)*p_B0(0,-1,0)*u0_B0(0,-1,0) - (1.0/12.0)*p_B0(0,2,0)*u0_B0(0,2,0) +
            ((1.0/12.0))*p_B0(0,-2,0)*u0_B0(0,-2,0) + ((2.0/3.0))*p_B0(0,1,0)*u0_B0(0,1,0))*invDelta1block0;

       d1_pu1_dy = (-(2.0/3.0)*p_B0(0,-1,0)*u1_B0(0,-1,0) - (1.0/12.0)*p_B0(0,2,0)*u1_B0(0,2,0) +
            ((1.0/12.0))*p_B0(0,-2,0)*u1_B0(0,-2,0) + ((2.0/3.0))*p_B0(0,1,0)*u1_B0(0,1,0))*invDelta1block0;

       d1_rhoE_dy = (-(2.0/3.0)*rhoE_B0(0,-1,0) - (1.0/12.0)*rhoE_B0(0,2,0) + ((1.0/12.0))*rhoE_B0(0,-2,0) +
            ((2.0/3.0))*rhoE_B0(0,1,0))*invDelta1block0;

       d1_rhoEu0_dy = (-(2.0/3.0)*u0_B0(0,-1,0)*rhoE_B0(0,-1,0) - (1.0/12.0)*u0_B0(0,2,0)*rhoE_B0(0,2,0) +
            ((1.0/12.0))*u0_B0(0,-2,0)*rhoE_B0(0,-2,0) + ((2.0/3.0))*u0_B0(0,1,0)*rhoE_B0(0,1,0))*invDelta1block0;

       d1_inv_rhoErhou0_dy = (-(2.0/3.0)*u0_B0(0,-1,0)*rhoE_B0(0,-1,0)/rho_B0(0,-1,0) -
            (1.0/12.0)*u0_B0(0,2,0)*rhoE_B0(0,2,0)/rho_B0(0,2,0) +
            ((1.0/12.0))*u0_B0(0,-2,0)*rhoE_B0(0,-2,0)/rho_B0(0,-2,0) +
            ((2.0/3.0))*u0_B0(0,1,0)*rhoE_B0(0,1,0)/rho_B0(0,1,0))*invDelta1block0;

       d1_rhoEu1_dy = (-(2.0/3.0)*u1_B0(0,-1,0)*rhoE_B0(0,-1,0) - (1.0/12.0)*u1_B0(0,2,0)*rhoE_B0(0,2,0) +
            ((1.0/12.0))*u1_B0(0,-2,0)*rhoE_B0(0,-2,0) + ((2.0/3.0))*u1_B0(0,1,0)*rhoE_B0(0,1,0))*invDelta1block0;

       d1_inv_rhoErhou1_dy = (-(2.0/3.0)*u1_B0(0,-1,0)*rhoE_B0(0,-1,0)/rho_B0(0,-1,0) -
            (1.0/12.0)*u1_B0(0,2,0)*rhoE_B0(0,2,0)/rho_B0(0,2,0) +
            ((1.0/12.0))*u1_B0(0,-2,0)*rhoE_B0(0,-2,0)/rho_B0(0,-2,0) +
            ((2.0/3.0))*u1_B0(0,1,0)*rhoE_B0(0,1,0)/rho_B0(0,1,0))*invDelta1block0;

       d1_inv_rhoErho_dy = (-(2.0/3.0)*rhoE_B0(0,-1,0)/rho_B0(0,-1,0) - (1.0/12.0)*rhoE_B0(0,2,0)/rho_B0(0,2,0) +
            ((1.0/12.0))*rhoE_B0(0,-2,0)/rho_B0(0,-2,0) + ((2.0/3.0))*rhoE_B0(0,1,0)/rho_B0(0,1,0))*invDelta1block0;

       d1_rho_dy = (-(2.0/3.0)*rho_B0(0,-1,0) - (1.0/12.0)*rho_B0(0,2,0) + ((1.0/12.0))*rho_B0(0,-2,0) +
            ((2.0/3.0))*rho_B0(0,1,0))*invDelta1block0;

       d1_rhou0_dy = (-(2.0/3.0)*rhou0_B0(0,-1,0) - (1.0/12.0)*rhou0_B0(0,2,0) + ((1.0/12.0))*rhou0_B0(0,-2,0) +
            ((2.0/3.0))*rhou0_B0(0,1,0))*invDelta1block0;

       d1_rhou0u0_dy = (-(2.0/3.0)*u0_B0(0,-1,0)*rhou0_B0(0,-1,0) - (1.0/12.0)*u0_B0(0,2,0)*rhou0_B0(0,2,0) +
            ((1.0/12.0))*u0_B0(0,-2,0)*rhou0_B0(0,-2,0) + ((2.0/3.0))*u0_B0(0,1,0)*rhou0_B0(0,1,0))*invDelta1block0;

       d1_rhou0u1_dy = (-(2.0/3.0)*u1_B0(0,-1,0)*rhou0_B0(0,-1,0) - (1.0/12.0)*u1_B0(0,2,0)*rhou0_B0(0,2,0) +
            ((1.0/12.0))*u1_B0(0,-2,0)*rhou0_B0(0,-2,0) + ((2.0/3.0))*u1_B0(0,1,0)*rhou0_B0(0,1,0))*invDelta1block0;

       d1_rhou0u2_dy = (-(2.0/3.0)*u2_B0(0,-1,0)*rhou0_B0(0,-1,0) - (1.0/12.0)*u2_B0(0,2,0)*rhou0_B0(0,2,0) +
            ((1.0/12.0))*u2_B0(0,-2,0)*rhou0_B0(0,-2,0) + ((2.0/3.0))*u2_B0(0,1,0)*rhou0_B0(0,1,0))*invDelta1block0;

       d1_rhou1_dy = (-(2.0/3.0)*rhou1_B0(0,-1,0) - (1.0/12.0)*rhou1_B0(0,2,0) + ((1.0/12.0))*rhou1_B0(0,-2,0) +
            ((2.0/3.0))*rhou1_B0(0,1,0))*invDelta1block0;

       d1_rhou1u0_dy = (-(2.0/3.0)*u0_B0(0,-1,0)*rhou1_B0(0,-1,0) - (1.0/12.0)*u0_B0(0,2,0)*rhou1_B0(0,2,0) +
            ((1.0/12.0))*u0_B0(0,-2,0)*rhou1_B0(0,-2,0) + ((2.0/3.0))*u0_B0(0,1,0)*rhou1_B0(0,1,0))*invDelta1block0;

       d1_rhou1u1_dy = (-(2.0/3.0)*u1_B0(0,-1,0)*rhou1_B0(0,-1,0) - (1.0/12.0)*u1_B0(0,2,0)*rhou1_B0(0,2,0) +
            ((1.0/12.0))*u1_B0(0,-2,0)*rhou1_B0(0,-2,0) + ((2.0/3.0))*u1_B0(0,1,0)*rhou1_B0(0,1,0))*invDelta1block0;

       d1_rhou1u2_dy = (-(2.0/3.0)*u2_B0(0,-1,0)*rhou1_B0(0,-1,0) - (1.0/12.0)*u2_B0(0,2,0)*rhou1_B0(0,2,0) +
            ((1.0/12.0))*u2_B0(0,-2,0)*rhou1_B0(0,-2,0) + ((2.0/3.0))*u2_B0(0,1,0)*rhou1_B0(0,1,0))*invDelta1block0;

       d1_rhou2_dy = (-(2.0/3.0)*rhou2_B0(0,-1,0) - (1.0/12.0)*rhou2_B0(0,2,0) + ((1.0/12.0))*rhou2_B0(0,-2,0) +
            ((2.0/3.0))*rhou2_B0(0,1,0))*invDelta1block0;

       d1_u0u0_dy = (-(2.0/3.0)*(u0_B0(0,-1,0)*u0_B0(0,-1,0)) - (1.0/12.0)*(u0_B0(0,2,0)*u0_B0(0,2,0)) +
            ((1.0/12.0))*(u0_B0(0,-2,0)*u0_B0(0,-2,0)) + ((2.0/3.0))*(u0_B0(0,1,0)*u0_B0(0,1,0)))*invDelta1block0;

       d1_u0u1_dy = (-(2.0/3.0)*u0_B0(0,-1,0)*u1_B0(0,-1,0) - (1.0/12.0)*u0_B0(0,2,0)*u1_B0(0,2,0) +
            ((1.0/12.0))*u0_B0(0,-2,0)*u1_B0(0,-2,0) + ((2.0/3.0))*u0_B0(0,1,0)*u1_B0(0,1,0))*invDelta1block0;

       d1_u0u2_dy = (-(2.0/3.0)*u0_B0(0,-1,0)*u2_B0(0,-1,0) - (1.0/12.0)*u0_B0(0,2,0)*u2_B0(0,2,0) +
            ((1.0/12.0))*u0_B0(0,-2,0)*u2_B0(0,-2,0) + ((2.0/3.0))*u0_B0(0,1,0)*u2_B0(0,1,0))*invDelta1block0;

       d1_u1u1_dy = (-(2.0/3.0)*(u1_B0(0,-1,0)*u1_B0(0,-1,0)) - (1.0/12.0)*(u1_B0(0,2,0)*u1_B0(0,2,0)) +
            ((1.0/12.0))*(u1_B0(0,-2,0)*u1_B0(0,-2,0)) + ((2.0/3.0))*(u1_B0(0,1,0)*u1_B0(0,1,0)))*invDelta1block0;

       d1_u1u2_dy = (-(2.0/3.0)*u1_B0(0,-1,0)*u2_B0(0,-1,0) - (1.0/12.0)*u1_B0(0,2,0)*u2_B0(0,2,0) +
            ((1.0/12.0))*u1_B0(0,-2,0)*u2_B0(0,-2,0) + ((2.0/3.0))*u1_B0(0,1,0)*u2_B0(0,1,0))*invDelta1block0;

   }

   d1_p_dz = -(1.0/12.0)*(-p_B0(0,0,-2) - 8*p_B0(0,0,1) + 8*p_B0(0,0,-1) + p_B0(0,0,2))*invDelta2block0;

    d1_pu2_dz = ((1.0/12.0))*(p_B0(0,0,-2)*u2_B0(0,0,-2) - p_B0(0,0,2)*u2_B0(0,0,2) - 8*p_B0(0,0,-1)*u2_B0(0,0,-1) +
      8*p_B0(0,0,1)*u2_B0(0,0,1))*invDelta2block0;

   d1_rhoE_dz = -(1.0/12.0)*(-rhoE_B0(0,0,-2) - 8*rhoE_B0(0,0,1) + 8*rhoE_B0(0,0,-1) + rhoE_B0(0,0,2))*invDelta2block0;

    d1_rhoEu2_dz = ((1.0/12.0))*(u2_B0(0,0,-2)*rhoE_B0(0,0,-2) - u2_B0(0,0,2)*rhoE_B0(0,0,2) -
      8*u2_B0(0,0,-1)*rhoE_B0(0,0,-1) + 8*u2_B0(0,0,1)*rhoE_B0(0,0,1))*invDelta2block0;

    d1_inv_rhoErhou2_dz = ((1.0/12.0))*(u2_B0(0,0,-2)*rho_B0(0,0,1)*rho_B0(0,0,-1)*rho_B0(0,0,2)*rhoE_B0(0,0,-2) -
      u2_B0(0,0,2)*rho_B0(0,0,1)*rho_B0(0,0,-1)*rho_B0(0,0,-2)*rhoE_B0(0,0,2) -
      8*u2_B0(0,0,-1)*rho_B0(0,0,1)*rho_B0(0,0,-2)*rho_B0(0,0,2)*rhoE_B0(0,0,-1) +
      8*u2_B0(0,0,1)*rho_B0(0,0,-1)*rho_B0(0,0,-2)*rho_B0(0,0,2)*rhoE_B0(0,0,1))*invDelta2block0/(rho_B0(0,0,1)*rho_B0(0,0,-1)*rho_B0(0,0,-2)*rho_B0(0,0,2));

    d1_inv_rhoErho_dz = ((1.0/12.0))*(rho_B0(0,0,1)*rho_B0(0,0,-1)*rho_B0(0,0,2)*rhoE_B0(0,0,-2) -
      rho_B0(0,0,1)*rho_B0(0,0,-1)*rho_B0(0,0,-2)*rhoE_B0(0,0,2) -
      8*rho_B0(0,0,1)*rho_B0(0,0,-2)*rho_B0(0,0,2)*rhoE_B0(0,0,-1) +
      8*rho_B0(0,0,-1)*rho_B0(0,0,-2)*rho_B0(0,0,2)*rhoE_B0(0,0,1))*invDelta2block0/(rho_B0(0,0,1)*rho_B0(0,0,-1)*rho_B0(0,0,-2)*rho_B0(0,0,2));

   d1_rho_dz = -(1.0/12.0)*(-rho_B0(0,0,-2) - 8*rho_B0(0,0,1) + 8*rho_B0(0,0,-1) + rho_B0(0,0,2))*invDelta2block0;

    d1_rhou0_dz = -(1.0/12.0)*(-rhou0_B0(0,0,-2) - 8*rhou0_B0(0,0,1) + 8*rhou0_B0(0,0,-1) +
      rhou0_B0(0,0,2))*invDelta2block0;

    d1_rhou1_dz = -(1.0/12.0)*(-rhou1_B0(0,0,-2) - 8*rhou1_B0(0,0,1) + 8*rhou1_B0(0,0,-1) +
      rhou1_B0(0,0,2))*invDelta2block0;

    d1_rhou2_dz = ((1.0/12.0))*(-rhou2_B0(0,0,2) - 8*rhou2_B0(0,0,-1) + 8*rhou2_B0(0,0,1) +
      rhou2_B0(0,0,-2))*invDelta2block0;

    d1_rhou2u0_dz = ((1.0/12.0))*(u0_B0(0,0,-2)*rhou2_B0(0,0,-2) - u0_B0(0,0,2)*rhou2_B0(0,0,2) -
      8*u0_B0(0,0,-1)*rhou2_B0(0,0,-1) + 8*u0_B0(0,0,1)*rhou2_B0(0,0,1))*invDelta2block0;

    d1_rhou2u1_dz = ((1.0/12.0))*(u1_B0(0,0,-2)*rhou2_B0(0,0,-2) - u1_B0(0,0,2)*rhou2_B0(0,0,2) -
      8*u1_B0(0,0,-1)*rhou2_B0(0,0,-1) + 8*u1_B0(0,0,1)*rhou2_B0(0,0,1))*invDelta2block0;

    d1_rhou2u2_dz = ((1.0/12.0))*(u2_B0(0,0,-2)*rhou2_B0(0,0,-2) - u2_B0(0,0,2)*rhou2_B0(0,0,2) -
      8*u2_B0(0,0,-1)*rhou2_B0(0,0,-1) + 8*u2_B0(0,0,1)*rhou2_B0(0,0,1))*invDelta2block0;

    d1_u0u2_dz = ((1.0/12.0))*(u0_B0(0,0,-2)*u2_B0(0,0,-2) - u0_B0(0,0,2)*u2_B0(0,0,2) - 8*u0_B0(0,0,-1)*u2_B0(0,0,-1) +
      8*u0_B0(0,0,1)*u2_B0(0,0,1))*invDelta2block0;

    d1_u1u2_dz = ((1.0/12.0))*(u1_B0(0,0,-2)*u2_B0(0,0,-2) - u1_B0(0,0,2)*u2_B0(0,0,2) - 8*u1_B0(0,0,-1)*u2_B0(0,0,-1) +
      8*u1_B0(0,0,1)*u2_B0(0,0,1))*invDelta2block0;

    d1_u2u2_dz = ((1.0/12.0))*((u2_B0(0,0,-2)*u2_B0(0,0,-2)) - (u2_B0(0,0,2)*u2_B0(0,0,2)) -
      8*(u2_B0(0,0,-1)*u2_B0(0,0,-1)) + 8*(u2_B0(0,0,1)*u2_B0(0,0,1)))*invDelta2block0;

    Residual0_B0(0,0,0) = -(1.0/2.0)*d1_rhou2_dz - (1.0/2.0)*(D00_B0(0,0,0)*d1_rho_dx +
      D10_B0(0,0,0)*d1_rho_dy)*u0_B0(0,0,0) - (1.0/2.0)*(D01_B0(0,0,0)*d1_rho_dx + D11_B0(0,0,0)*d1_rho_dy)*u1_B0(0,0,0)
      - (1.0/2.0)*(D00_B0(0,0,0)*wk0_B0(0,0,0) + D01_B0(0,0,0)*wk1_B0(0,0,0) + D10_B0(0,0,0)*wk4_B0(0,0,0) +
      D11_B0(0,0,0)*wk5_B0(0,0,0) + wk10_B0(0,0,0))*rho_B0(0,0,0) - (1.0/2.0)*u2_B0(0,0,0)*d1_rho_dz -
      (1.0/2.0)*D00_B0(0,0,0)*d1_rhou0_dx - (1.0/2.0)*D01_B0(0,0,0)*d1_rhou1_dx - (1.0/2.0)*D10_B0(0,0,0)*d1_rhou0_dy -
      (1.0/2.0)*D11_B0(0,0,0)*d1_rhou1_dy;

    Residual1_B0(0,0,0) = -(1.0/4.0)*d1_rhou2u0_dz - D00_B0(0,0,0)*d1_p_dx - D10_B0(0,0,0)*d1_p_dy -
      (1.0/2.0)*(D00_B0(0,0,0)*wk0_B0(0,0,0) + D10_B0(0,0,0)*wk4_B0(0,0,0))*rhou0_B0(0,0,0) -
      (1.0/2.0)*(D00_B0(0,0,0)*d1_rhou0_dx + D10_B0(0,0,0)*d1_rhou0_dy)*u0_B0(0,0,0) -
      (1.0/4.0)*(u0_B0(0,0,0)*u0_B0(0,0,0))*(D00_B0(0,0,0)*d1_rho_dx + D10_B0(0,0,0)*d1_rho_dy) -
      (1.0/4.0)*(D00_B0(0,0,0)*d1_u0u0_dx + D10_B0(0,0,0)*d1_u0u0_dy)*rho_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*wk0_B0(0,0,0) + D11_B0(0,0,0)*wk4_B0(0,0,0))*rhou1_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*wk1_B0(0,0,0) + D11_B0(0,0,0)*wk5_B0(0,0,0))*rhou0_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*d1_rhou0_dx + D11_B0(0,0,0)*d1_rhou0_dy)*u1_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*d1_rhou1_dx + D11_B0(0,0,0)*d1_rhou1_dy)*u0_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*d1_u0u1_dx + D11_B0(0,0,0)*d1_u0u1_dy)*rho_B0(0,0,0) - (1.0/4.0)*u0_B0(0,0,0)*d1_rhou2_dz
      - (1.0/4.0)*u2_B0(0,0,0)*d1_rhou0_dz - (1.0/4.0)*D00_B0(0,0,0)*d1_rhou0u0_dx -
      (1.0/4.0)*D01_B0(0,0,0)*d1_rhou1u0_dx - (1.0/4.0)*D10_B0(0,0,0)*d1_rhou0u0_dy -
      (1.0/4.0)*D11_B0(0,0,0)*d1_rhou1u0_dy - (1.0/4.0)*rho_B0(0,0,0)*d1_u0u2_dz -
      (1.0/4.0)*wk8_B0(0,0,0)*rhou2_B0(0,0,0) - (1.0/4.0)*wk10_B0(0,0,0)*rhou0_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*d1_rho_dx + D11_B0(0,0,0)*d1_rho_dy)*u0_B0(0,0,0)*u1_B0(0,0,0) -
      (1.0/4.0)*u0_B0(0,0,0)*u2_B0(0,0,0)*d1_rho_dz;

    Residual2_B0(0,0,0) = -(1.0/4.0)*d1_rhou2u1_dz - D01_B0(0,0,0)*d1_p_dx - D11_B0(0,0,0)*d1_p_dy -
      (1.0/4.0)*(u1_B0(0,0,0)*u1_B0(0,0,0))*(D01_B0(0,0,0)*d1_rho_dx + D11_B0(0,0,0)*d1_rho_dy) -
      (1.0/4.0)*(D00_B0(0,0,0)*wk1_B0(0,0,0) + D10_B0(0,0,0)*wk5_B0(0,0,0))*rhou0_B0(0,0,0) -
      (1.0/4.0)*(D00_B0(0,0,0)*d1_rhou1_dx + D10_B0(0,0,0)*d1_rhou1_dy)*u0_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*wk1_B0(0,0,0) + D11_B0(0,0,0)*wk5_B0(0,0,0))*rhou1_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*d1_rhou1_dx + D11_B0(0,0,0)*d1_rhou1_dy)*u1_B0(0,0,0) -
      (1.0/4.0)*(D00_B0(0,0,0)*wk0_B0(0,0,0) + D01_B0(0,0,0)*wk1_B0(0,0,0) + D10_B0(0,0,0)*wk4_B0(0,0,0) +
      D11_B0(0,0,0)*wk5_B0(0,0,0) + wk10_B0(0,0,0))*rhou1_B0(0,0,0) - (1.0/4.0)*(D00_B0(0,0,0)*d1_rhou0_dx +
      D01_B0(0,0,0)*d1_rhou1_dx + D10_B0(0,0,0)*d1_rhou0_dy + D11_B0(0,0,0)*d1_rhou1_dy + d1_rhou2_dz)*u1_B0(0,0,0) -
      (1.0/4.0)*(D00_B0(0,0,0)*d1_u0u1_dx + D01_B0(0,0,0)*d1_u1u1_dx + D10_B0(0,0,0)*d1_u0u1_dy +
      D11_B0(0,0,0)*d1_u1u1_dy + d1_u1u2_dz)*rho_B0(0,0,0) - (1.0/4.0)*u2_B0(0,0,0)*d1_rhou1_dz -
      (1.0/4.0)*D00_B0(0,0,0)*d1_rhou0u1_dx - (1.0/4.0)*D01_B0(0,0,0)*d1_rhou1u1_dx -
      (1.0/4.0)*D10_B0(0,0,0)*d1_rhou0u1_dy - (1.0/4.0)*D11_B0(0,0,0)*d1_rhou1u1_dy -
      (1.0/4.0)*wk9_B0(0,0,0)*rhou2_B0(0,0,0) - (1.0/4.0)*(D00_B0(0,0,0)*d1_rho_dx +
      D10_B0(0,0,0)*d1_rho_dy)*u0_B0(0,0,0)*u1_B0(0,0,0) - (1.0/4.0)*u1_B0(0,0,0)*u2_B0(0,0,0)*d1_rho_dz;

    Residual3_B0(0,0,0) = -d1_p_dz - (1.0/4.0)*d1_rhou2u2_dz - (1.0/4.0)*(u2_B0(0,0,0)*u2_B0(0,0,0))*d1_rho_dz -
      (1.0/4.0)*(D00_B0(0,0,0)*wk2_B0(0,0,0) + D10_B0(0,0,0)*wk6_B0(0,0,0))*rhou0_B0(0,0,0) -
      (1.0/4.0)*(D00_B0(0,0,0)*d1_rhou2_dx + D10_B0(0,0,0)*d1_rhou2_dy)*u0_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*wk2_B0(0,0,0) + D11_B0(0,0,0)*wk6_B0(0,0,0))*rhou1_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*d1_rhou2_dx + D11_B0(0,0,0)*d1_rhou2_dy)*u1_B0(0,0,0) -
      (1.0/4.0)*(D00_B0(0,0,0)*wk0_B0(0,0,0) + D01_B0(0,0,0)*wk1_B0(0,0,0) + D10_B0(0,0,0)*wk4_B0(0,0,0) +
      D11_B0(0,0,0)*wk5_B0(0,0,0) + wk10_B0(0,0,0))*rhou2_B0(0,0,0) - (1.0/4.0)*(D00_B0(0,0,0)*d1_rhou0_dx +
      D01_B0(0,0,0)*d1_rhou1_dx + D10_B0(0,0,0)*d1_rhou0_dy + D11_B0(0,0,0)*d1_rhou1_dy + d1_rhou2_dz)*u2_B0(0,0,0) -
      (1.0/4.0)*(D00_B0(0,0,0)*d1_u0u2_dx + D01_B0(0,0,0)*d1_u1u2_dx + D10_B0(0,0,0)*d1_u0u2_dy +
      D11_B0(0,0,0)*d1_u1u2_dy + d1_u2u2_dz)*rho_B0(0,0,0) - (1.0/4.0)*u2_B0(0,0,0)*d1_rhou2_dz -
      (1.0/4.0)*D00_B0(0,0,0)*d1_rhou0u2_dx - (1.0/4.0)*D01_B0(0,0,0)*d1_rhou1u2_dx -
      (1.0/4.0)*D10_B0(0,0,0)*d1_rhou0u2_dy - (1.0/4.0)*D11_B0(0,0,0)*d1_rhou1u2_dy -
      (1.0/4.0)*wk10_B0(0,0,0)*rhou2_B0(0,0,0) - (1.0/4.0)*(D00_B0(0,0,0)*d1_rho_dx +
      D10_B0(0,0,0)*d1_rho_dy)*u0_B0(0,0,0)*u2_B0(0,0,0) - (1.0/4.0)*(D01_B0(0,0,0)*d1_rho_dx +
      D11_B0(0,0,0)*d1_rho_dy)*u1_B0(0,0,0)*u2_B0(0,0,0);

    Residual4_B0(0,0,0) = -(1.0/2.0)*d1_pu2_dz - (1.0/4.0)*d1_rhoEu2_dz - (1.0/2.0)*(D00_B0(0,0,0)*d1_p_dx +
      D10_B0(0,0,0)*d1_p_dy)*u0_B0(0,0,0) - (1.0/2.0)*(D01_B0(0,0,0)*d1_p_dx + D11_B0(0,0,0)*d1_p_dy)*u1_B0(0,0,0) -
      (1.0/2.0)*(D00_B0(0,0,0)*wk0_B0(0,0,0) + D01_B0(0,0,0)*wk1_B0(0,0,0) + D10_B0(0,0,0)*wk4_B0(0,0,0) +
      D11_B0(0,0,0)*wk5_B0(0,0,0) + wk10_B0(0,0,0))*p_B0(0,0,0) - (1.0/2.0)*u2_B0(0,0,0)*d1_p_dz -
      (1.0/2.0)*D00_B0(0,0,0)*d1_pu0_dx - (1.0/2.0)*D01_B0(0,0,0)*d1_pu1_dx - (1.0/2.0)*D10_B0(0,0,0)*d1_pu0_dy -
      (1.0/2.0)*D11_B0(0,0,0)*d1_pu1_dy - (1.0/4.0)*(D00_B0(0,0,0)*d1_inv_rhoErho_dx +
      D10_B0(0,0,0)*d1_inv_rhoErho_dy)*rhou0_B0(0,0,0) - (1.0/4.0)*(D00_B0(0,0,0)*d1_rhoE_dx +
      D10_B0(0,0,0)*d1_rhoE_dy)*u0_B0(0,0,0) - (1.0/4.0)*(D01_B0(0,0,0)*d1_inv_rhoErho_dx +
      D11_B0(0,0,0)*d1_inv_rhoErho_dy)*rhou1_B0(0,0,0) - (1.0/4.0)*(D01_B0(0,0,0)*d1_rhoE_dx +
      D11_B0(0,0,0)*d1_rhoE_dy)*u1_B0(0,0,0) - (1.0/4.0)*(D00_B0(0,0,0)*wk0_B0(0,0,0) + D01_B0(0,0,0)*wk1_B0(0,0,0) +
      D10_B0(0,0,0)*wk4_B0(0,0,0) + D11_B0(0,0,0)*wk5_B0(0,0,0) + wk10_B0(0,0,0))*rhoE_B0(0,0,0) -
      (1.0/4.0)*(D00_B0(0,0,0)*d1_inv_rhoErhou0_dx + D01_B0(0,0,0)*d1_inv_rhoErhou1_dx +
      D10_B0(0,0,0)*d1_inv_rhoErhou0_dy + D11_B0(0,0,0)*d1_inv_rhoErhou1_dy + d1_inv_rhoErhou2_dz)*rho_B0(0,0,0) -
      (1.0/4.0)*u2_B0(0,0,0)*d1_rhoE_dz - (1.0/4.0)*D00_B0(0,0,0)*d1_rhoEu0_dx - (1.0/4.0)*D01_B0(0,0,0)*d1_rhoEu1_dx -
      (1.0/4.0)*D10_B0(0,0,0)*d1_rhoEu0_dy - (1.0/4.0)*D11_B0(0,0,0)*d1_rhoEu1_dy -
      (1.0/4.0)*rhou2_B0(0,0,0)*d1_inv_rhoErho_dz - (1.0/4.0)*(D00_B0(0,0,0)*d1_rhou0_dx + D01_B0(0,0,0)*d1_rhou1_dx +
      D10_B0(0,0,0)*d1_rhou0_dy + D11_B0(0,0,0)*d1_rhou1_dy + d1_rhou2_dz)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
      (1.0/4.0)*(D00_B0(0,0,0)*d1_rho_dx + D10_B0(0,0,0)*d1_rho_dy)*u0_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*d1_rho_dx + D11_B0(0,0,0)*d1_rho_dy)*u1_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
      (1.0/4.0)*u2_B0(0,0,0)*rhoE_B0(0,0,0)*d1_rho_dz/rho_B0(0,0,0);

}

 void opensbliblock00Kernel035(const ACC<double> &D00_B0, const ACC<double> &D01_B0, const ACC<double> &D10_B0, const
ACC<double> &D11_B0, const ACC<double> &SD000_B0, const ACC<double> &SD001_B0, const ACC<double> &SD010_B0, const
ACC<double> &SD011_B0, const ACC<double> &SD100_B0, const ACC<double> &SD101_B0, const ACC<double> &SD110_B0, const
ACC<double> &SD111_B0, const ACC<double> &T_B0, const ACC<double> &mu_B0, const ACC<double> &u0_B0, const ACC<double>
&u1_B0, const ACC<double> &u2_B0, const ACC<double> &wk0_B0, const ACC<double> &wk10_B0, const ACC<double> &wk11_B0,
const ACC<double> &wk1_B0, const ACC<double> &wk2_B0, const ACC<double> &wk3_B0, const ACC<double> &wk4_B0, const
ACC<double> &wk5_B0, const ACC<double> &wk6_B0, const ACC<double> &wk7_B0, const ACC<double> &wk8_B0, const ACC<double>
&wk9_B0, ACC<double> &Residual1_B0, ACC<double> &Residual2_B0, ACC<double> &Residual3_B0, ACC<double> &Residual4_B0,
const int *idx)
{
   double d1_mu_dx = 0.0;
   double d1_mu_dy = 0.0;
   double d1_mu_dz = 0.0;
   double d1_wk0_dy = 0.0;
   double d1_wk0_dz = 0.0;
   double d1_wk1_dy = 0.0;
   double d1_wk1_dz = 0.0;
   double d1_wk2_dy = 0.0;
   double d1_wk2_dz = 0.0;
   double d1_wk3_dy = 0.0;
   double d1_wk4_dz = 0.0;
   double d1_wk5_dz = 0.0;
   double d1_wk6_dz = 0.0;
   double d2_T_dx = 0.0;
   double d2_T_dy = 0.0;
   double d2_T_dz = 0.0;
   double d2_u0_dx = 0.0;
   double d2_u0_dy = 0.0;
   double d2_u0_dz = 0.0;
   double d2_u1_dx = 0.0;
   double d2_u1_dy = 0.0;
   double d2_u1_dz = 0.0;
   double d2_u2_dx = 0.0;
   double d2_u2_dy = 0.0;
   double d2_u2_dz = 0.0;
   if (idx[0] == 0){

       d1_mu_dx = (-3*mu_B0(2,0,0) + 4*mu_B0(1,0,0) - (25.0/12.0)*mu_B0(0,0,0) - (1.0/4.0)*mu_B0(4,0,0) +
            ((4.0/3.0))*mu_B0(3,0,0))*invDelta0block0;

   }

   else if (idx[0] == 1){

       d1_mu_dx = (-(5.0/6.0)*mu_B0(0,0,0) - (1.0/2.0)*mu_B0(2,0,0) - (1.0/4.0)*mu_B0(-1,0,0) +
            ((1.0/12.0))*mu_B0(3,0,0) + ((3.0/2.0))*mu_B0(1,0,0))*invDelta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       d1_mu_dx = (-4*mu_B0(-1,0,0) + 3*mu_B0(-2,0,0) - (4.0/3.0)*mu_B0(-3,0,0) + ((1.0/4.0))*mu_B0(-4,0,0) +
            ((25.0/12.0))*mu_B0(0,0,0))*invDelta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       d1_mu_dx = (((1.0/2.0))*mu_B0(-2,0,0) - (3.0/2.0)*mu_B0(-1,0,0) - (1.0/12.0)*mu_B0(-3,0,0) +
            ((1.0/4.0))*mu_B0(1,0,0) + ((5.0/6.0))*mu_B0(0,0,0))*invDelta0block0;

   }

   else{

       d1_mu_dx = (-(2.0/3.0)*mu_B0(-1,0,0) - (1.0/12.0)*mu_B0(2,0,0) + ((1.0/12.0))*mu_B0(-2,0,0) +
            ((2.0/3.0))*mu_B0(1,0,0))*invDelta0block0;

   }

   if (idx[0] == 0){

       d2_T_dx = (-(26.0/3.0)*T_B0(1,0,0) - (14.0/3.0)*T_B0(3,0,0) + ((11.0/12.0))*T_B0(4,0,0) +
            ((19.0/2.0))*T_B0(2,0,0) + ((35.0/12.0))*T_B0(0,0,0))*inv2Delta0block0;

       d2_u0_dx = (-(26.0/3.0)*u0_B0(1,0,0) - (14.0/3.0)*u0_B0(3,0,0) + ((11.0/12.0))*u0_B0(4,0,0) +
            ((19.0/2.0))*u0_B0(2,0,0) + ((35.0/12.0))*u0_B0(0,0,0))*inv2Delta0block0;

       d2_u1_dx = (-(26.0/3.0)*u1_B0(1,0,0) - (14.0/3.0)*u1_B0(3,0,0) + ((11.0/12.0))*u1_B0(4,0,0) +
            ((19.0/2.0))*u1_B0(2,0,0) + ((35.0/12.0))*u1_B0(0,0,0))*inv2Delta0block0;

       d2_u2_dx = (-(26.0/3.0)*u2_B0(1,0,0) - (14.0/3.0)*u2_B0(3,0,0) + ((11.0/12.0))*u2_B0(4,0,0) +
            ((19.0/2.0))*u2_B0(2,0,0) + ((35.0/12.0))*u2_B0(0,0,0))*inv2Delta0block0;

   }

   else if (idx[0] == 1){

       d2_T_dx = (((1.0/2.0))*T_B0(1,0,0) - (5.0/3.0)*T_B0(0,0,0) - (1.0/12.0)*T_B0(3,0,0) + ((1.0/3.0))*T_B0(2,0,0) +
            ((11.0/12.0))*T_B0(-1,0,0))*inv2Delta0block0;

       d2_u0_dx = (((1.0/2.0))*u0_B0(1,0,0) - (5.0/3.0)*u0_B0(0,0,0) - (1.0/12.0)*u0_B0(3,0,0) +
            ((1.0/3.0))*u0_B0(2,0,0) + ((11.0/12.0))*u0_B0(-1,0,0))*inv2Delta0block0;

       d2_u1_dx = (((1.0/2.0))*u1_B0(1,0,0) - (5.0/3.0)*u1_B0(0,0,0) - (1.0/12.0)*u1_B0(3,0,0) +
            ((1.0/3.0))*u1_B0(2,0,0) + ((11.0/12.0))*u1_B0(-1,0,0))*inv2Delta0block0;

       d2_u2_dx = (((1.0/2.0))*u2_B0(1,0,0) - (5.0/3.0)*u2_B0(0,0,0) - (1.0/12.0)*u2_B0(3,0,0) +
            ((1.0/3.0))*u2_B0(2,0,0) + ((11.0/12.0))*u2_B0(-1,0,0))*inv2Delta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       d2_T_dx = (-(26.0/3.0)*T_B0(-1,0,0) - (14.0/3.0)*T_B0(-3,0,0) + ((11.0/12.0))*T_B0(-4,0,0) +
            ((19.0/2.0))*T_B0(-2,0,0) + ((35.0/12.0))*T_B0(0,0,0))*inv2Delta0block0;

       d2_u0_dx = (-(26.0/3.0)*u0_B0(-1,0,0) - (14.0/3.0)*u0_B0(-3,0,0) + ((11.0/12.0))*u0_B0(-4,0,0) +
            ((19.0/2.0))*u0_B0(-2,0,0) + ((35.0/12.0))*u0_B0(0,0,0))*inv2Delta0block0;

       d2_u1_dx = (-(26.0/3.0)*u1_B0(-1,0,0) - (14.0/3.0)*u1_B0(-3,0,0) + ((11.0/12.0))*u1_B0(-4,0,0) +
            ((19.0/2.0))*u1_B0(-2,0,0) + ((35.0/12.0))*u1_B0(0,0,0))*inv2Delta0block0;

       d2_u2_dx = (-(26.0/3.0)*u2_B0(-1,0,0) - (14.0/3.0)*u2_B0(-3,0,0) + ((11.0/12.0))*u2_B0(-4,0,0) +
            ((19.0/2.0))*u2_B0(-2,0,0) + ((35.0/12.0))*u2_B0(0,0,0))*inv2Delta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       d2_T_dx = (((1.0/2.0))*T_B0(-1,0,0) - (5.0/3.0)*T_B0(0,0,0) - (1.0/12.0)*T_B0(-3,0,0) + ((1.0/3.0))*T_B0(-2,0,0)
            + ((11.0/12.0))*T_B0(1,0,0))*inv2Delta0block0;

       d2_u0_dx = (((1.0/2.0))*u0_B0(-1,0,0) - (5.0/3.0)*u0_B0(0,0,0) - (1.0/12.0)*u0_B0(-3,0,0) +
            ((1.0/3.0))*u0_B0(-2,0,0) + ((11.0/12.0))*u0_B0(1,0,0))*inv2Delta0block0;

       d2_u1_dx = (((1.0/2.0))*u1_B0(-1,0,0) - (5.0/3.0)*u1_B0(0,0,0) - (1.0/12.0)*u1_B0(-3,0,0) +
            ((1.0/3.0))*u1_B0(-2,0,0) + ((11.0/12.0))*u1_B0(1,0,0))*inv2Delta0block0;

       d2_u2_dx = (((1.0/2.0))*u2_B0(-1,0,0) - (5.0/3.0)*u2_B0(0,0,0) - (1.0/12.0)*u2_B0(-3,0,0) +
            ((1.0/3.0))*u2_B0(-2,0,0) + ((11.0/12.0))*u2_B0(1,0,0))*inv2Delta0block0;

   }

   else{

       d2_T_dx = (-(5.0/2.0)*T_B0(0,0,0) - (1.0/12.0)*T_B0(-2,0,0) - (1.0/12.0)*T_B0(2,0,0) + ((4.0/3.0))*T_B0(1,0,0) +
            ((4.0/3.0))*T_B0(-1,0,0))*inv2Delta0block0;

       d2_u0_dx = (-(5.0/2.0)*u0_B0(0,0,0) - (1.0/12.0)*u0_B0(-2,0,0) - (1.0/12.0)*u0_B0(2,0,0) +
            ((4.0/3.0))*u0_B0(1,0,0) + ((4.0/3.0))*u0_B0(-1,0,0))*inv2Delta0block0;

       d2_u1_dx = (-(5.0/2.0)*u1_B0(0,0,0) - (1.0/12.0)*u1_B0(-2,0,0) - (1.0/12.0)*u1_B0(2,0,0) +
            ((4.0/3.0))*u1_B0(1,0,0) + ((4.0/3.0))*u1_B0(-1,0,0))*inv2Delta0block0;

       d2_u2_dx = (-(5.0/2.0)*u2_B0(0,0,0) - (1.0/12.0)*u2_B0(-2,0,0) - (1.0/12.0)*u2_B0(2,0,0) +
            ((4.0/3.0))*u2_B0(1,0,0) + ((4.0/3.0))*u2_B0(-1,0,0))*inv2Delta0block0;

   }

   if (idx[1] == 0){

       d1_mu_dy = (-3*mu_B0(0,2,0) + 4*mu_B0(0,1,0) - (25.0/12.0)*mu_B0(0,0,0) - (1.0/4.0)*mu_B0(0,4,0) +
            ((4.0/3.0))*mu_B0(0,3,0))*invDelta1block0;

       d1_wk0_dy = (-3*wk0_B0(0,2,0) + 4*wk0_B0(0,1,0) - (25.0/12.0)*wk0_B0(0,0,0) - (1.0/4.0)*wk0_B0(0,4,0) +
            ((4.0/3.0))*wk0_B0(0,3,0))*invDelta1block0;

       d1_wk1_dy = (-3*wk1_B0(0,2,0) + 4*wk1_B0(0,1,0) - (25.0/12.0)*wk1_B0(0,0,0) - (1.0/4.0)*wk1_B0(0,4,0) +
            ((4.0/3.0))*wk1_B0(0,3,0))*invDelta1block0;

       d1_wk2_dy = (-3*wk2_B0(0,2,0) + 4*wk2_B0(0,1,0) - (25.0/12.0)*wk2_B0(0,0,0) - (1.0/4.0)*wk2_B0(0,4,0) +
            ((4.0/3.0))*wk2_B0(0,3,0))*invDelta1block0;

       d1_wk3_dy = (-3*wk3_B0(0,2,0) + 4*wk3_B0(0,1,0) - (25.0/12.0)*wk3_B0(0,0,0) - (1.0/4.0)*wk3_B0(0,4,0) +
            ((4.0/3.0))*wk3_B0(0,3,0))*invDelta1block0;

   }

   else if (idx[1] == 1){

       d1_mu_dy = (-(5.0/6.0)*mu_B0(0,0,0) - (1.0/2.0)*mu_B0(0,2,0) - (1.0/4.0)*mu_B0(0,-1,0) +
            ((1.0/12.0))*mu_B0(0,3,0) + ((3.0/2.0))*mu_B0(0,1,0))*invDelta1block0;

       d1_wk0_dy = (-(5.0/6.0)*wk0_B0(0,0,0) - (1.0/2.0)*wk0_B0(0,2,0) - (1.0/4.0)*wk0_B0(0,-1,0) +
            ((1.0/12.0))*wk0_B0(0,3,0) + ((3.0/2.0))*wk0_B0(0,1,0))*invDelta1block0;

       d1_wk1_dy = (-(5.0/6.0)*wk1_B0(0,0,0) - (1.0/2.0)*wk1_B0(0,2,0) - (1.0/4.0)*wk1_B0(0,-1,0) +
            ((1.0/12.0))*wk1_B0(0,3,0) + ((3.0/2.0))*wk1_B0(0,1,0))*invDelta1block0;

       d1_wk2_dy = (-(5.0/6.0)*wk2_B0(0,0,0) - (1.0/2.0)*wk2_B0(0,2,0) - (1.0/4.0)*wk2_B0(0,-1,0) +
            ((1.0/12.0))*wk2_B0(0,3,0) + ((3.0/2.0))*wk2_B0(0,1,0))*invDelta1block0;

       d1_wk3_dy = (-(5.0/6.0)*wk3_B0(0,0,0) - (1.0/2.0)*wk3_B0(0,2,0) - (1.0/4.0)*wk3_B0(0,-1,0) +
            ((1.0/12.0))*wk3_B0(0,3,0) + ((3.0/2.0))*wk3_B0(0,1,0))*invDelta1block0;

   }

   else{

       d1_mu_dy = (-(2.0/3.0)*mu_B0(0,-1,0) - (1.0/12.0)*mu_B0(0,2,0) + ((1.0/12.0))*mu_B0(0,-2,0) +
            ((2.0/3.0))*mu_B0(0,1,0))*invDelta1block0;

       d1_wk0_dy = (-(2.0/3.0)*wk0_B0(0,-1,0) - (1.0/12.0)*wk0_B0(0,2,0) + ((1.0/12.0))*wk0_B0(0,-2,0) +
            ((2.0/3.0))*wk0_B0(0,1,0))*invDelta1block0;

       d1_wk1_dy = (-(2.0/3.0)*wk1_B0(0,-1,0) - (1.0/12.0)*wk1_B0(0,2,0) + ((1.0/12.0))*wk1_B0(0,-2,0) +
            ((2.0/3.0))*wk1_B0(0,1,0))*invDelta1block0;

       d1_wk2_dy = (-(2.0/3.0)*wk2_B0(0,-1,0) - (1.0/12.0)*wk2_B0(0,2,0) + ((1.0/12.0))*wk2_B0(0,-2,0) +
            ((2.0/3.0))*wk2_B0(0,1,0))*invDelta1block0;

       d1_wk3_dy = (-(2.0/3.0)*wk3_B0(0,-1,0) - (1.0/12.0)*wk3_B0(0,2,0) + ((1.0/12.0))*wk3_B0(0,-2,0) +
            ((2.0/3.0))*wk3_B0(0,1,0))*invDelta1block0;

   }

   if (idx[1] == 0){

       d2_T_dy = (-(26.0/3.0)*T_B0(0,1,0) - (14.0/3.0)*T_B0(0,3,0) + ((11.0/12.0))*T_B0(0,4,0) +
            ((19.0/2.0))*T_B0(0,2,0) + ((35.0/12.0))*T_B0(0,0,0))*inv2Delta1block0;

       d2_u0_dy = (-(26.0/3.0)*u0_B0(0,1,0) - (14.0/3.0)*u0_B0(0,3,0) + ((11.0/12.0))*u0_B0(0,4,0) +
            ((19.0/2.0))*u0_B0(0,2,0) + ((35.0/12.0))*u0_B0(0,0,0))*inv2Delta1block0;

       d2_u1_dy = (-(26.0/3.0)*u1_B0(0,1,0) - (14.0/3.0)*u1_B0(0,3,0) + ((11.0/12.0))*u1_B0(0,4,0) +
            ((19.0/2.0))*u1_B0(0,2,0) + ((35.0/12.0))*u1_B0(0,0,0))*inv2Delta1block0;

       d2_u2_dy = (-(26.0/3.0)*u2_B0(0,1,0) - (14.0/3.0)*u2_B0(0,3,0) + ((11.0/12.0))*u2_B0(0,4,0) +
            ((19.0/2.0))*u2_B0(0,2,0) + ((35.0/12.0))*u2_B0(0,0,0))*inv2Delta1block0;

   }

   else if (idx[1] == 1){

       d2_T_dy = (((1.0/2.0))*T_B0(0,1,0) - (5.0/3.0)*T_B0(0,0,0) - (1.0/12.0)*T_B0(0,3,0) + ((1.0/3.0))*T_B0(0,2,0) +
            ((11.0/12.0))*T_B0(0,-1,0))*inv2Delta1block0;

       d2_u0_dy = (((1.0/2.0))*u0_B0(0,1,0) - (5.0/3.0)*u0_B0(0,0,0) - (1.0/12.0)*u0_B0(0,3,0) +
            ((1.0/3.0))*u0_B0(0,2,0) + ((11.0/12.0))*u0_B0(0,-1,0))*inv2Delta1block0;

       d2_u1_dy = (((1.0/2.0))*u1_B0(0,1,0) - (5.0/3.0)*u1_B0(0,0,0) - (1.0/12.0)*u1_B0(0,3,0) +
            ((1.0/3.0))*u1_B0(0,2,0) + ((11.0/12.0))*u1_B0(0,-1,0))*inv2Delta1block0;

       d2_u2_dy = (((1.0/2.0))*u2_B0(0,1,0) - (5.0/3.0)*u2_B0(0,0,0) - (1.0/12.0)*u2_B0(0,3,0) +
            ((1.0/3.0))*u2_B0(0,2,0) + ((11.0/12.0))*u2_B0(0,-1,0))*inv2Delta1block0;

   }

   else{

       d2_T_dy = (-(5.0/2.0)*T_B0(0,0,0) - (1.0/12.0)*T_B0(0,-2,0) - (1.0/12.0)*T_B0(0,2,0) + ((4.0/3.0))*T_B0(0,1,0) +
            ((4.0/3.0))*T_B0(0,-1,0))*inv2Delta1block0;

       d2_u0_dy = (-(5.0/2.0)*u0_B0(0,0,0) - (1.0/12.0)*u0_B0(0,-2,0) - (1.0/12.0)*u0_B0(0,2,0) +
            ((4.0/3.0))*u0_B0(0,1,0) + ((4.0/3.0))*u0_B0(0,-1,0))*inv2Delta1block0;

       d2_u1_dy = (-(5.0/2.0)*u1_B0(0,0,0) - (1.0/12.0)*u1_B0(0,-2,0) - (1.0/12.0)*u1_B0(0,2,0) +
            ((4.0/3.0))*u1_B0(0,1,0) + ((4.0/3.0))*u1_B0(0,-1,0))*inv2Delta1block0;

       d2_u2_dy = (-(5.0/2.0)*u2_B0(0,0,0) - (1.0/12.0)*u2_B0(0,-2,0) - (1.0/12.0)*u2_B0(0,2,0) +
            ((4.0/3.0))*u2_B0(0,1,0) + ((4.0/3.0))*u2_B0(0,-1,0))*inv2Delta1block0;

   }

    d2_T_dz = -(1.0/12.0)*(-16*T_B0(0,0,1) - 16*T_B0(0,0,-1) + 30*T_B0(0,0,0) + T_B0(0,0,-2) +
      T_B0(0,0,2))*inv2Delta2block0;

   d1_mu_dz = ((1.0/12.0))*(-mu_B0(0,0,2) - 8*mu_B0(0,0,-1) + 8*mu_B0(0,0,1) + mu_B0(0,0,-2))*invDelta2block0;

    d2_u0_dz = ((1.0/12.0))*(-u0_B0(0,0,-2) - u0_B0(0,0,2) - 30*u0_B0(0,0,0) + 16*u0_B0(0,0,1) +
      16*u0_B0(0,0,-1))*inv2Delta2block0;

    d2_u1_dz = -(1.0/12.0)*(-16*u1_B0(0,0,1) - 16*u1_B0(0,0,-1) + 30*u1_B0(0,0,0) + u1_B0(0,0,-2) +
      u1_B0(0,0,2))*inv2Delta2block0;

    d2_u2_dz = -(1.0/12.0)*(-16*u2_B0(0,0,1) - 16*u2_B0(0,0,-1) + 30*u2_B0(0,0,0) + u2_B0(0,0,-2) +
      u2_B0(0,0,2))*inv2Delta2block0;

   d1_wk0_dz = ((1.0/12.0))*(-wk0_B0(0,0,2) - 8*wk0_B0(0,0,-1) + 8*wk0_B0(0,0,1) + wk0_B0(0,0,-2))*invDelta2block0;

   d1_wk1_dz = ((1.0/12.0))*(-wk1_B0(0,0,2) - 8*wk1_B0(0,0,-1) + 8*wk1_B0(0,0,1) + wk1_B0(0,0,-2))*invDelta2block0;

   d1_wk2_dz = ((1.0/12.0))*(-wk2_B0(0,0,2) - 8*wk2_B0(0,0,-1) + 8*wk2_B0(0,0,1) + wk2_B0(0,0,-2))*invDelta2block0;

   d1_wk4_dz = ((1.0/12.0))*(-wk4_B0(0,0,2) - 8*wk4_B0(0,0,-1) + 8*wk4_B0(0,0,1) + wk4_B0(0,0,-2))*invDelta2block0;

   d1_wk5_dz = -(1.0/12.0)*(-wk5_B0(0,0,-2) - 8*wk5_B0(0,0,1) + 8*wk5_B0(0,0,-1) + wk5_B0(0,0,2))*invDelta2block0;

   d1_wk6_dz = -(1.0/12.0)*(-wk6_B0(0,0,-2) - 8*wk6_B0(0,0,1) + 8*wk6_B0(0,0,-1) + wk6_B0(0,0,2))*invDelta2block0;

    Residual1_B0(0,0,0) = (D01_B0(0,0,0)*d1_mu_dx + D11_B0(0,0,0)*d1_mu_dy)*(D00_B0(0,0,0)*wk1_B0(0,0,0) +
      D01_B0(0,0,0)*wk0_B0(0,0,0) + D10_B0(0,0,0)*wk5_B0(0,0,0) + D11_B0(0,0,0)*wk4_B0(0,0,0))*invRe +
      (D00_B0(0,0,0)*wk2_B0(0,0,0) + D10_B0(0,0,0)*wk6_B0(0,0,0) + wk8_B0(0,0,0))*invRe*d1_mu_dz +
      ((1.0/3.0))*(3*d2_u0_dz + D00_B0(0,0,0)*d1_wk2_dz + D10_B0(0,0,0)*d1_wk6_dz +
      3*(D01_B0(0,0,0)*D01_B0(0,0,0))*d2_u0_dx + 3*(D11_B0(0,0,0)*D11_B0(0,0,0))*d2_u0_dy +
      4*(D00_B0(0,0,0)*D00_B0(0,0,0))*d2_u0_dx + 4*(D10_B0(0,0,0)*D10_B0(0,0,0))*d2_u0_dy +
      D00_B0(0,0,0)*D01_B0(0,0,0)*d2_u1_dx + D00_B0(0,0,0)*D11_B0(0,0,0)*d1_wk1_dy +
      D01_B0(0,0,0)*D10_B0(0,0,0)*d1_wk1_dy + D10_B0(0,0,0)*D11_B0(0,0,0)*d2_u1_dy -
      2*D00_B0(0,0,0)*wk1_B0(0,0,0)*SD010_B0(0,0,0) - 2*D00_B0(0,0,0)*wk5_B0(0,0,0)*SD110_B0(0,0,0) -
      2*D10_B0(0,0,0)*wk1_B0(0,0,0)*SD011_B0(0,0,0) - 2*D10_B0(0,0,0)*wk5_B0(0,0,0)*SD111_B0(0,0,0) +
      3*D01_B0(0,0,0)*wk0_B0(0,0,0)*SD010_B0(0,0,0) + 3*D01_B0(0,0,0)*wk1_B0(0,0,0)*SD000_B0(0,0,0) +
      3*D01_B0(0,0,0)*wk4_B0(0,0,0)*SD110_B0(0,0,0) + 3*D01_B0(0,0,0)*wk5_B0(0,0,0)*SD100_B0(0,0,0) +
      3*D11_B0(0,0,0)*wk0_B0(0,0,0)*SD011_B0(0,0,0) + 3*D11_B0(0,0,0)*wk1_B0(0,0,0)*SD001_B0(0,0,0) +
      3*D11_B0(0,0,0)*wk4_B0(0,0,0)*SD111_B0(0,0,0) + 3*D11_B0(0,0,0)*wk5_B0(0,0,0)*SD101_B0(0,0,0) +
      4*D00_B0(0,0,0)*wk0_B0(0,0,0)*SD000_B0(0,0,0) + 4*D00_B0(0,0,0)*wk4_B0(0,0,0)*SD100_B0(0,0,0) +
      4*D10_B0(0,0,0)*wk0_B0(0,0,0)*SD001_B0(0,0,0) + 4*D10_B0(0,0,0)*wk4_B0(0,0,0)*SD101_B0(0,0,0) +
      6*D01_B0(0,0,0)*D11_B0(0,0,0)*d1_wk0_dy + 8*D00_B0(0,0,0)*D10_B0(0,0,0)*d1_wk0_dy)*invRe*mu_B0(0,0,0) +
      ((2.0/3.0))*(D00_B0(0,0,0)*d1_mu_dx + D10_B0(0,0,0)*d1_mu_dy)*(-wk10_B0(0,0,0) - D01_B0(0,0,0)*wk1_B0(0,0,0) -
      D11_B0(0,0,0)*wk5_B0(0,0,0) + 2*D00_B0(0,0,0)*wk0_B0(0,0,0) + 2*D10_B0(0,0,0)*wk4_B0(0,0,0))*invRe +
      Residual1_B0(0,0,0);

    Residual2_B0(0,0,0) = (D00_B0(0,0,0)*d1_mu_dx + D10_B0(0,0,0)*d1_mu_dy)*(D00_B0(0,0,0)*wk1_B0(0,0,0) +
      D01_B0(0,0,0)*wk0_B0(0,0,0) + D10_B0(0,0,0)*wk5_B0(0,0,0) + D11_B0(0,0,0)*wk4_B0(0,0,0))*invRe +
      (D01_B0(0,0,0)*wk2_B0(0,0,0) + D11_B0(0,0,0)*wk6_B0(0,0,0) + wk9_B0(0,0,0))*invRe*d1_mu_dz -
      (2.0/3.0)*(D01_B0(0,0,0)*d1_mu_dx + D11_B0(0,0,0)*d1_mu_dy)*(D00_B0(0,0,0)*wk0_B0(0,0,0) +
      D10_B0(0,0,0)*wk4_B0(0,0,0) - 2*D01_B0(0,0,0)*wk1_B0(0,0,0) - 2*D11_B0(0,0,0)*wk5_B0(0,0,0) +
      wk10_B0(0,0,0))*invRe + ((1.0/3.0))*(3*d2_u1_dz + D01_B0(0,0,0)*d1_wk2_dz + D11_B0(0,0,0)*d1_wk6_dz +
      3*(D00_B0(0,0,0)*D00_B0(0,0,0))*d2_u1_dx + 3*(D10_B0(0,0,0)*D10_B0(0,0,0))*d2_u1_dy +
      4*(D01_B0(0,0,0)*D01_B0(0,0,0))*d2_u1_dx + 4*(D11_B0(0,0,0)*D11_B0(0,0,0))*d2_u1_dy +
      D00_B0(0,0,0)*D01_B0(0,0,0)*d2_u0_dx + D00_B0(0,0,0)*D11_B0(0,0,0)*d1_wk0_dy +
      D01_B0(0,0,0)*D10_B0(0,0,0)*d1_wk0_dy + D10_B0(0,0,0)*D11_B0(0,0,0)*d2_u0_dy -
      2*D01_B0(0,0,0)*wk0_B0(0,0,0)*SD000_B0(0,0,0) - 2*D01_B0(0,0,0)*wk4_B0(0,0,0)*SD100_B0(0,0,0) -
      2*D11_B0(0,0,0)*wk0_B0(0,0,0)*SD001_B0(0,0,0) - 2*D11_B0(0,0,0)*wk4_B0(0,0,0)*SD101_B0(0,0,0) +
      3*D00_B0(0,0,0)*wk0_B0(0,0,0)*SD010_B0(0,0,0) + 3*D00_B0(0,0,0)*wk1_B0(0,0,0)*SD000_B0(0,0,0) +
      3*D00_B0(0,0,0)*wk4_B0(0,0,0)*SD110_B0(0,0,0) + 3*D00_B0(0,0,0)*wk5_B0(0,0,0)*SD100_B0(0,0,0) +
      3*D10_B0(0,0,0)*wk0_B0(0,0,0)*SD011_B0(0,0,0) + 3*D10_B0(0,0,0)*wk1_B0(0,0,0)*SD001_B0(0,0,0) +
      3*D10_B0(0,0,0)*wk4_B0(0,0,0)*SD111_B0(0,0,0) + 3*D10_B0(0,0,0)*wk5_B0(0,0,0)*SD101_B0(0,0,0) +
      4*D01_B0(0,0,0)*wk1_B0(0,0,0)*SD010_B0(0,0,0) + 4*D01_B0(0,0,0)*wk5_B0(0,0,0)*SD110_B0(0,0,0) +
      4*D11_B0(0,0,0)*wk1_B0(0,0,0)*SD011_B0(0,0,0) + 4*D11_B0(0,0,0)*wk5_B0(0,0,0)*SD111_B0(0,0,0) +
      6*D00_B0(0,0,0)*D10_B0(0,0,0)*d1_wk1_dy + 8*D01_B0(0,0,0)*D11_B0(0,0,0)*d1_wk1_dy)*invRe*mu_B0(0,0,0) +
      Residual2_B0(0,0,0);

    Residual3_B0(0,0,0) = (D00_B0(0,0,0)*d1_mu_dx + D10_B0(0,0,0)*d1_mu_dy)*(D00_B0(0,0,0)*wk2_B0(0,0,0) +
      D10_B0(0,0,0)*wk6_B0(0,0,0) + wk8_B0(0,0,0))*invRe + (D01_B0(0,0,0)*d1_mu_dx +
      D11_B0(0,0,0)*d1_mu_dy)*(D01_B0(0,0,0)*wk2_B0(0,0,0) + D11_B0(0,0,0)*wk6_B0(0,0,0) + wk9_B0(0,0,0))*invRe -
      (2.0/3.0)*(-2*wk10_B0(0,0,0) + D00_B0(0,0,0)*wk0_B0(0,0,0) + D01_B0(0,0,0)*wk1_B0(0,0,0) +
      D10_B0(0,0,0)*wk4_B0(0,0,0) + D11_B0(0,0,0)*wk5_B0(0,0,0))*invRe*d1_mu_dz + ((1.0/3.0))*(4*d2_u2_dz +
      D00_B0(0,0,0)*d1_wk0_dz + D01_B0(0,0,0)*d1_wk1_dz + D10_B0(0,0,0)*d1_wk4_dz + D11_B0(0,0,0)*d1_wk5_dz +
      3*(D00_B0(0,0,0)*D00_B0(0,0,0))*d2_u2_dx + 3*(D01_B0(0,0,0)*D01_B0(0,0,0))*d2_u2_dx +
      3*(D10_B0(0,0,0)*D10_B0(0,0,0))*d2_u2_dy + 3*(D11_B0(0,0,0)*D11_B0(0,0,0))*d2_u2_dy +
      3*D00_B0(0,0,0)*wk2_B0(0,0,0)*SD000_B0(0,0,0) + 3*D00_B0(0,0,0)*wk6_B0(0,0,0)*SD100_B0(0,0,0) +
      3*D01_B0(0,0,0)*wk2_B0(0,0,0)*SD010_B0(0,0,0) + 3*D01_B0(0,0,0)*wk6_B0(0,0,0)*SD110_B0(0,0,0) +
      3*D10_B0(0,0,0)*wk2_B0(0,0,0)*SD001_B0(0,0,0) + 3*D10_B0(0,0,0)*wk6_B0(0,0,0)*SD101_B0(0,0,0) +
      3*D11_B0(0,0,0)*wk2_B0(0,0,0)*SD011_B0(0,0,0) + 3*D11_B0(0,0,0)*wk6_B0(0,0,0)*SD111_B0(0,0,0) +
      6*D00_B0(0,0,0)*D10_B0(0,0,0)*d1_wk2_dy + 6*D01_B0(0,0,0)*D11_B0(0,0,0)*d1_wk2_dy)*invRe*mu_B0(0,0,0) +
      Residual3_B0(0,0,0);

    Residual4_B0(0,0,0) = (D00_B0(0,0,0)*wk1_B0(0,0,0) + D10_B0(0,0,0)*wk5_B0(0,0,0))*(D00_B0(0,0,0)*wk1_B0(0,0,0) +
      D01_B0(0,0,0)*wk0_B0(0,0,0) + D10_B0(0,0,0)*wk5_B0(0,0,0) + D11_B0(0,0,0)*wk4_B0(0,0,0))*invRe*mu_B0(0,0,0) +
      (D00_B0(0,0,0)*wk2_B0(0,0,0) + D10_B0(0,0,0)*wk6_B0(0,0,0))*(D00_B0(0,0,0)*wk2_B0(0,0,0) +
      D10_B0(0,0,0)*wk6_B0(0,0,0) + wk8_B0(0,0,0))*invRe*mu_B0(0,0,0) + (D00_B0(0,0,0)*d1_mu_dx +
      D10_B0(0,0,0)*d1_mu_dy)*(D00_B0(0,0,0)*wk2_B0(0,0,0) + D10_B0(0,0,0)*wk6_B0(0,0,0) +
      wk8_B0(0,0,0))*invRe*u2_B0(0,0,0) + (D00_B0(0,0,0)*d1_mu_dx + D10_B0(0,0,0)*d1_mu_dy)*(D00_B0(0,0,0)*wk1_B0(0,0,0)
      + D01_B0(0,0,0)*wk0_B0(0,0,0) + D10_B0(0,0,0)*wk5_B0(0,0,0) + D11_B0(0,0,0)*wk4_B0(0,0,0))*invRe*u1_B0(0,0,0) +
      (D01_B0(0,0,0)*wk0_B0(0,0,0) + D11_B0(0,0,0)*wk4_B0(0,0,0))*(D00_B0(0,0,0)*wk1_B0(0,0,0) +
      D01_B0(0,0,0)*wk0_B0(0,0,0) + D10_B0(0,0,0)*wk5_B0(0,0,0) + D11_B0(0,0,0)*wk4_B0(0,0,0))*invRe*mu_B0(0,0,0) +
      (D01_B0(0,0,0)*wk2_B0(0,0,0) + D11_B0(0,0,0)*wk6_B0(0,0,0))*(D01_B0(0,0,0)*wk2_B0(0,0,0) +
      D11_B0(0,0,0)*wk6_B0(0,0,0) + wk9_B0(0,0,0))*invRe*mu_B0(0,0,0) + (D01_B0(0,0,0)*d1_mu_dx +
      D11_B0(0,0,0)*d1_mu_dy)*(D01_B0(0,0,0)*wk2_B0(0,0,0) + D11_B0(0,0,0)*wk6_B0(0,0,0) +
      wk9_B0(0,0,0))*invRe*u2_B0(0,0,0) + (D01_B0(0,0,0)*d1_mu_dx + D11_B0(0,0,0)*d1_mu_dy)*(D00_B0(0,0,0)*wk1_B0(0,0,0)
      + D01_B0(0,0,0)*wk0_B0(0,0,0) + D10_B0(0,0,0)*wk5_B0(0,0,0) + D11_B0(0,0,0)*wk4_B0(0,0,0))*invRe*u0_B0(0,0,0) +
      (D00_B0(0,0,0)*wk2_B0(0,0,0) + D10_B0(0,0,0)*wk6_B0(0,0,0) + wk8_B0(0,0,0))*invRe*mu_B0(0,0,0)*wk8_B0(0,0,0) +
      (D00_B0(0,0,0)*wk2_B0(0,0,0) + D10_B0(0,0,0)*wk6_B0(0,0,0) + wk8_B0(0,0,0))*invRe*u0_B0(0,0,0)*d1_mu_dz +
      (D01_B0(0,0,0)*wk2_B0(0,0,0) + D11_B0(0,0,0)*wk6_B0(0,0,0) + wk9_B0(0,0,0))*invRe*mu_B0(0,0,0)*wk9_B0(0,0,0) +
      (D01_B0(0,0,0)*wk2_B0(0,0,0) + D11_B0(0,0,0)*wk6_B0(0,0,0) + wk9_B0(0,0,0))*invRe*u1_B0(0,0,0)*d1_mu_dz -
      (2.0/3.0)*(D01_B0(0,0,0)*wk1_B0(0,0,0) + D11_B0(0,0,0)*wk5_B0(0,0,0))*(D00_B0(0,0,0)*wk0_B0(0,0,0) +
      D10_B0(0,0,0)*wk4_B0(0,0,0) - 2*D01_B0(0,0,0)*wk1_B0(0,0,0) - 2*D11_B0(0,0,0)*wk5_B0(0,0,0) +
      wk10_B0(0,0,0))*invRe*mu_B0(0,0,0) - (2.0/3.0)*(D01_B0(0,0,0)*d1_mu_dx +
      D11_B0(0,0,0)*d1_mu_dy)*(D00_B0(0,0,0)*wk0_B0(0,0,0) + D10_B0(0,0,0)*wk4_B0(0,0,0) - 2*D01_B0(0,0,0)*wk1_B0(0,0,0)
      - 2*D11_B0(0,0,0)*wk5_B0(0,0,0) + wk10_B0(0,0,0))*invRe*u1_B0(0,0,0) - (2.0/3.0)*(-2*wk10_B0(0,0,0) +
      D00_B0(0,0,0)*wk0_B0(0,0,0) + D01_B0(0,0,0)*wk1_B0(0,0,0) + D10_B0(0,0,0)*wk4_B0(0,0,0) +
      D11_B0(0,0,0)*wk5_B0(0,0,0))*invRe*mu_B0(0,0,0)*wk10_B0(0,0,0) - (2.0/3.0)*(-2*wk10_B0(0,0,0) +
      D00_B0(0,0,0)*wk0_B0(0,0,0) + D01_B0(0,0,0)*wk1_B0(0,0,0) + D10_B0(0,0,0)*wk4_B0(0,0,0) +
      D11_B0(0,0,0)*wk5_B0(0,0,0))*invRe*u2_B0(0,0,0)*d1_mu_dz + ((1.0/3.0))*(4*d2_u2_dz + D00_B0(0,0,0)*d1_wk0_dz +
      D01_B0(0,0,0)*d1_wk1_dz + D10_B0(0,0,0)*d1_wk4_dz + D11_B0(0,0,0)*d1_wk5_dz +
      3*(D00_B0(0,0,0)*D00_B0(0,0,0))*d2_u2_dx + 3*(D01_B0(0,0,0)*D01_B0(0,0,0))*d2_u2_dx +
      3*(D10_B0(0,0,0)*D10_B0(0,0,0))*d2_u2_dy + 3*(D11_B0(0,0,0)*D11_B0(0,0,0))*d2_u2_dy +
      3*D00_B0(0,0,0)*wk2_B0(0,0,0)*SD000_B0(0,0,0) + 3*D00_B0(0,0,0)*wk6_B0(0,0,0)*SD100_B0(0,0,0) +
      3*D01_B0(0,0,0)*wk2_B0(0,0,0)*SD010_B0(0,0,0) + 3*D01_B0(0,0,0)*wk6_B0(0,0,0)*SD110_B0(0,0,0) +
      3*D10_B0(0,0,0)*wk2_B0(0,0,0)*SD001_B0(0,0,0) + 3*D10_B0(0,0,0)*wk6_B0(0,0,0)*SD101_B0(0,0,0) +
      3*D11_B0(0,0,0)*wk2_B0(0,0,0)*SD011_B0(0,0,0) + 3*D11_B0(0,0,0)*wk6_B0(0,0,0)*SD111_B0(0,0,0) +
      6*D00_B0(0,0,0)*D10_B0(0,0,0)*d1_wk2_dy + 6*D01_B0(0,0,0)*D11_B0(0,0,0)*d1_wk2_dy)*invRe*mu_B0(0,0,0)*u2_B0(0,0,0)
      + ((1.0/3.0))*(3*d2_u0_dz + D00_B0(0,0,0)*d1_wk2_dz + D10_B0(0,0,0)*d1_wk6_dz +
      3*(D01_B0(0,0,0)*D01_B0(0,0,0))*d2_u0_dx + 3*(D11_B0(0,0,0)*D11_B0(0,0,0))*d2_u0_dy +
      4*(D00_B0(0,0,0)*D00_B0(0,0,0))*d2_u0_dx + 4*(D10_B0(0,0,0)*D10_B0(0,0,0))*d2_u0_dy +
      D00_B0(0,0,0)*D01_B0(0,0,0)*d2_u1_dx + D00_B0(0,0,0)*D11_B0(0,0,0)*d1_wk1_dy +
      D01_B0(0,0,0)*D10_B0(0,0,0)*d1_wk1_dy + D10_B0(0,0,0)*D11_B0(0,0,0)*d2_u1_dy -
      2*D00_B0(0,0,0)*wk1_B0(0,0,0)*SD010_B0(0,0,0) - 2*D00_B0(0,0,0)*wk5_B0(0,0,0)*SD110_B0(0,0,0) -
      2*D10_B0(0,0,0)*wk1_B0(0,0,0)*SD011_B0(0,0,0) - 2*D10_B0(0,0,0)*wk5_B0(0,0,0)*SD111_B0(0,0,0) +
      3*D01_B0(0,0,0)*wk0_B0(0,0,0)*SD010_B0(0,0,0) + 3*D01_B0(0,0,0)*wk1_B0(0,0,0)*SD000_B0(0,0,0) +
      3*D01_B0(0,0,0)*wk4_B0(0,0,0)*SD110_B0(0,0,0) + 3*D01_B0(0,0,0)*wk5_B0(0,0,0)*SD100_B0(0,0,0) +
      3*D11_B0(0,0,0)*wk0_B0(0,0,0)*SD011_B0(0,0,0) + 3*D11_B0(0,0,0)*wk1_B0(0,0,0)*SD001_B0(0,0,0) +
      3*D11_B0(0,0,0)*wk4_B0(0,0,0)*SD111_B0(0,0,0) + 3*D11_B0(0,0,0)*wk5_B0(0,0,0)*SD101_B0(0,0,0) +
      4*D00_B0(0,0,0)*wk0_B0(0,0,0)*SD000_B0(0,0,0) + 4*D00_B0(0,0,0)*wk4_B0(0,0,0)*SD100_B0(0,0,0) +
      4*D10_B0(0,0,0)*wk0_B0(0,0,0)*SD001_B0(0,0,0) + 4*D10_B0(0,0,0)*wk4_B0(0,0,0)*SD101_B0(0,0,0) +
      6*D01_B0(0,0,0)*D11_B0(0,0,0)*d1_wk0_dy + 8*D00_B0(0,0,0)*D10_B0(0,0,0)*d1_wk0_dy)*invRe*mu_B0(0,0,0)*u0_B0(0,0,0)
      + ((1.0/3.0))*(3*d2_u1_dz + D01_B0(0,0,0)*d1_wk2_dz + D11_B0(0,0,0)*d1_wk6_dz +
      3*(D00_B0(0,0,0)*D00_B0(0,0,0))*d2_u1_dx + 3*(D10_B0(0,0,0)*D10_B0(0,0,0))*d2_u1_dy +
      4*(D01_B0(0,0,0)*D01_B0(0,0,0))*d2_u1_dx + 4*(D11_B0(0,0,0)*D11_B0(0,0,0))*d2_u1_dy +
      D00_B0(0,0,0)*D01_B0(0,0,0)*d2_u0_dx + D00_B0(0,0,0)*D11_B0(0,0,0)*d1_wk0_dy +
      D01_B0(0,0,0)*D10_B0(0,0,0)*d1_wk0_dy + D10_B0(0,0,0)*D11_B0(0,0,0)*d2_u0_dy -
      2*D01_B0(0,0,0)*wk0_B0(0,0,0)*SD000_B0(0,0,0) - 2*D01_B0(0,0,0)*wk4_B0(0,0,0)*SD100_B0(0,0,0) -
      2*D11_B0(0,0,0)*wk0_B0(0,0,0)*SD001_B0(0,0,0) - 2*D11_B0(0,0,0)*wk4_B0(0,0,0)*SD101_B0(0,0,0) +
      3*D00_B0(0,0,0)*wk0_B0(0,0,0)*SD010_B0(0,0,0) + 3*D00_B0(0,0,0)*wk1_B0(0,0,0)*SD000_B0(0,0,0) +
      3*D00_B0(0,0,0)*wk4_B0(0,0,0)*SD110_B0(0,0,0) + 3*D00_B0(0,0,0)*wk5_B0(0,0,0)*SD100_B0(0,0,0) +
      3*D10_B0(0,0,0)*wk0_B0(0,0,0)*SD011_B0(0,0,0) + 3*D10_B0(0,0,0)*wk1_B0(0,0,0)*SD001_B0(0,0,0) +
      3*D10_B0(0,0,0)*wk4_B0(0,0,0)*SD111_B0(0,0,0) + 3*D10_B0(0,0,0)*wk5_B0(0,0,0)*SD101_B0(0,0,0) +
      4*D01_B0(0,0,0)*wk1_B0(0,0,0)*SD010_B0(0,0,0) + 4*D01_B0(0,0,0)*wk5_B0(0,0,0)*SD110_B0(0,0,0) +
      4*D11_B0(0,0,0)*wk1_B0(0,0,0)*SD011_B0(0,0,0) + 4*D11_B0(0,0,0)*wk5_B0(0,0,0)*SD111_B0(0,0,0) +
      6*D00_B0(0,0,0)*D10_B0(0,0,0)*d1_wk1_dy + 8*D01_B0(0,0,0)*D11_B0(0,0,0)*d1_wk1_dy)*invRe*mu_B0(0,0,0)*u1_B0(0,0,0)
      + ((2.0/3.0))*(D00_B0(0,0,0)*wk0_B0(0,0,0) + D10_B0(0,0,0)*wk4_B0(0,0,0))*(-wk10_B0(0,0,0) -
      D01_B0(0,0,0)*wk1_B0(0,0,0) - D11_B0(0,0,0)*wk5_B0(0,0,0) + 2*D00_B0(0,0,0)*wk0_B0(0,0,0) +
      2*D10_B0(0,0,0)*wk4_B0(0,0,0))*invRe*mu_B0(0,0,0) + ((2.0/3.0))*(D00_B0(0,0,0)*d1_mu_dx +
      D10_B0(0,0,0)*d1_mu_dy)*(-wk10_B0(0,0,0) - D01_B0(0,0,0)*wk1_B0(0,0,0) - D11_B0(0,0,0)*wk5_B0(0,0,0) +
      2*D00_B0(0,0,0)*wk0_B0(0,0,0) + 2*D10_B0(0,0,0)*wk4_B0(0,0,0))*invRe*u0_B0(0,0,0) + (D00_B0(0,0,0)*wk3_B0(0,0,0) +
      D10_B0(0,0,0)*wk7_B0(0,0,0))*(D00_B0(0,0,0)*d1_mu_dx + D10_B0(0,0,0)*d1_mu_dy)*invPr*invRe*inv2Minf*inv_gamma_m1 +
      (D01_B0(0,0,0)*wk3_B0(0,0,0) + D11_B0(0,0,0)*wk7_B0(0,0,0))*(D01_B0(0,0,0)*d1_mu_dx +
      D11_B0(0,0,0)*d1_mu_dy)*invPr*invRe*inv2Minf*inv_gamma_m1 + ((D00_B0(0,0,0)*D00_B0(0,0,0))*d2_T_dx +
      (D01_B0(0,0,0)*D01_B0(0,0,0))*d2_T_dx + (D10_B0(0,0,0)*D10_B0(0,0,0))*d2_T_dy +
      (D11_B0(0,0,0)*D11_B0(0,0,0))*d2_T_dy + D00_B0(0,0,0)*wk3_B0(0,0,0)*SD000_B0(0,0,0) +
      D00_B0(0,0,0)*wk7_B0(0,0,0)*SD100_B0(0,0,0) + D01_B0(0,0,0)*wk3_B0(0,0,0)*SD010_B0(0,0,0) +
      D01_B0(0,0,0)*wk7_B0(0,0,0)*SD110_B0(0,0,0) + D10_B0(0,0,0)*wk3_B0(0,0,0)*SD001_B0(0,0,0) +
      D10_B0(0,0,0)*wk7_B0(0,0,0)*SD101_B0(0,0,0) + D11_B0(0,0,0)*wk3_B0(0,0,0)*SD011_B0(0,0,0) +
      D11_B0(0,0,0)*wk7_B0(0,0,0)*SD111_B0(0,0,0) + 2*D00_B0(0,0,0)*D10_B0(0,0,0)*d1_wk3_dy +
      2*D01_B0(0,0,0)*D11_B0(0,0,0)*d1_wk3_dy + d2_T_dz)*invPr*invRe*inv2Minf*inv_gamma_m1*mu_B0(0,0,0) +
      invPr*invRe*inv2Minf*inv_gamma_m1*wk11_B0(0,0,0)*d1_mu_dz + Residual4_B0(0,0,0);

}

 void opensbliblock00Kernel068(const ACC<double> &Residual0_B0, const ACC<double> &Residual1_B0, const ACC<double>
&Residual2_B0, const ACC<double> &Residual3_B0, const ACC<double> &Residual4_B0, ACC<double> &rhoE_B0, ACC<double>
&rhoE_RKold_B0, ACC<double> &rho_B0, ACC<double> &rho_RKold_B0, ACC<double> &rhou0_B0, ACC<double> &rhou0_RKold_B0,
ACC<double> &rhou1_B0, ACC<double> &rhou1_RKold_B0, ACC<double> &rhou2_B0, ACC<double> &rhou2_RKold_B0, const double
*rkA, const double *rkB)
{
   rho_RKold_B0(0,0,0) = rkA[0]*rho_RKold_B0(0,0,0) + dt*Residual0_B0(0,0,0);

   rho_B0(0,0,0) = rkB[0]*rho_RKold_B0(0,0,0) + rho_B0(0,0,0);

   rhou0_RKold_B0(0,0,0) = rkA[0]*rhou0_RKold_B0(0,0,0) + dt*Residual1_B0(0,0,0);

   rhou0_B0(0,0,0) = rkB[0]*rhou0_RKold_B0(0,0,0) + rhou0_B0(0,0,0);

   rhou1_RKold_B0(0,0,0) = rkA[0]*rhou1_RKold_B0(0,0,0) + dt*Residual2_B0(0,0,0);

   rhou1_B0(0,0,0) = rkB[0]*rhou1_RKold_B0(0,0,0) + rhou1_B0(0,0,0);

   rhou2_RKold_B0(0,0,0) = rkA[0]*rhou2_RKold_B0(0,0,0) + dt*Residual3_B0(0,0,0);

   rhou2_B0(0,0,0) = rkB[0]*rhou2_RKold_B0(0,0,0) + rhou2_B0(0,0,0);

   rhoE_RKold_B0(0,0,0) = rkA[0]*rhoE_RKold_B0(0,0,0) + dt*Residual4_B0(0,0,0);

   rhoE_B0(0,0,0) = rkB[0]*rhoE_RKold_B0(0,0,0) + rhoE_B0(0,0,0);

}

 void opensbliblock00Kernel057(const ACC<double> &rhoE_B0, const ACC<double> &rho_B0, const ACC<double> &rhou0_B0, const
ACC<double> &rhou1_B0, const ACC<double> &rhou2_B0, ACC<double> &a_B0, ACC<double> &kappa_B0, ACC<double> &u0_B0,
ACC<double> &u1_B0, ACC<double> &u2_B0, ACC<double> &p_B0)
{
   double inv_rho = 0.0;
   kappa_B0(0,0,0) = 1;

   inv_rho = 1.0/rho_B0(0,0,0);

   u0_B0(0,0,0) = rhou0_B0(0,0,0)*inv_rho;

   u1_B0(0,0,0) = rhou1_B0(0,0,0)*inv_rho;

   u2_B0(0,0,0) = rhou2_B0(0,0,0)*inv_rho;

    p_B0(0,0,0) = (-1 + gama)*(-(0.5*(rhou0_B0(0,0,0)*rhou0_B0(0,0,0)) + 0.5*(rhou1_B0(0,0,0)*rhou1_B0(0,0,0)) +
      0.5*(rhou2_B0(0,0,0)*rhou2_B0(0,0,0)))*inv_rho + rhoE_B0(0,0,0));

   a_B0(0,0,0) = sqrt(gama*p_B0(0,0,0)*inv_rho);

}

 void opensbliblock00Kernel061(const ACC<double> &D00_B0, const ACC<double> &D01_B0, const ACC<double> &D10_B0, const
ACC<double> &D11_B0, const ACC<double> &u0_B0, const ACC<double> &u1_B0, const ACC<double> &u2_B0, ACC<double>
&kappa_B0, const int *idx)
{
   double d1_u0_dx = 0.0;
   double d1_u0_dy = 0.0;
   double d1_u0_dz = 0.0;
   double d1_u1_dx = 0.0;
   double d1_u1_dy = 0.0;
   double d1_u1_dz = 0.0;
   double d1_u2_dx = 0.0;
   double d1_u2_dy = 0.0;
   double d1_u2_dz = 0.0;
    d1_u1_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*u1_B0(2,0,0) + 4*u1_B0(1,0,0) - (25.0/12.0)*u1_B0(0,0,0) -
      (1.0/4.0)*u1_B0(4,0,0) + ((4.0/3.0))*u1_B0(3,0,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*u1_B0(0,0,0) -
      (1.0/2.0)*u1_B0(2,0,0) - (1.0/4.0)*u1_B0(-1,0,0) + ((1.0/12.0))*u1_B0(3,0,0) + ((3.0/2.0))*u1_B0(1,0,0)
)
:
      ((idx[0] == -1 + block0np0) ? (
   -4*u1_B0(-1,0,0) + 3*u1_B0(-2,0,0) - (4.0/3.0)*u1_B0(-3,0,0) +
      ((1.0/4.0))*u1_B0(-4,0,0) + ((25.0/12.0))*u1_B0(0,0,0)
)
: ((idx[0] == -2 + block0np0) ? (
  
      ((1.0/2.0))*u1_B0(-2,0,0) - (3.0/2.0)*u1_B0(-1,0,0) - (1.0/12.0)*u1_B0(-3,0,0) + ((1.0/4.0))*u1_B0(1,0,0) +
      ((5.0/6.0))*u1_B0(0,0,0)
)
: (
   -(2.0/3.0)*u1_B0(-1,0,0) - (1.0/12.0)*u1_B0(2,0,0) + ((1.0/12.0))*u1_B0(-2,0,0)
      + ((2.0/3.0))*u1_B0(1,0,0)
)))));

    d1_u2_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*u2_B0(0,2,0) + 4*u2_B0(0,1,0) - (25.0/12.0)*u2_B0(0,0,0) -
      (1.0/4.0)*u2_B0(0,4,0) + ((4.0/3.0))*u2_B0(0,3,0)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*u2_B0(0,0,0) -
      (1.0/2.0)*u2_B0(0,2,0) - (1.0/4.0)*u2_B0(0,-1,0) + ((1.0/12.0))*u2_B0(0,3,0) + ((3.0/2.0))*u2_B0(0,1,0)
)
: (
  
      -(2.0/3.0)*u2_B0(0,-1,0) - (1.0/12.0)*u2_B0(0,2,0) + ((1.0/12.0))*u2_B0(0,-2,0) + ((2.0/3.0))*u2_B0(0,1,0)
)));

    d1_u0_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*u0_B0(0,2,0) + 4*u0_B0(0,1,0) - (25.0/12.0)*u0_B0(0,0,0) -
      (1.0/4.0)*u0_B0(0,4,0) + ((4.0/3.0))*u0_B0(0,3,0)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*u0_B0(0,0,0) -
      (1.0/2.0)*u0_B0(0,2,0) - (1.0/4.0)*u0_B0(0,-1,0) + ((1.0/12.0))*u0_B0(0,3,0) + ((3.0/2.0))*u0_B0(0,1,0)
)
: (
  
      -(2.0/3.0)*u0_B0(0,-1,0) - (1.0/12.0)*u0_B0(0,2,0) + ((1.0/12.0))*u0_B0(0,-2,0) + ((2.0/3.0))*u0_B0(0,1,0)
)));

    d1_u2_dz = (-(2.0/3.0)*u2_B0(0,0,-1) - (1.0/12.0)*u2_B0(0,0,2) + ((1.0/12.0))*u2_B0(0,0,-2) +
      ((2.0/3.0))*u2_B0(0,0,1))*invDelta2block0;

    d1_u1_dy = invDelta1block0*((idx[1] == 0) ? (
   -3*u1_B0(0,2,0) + 4*u1_B0(0,1,0) - (25.0/12.0)*u1_B0(0,0,0) -
      (1.0/4.0)*u1_B0(0,4,0) + ((4.0/3.0))*u1_B0(0,3,0)
)
: ((idx[1] == 1) ? (
   -(5.0/6.0)*u1_B0(0,0,0) -
      (1.0/2.0)*u1_B0(0,2,0) - (1.0/4.0)*u1_B0(0,-1,0) + ((1.0/12.0))*u1_B0(0,3,0) + ((3.0/2.0))*u1_B0(0,1,0)
)
: (
  
      -(2.0/3.0)*u1_B0(0,-1,0) - (1.0/12.0)*u1_B0(0,2,0) + ((1.0/12.0))*u1_B0(0,-2,0) + ((2.0/3.0))*u1_B0(0,1,0)
)));

    d1_u1_dz = (-(2.0/3.0)*u1_B0(0,0,-1) - (1.0/12.0)*u1_B0(0,0,2) + ((1.0/12.0))*u1_B0(0,0,-2) +
      ((2.0/3.0))*u1_B0(0,0,1))*invDelta2block0;

    d1_u2_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*u2_B0(2,0,0) + 4*u2_B0(1,0,0) - (25.0/12.0)*u2_B0(0,0,0) -
      (1.0/4.0)*u2_B0(4,0,0) + ((4.0/3.0))*u2_B0(3,0,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*u2_B0(0,0,0) -
      (1.0/2.0)*u2_B0(2,0,0) - (1.0/4.0)*u2_B0(-1,0,0) + ((1.0/12.0))*u2_B0(3,0,0) + ((3.0/2.0))*u2_B0(1,0,0)
)
:
      ((idx[0] == -1 + block0np0) ? (
   -4*u2_B0(-1,0,0) + 3*u2_B0(-2,0,0) - (4.0/3.0)*u2_B0(-3,0,0) +
      ((1.0/4.0))*u2_B0(-4,0,0) + ((25.0/12.0))*u2_B0(0,0,0)
)
: ((idx[0] == -2 + block0np0) ? (
  
      ((1.0/2.0))*u2_B0(-2,0,0) - (3.0/2.0)*u2_B0(-1,0,0) - (1.0/12.0)*u2_B0(-3,0,0) + ((1.0/4.0))*u2_B0(1,0,0) +
      ((5.0/6.0))*u2_B0(0,0,0)
)
: (
   -(2.0/3.0)*u2_B0(-1,0,0) - (1.0/12.0)*u2_B0(2,0,0) + ((1.0/12.0))*u2_B0(-2,0,0)
      + ((2.0/3.0))*u2_B0(1,0,0)
)))));

    d1_u0_dz = (-(2.0/3.0)*u0_B0(0,0,-1) - (1.0/12.0)*u0_B0(0,0,2) + ((1.0/12.0))*u0_B0(0,0,-2) +
      ((2.0/3.0))*u0_B0(0,0,1))*invDelta2block0;

    d1_u0_dx = invDelta0block0*((idx[0] == 0) ? (
   -3*u0_B0(2,0,0) + 4*u0_B0(1,0,0) - (25.0/12.0)*u0_B0(0,0,0) -
      (1.0/4.0)*u0_B0(4,0,0) + ((4.0/3.0))*u0_B0(3,0,0)
)
: ((idx[0] == 1) ? (
   -(5.0/6.0)*u0_B0(0,0,0) -
      (1.0/2.0)*u0_B0(2,0,0) - (1.0/4.0)*u0_B0(-1,0,0) + ((1.0/12.0))*u0_B0(3,0,0) + ((3.0/2.0))*u0_B0(1,0,0)
)
:
      ((idx[0] == -1 + block0np0) ? (
   -4*u0_B0(-1,0,0) + 3*u0_B0(-2,0,0) - (4.0/3.0)*u0_B0(-3,0,0) +
      ((1.0/4.0))*u0_B0(-4,0,0) + ((25.0/12.0))*u0_B0(0,0,0)
)
: ((idx[0] == -2 + block0np0) ? (
  
      ((1.0/2.0))*u0_B0(-2,0,0) - (3.0/2.0)*u0_B0(-1,0,0) - (1.0/12.0)*u0_B0(-3,0,0) + ((1.0/4.0))*u0_B0(1,0,0) +
      ((5.0/6.0))*u0_B0(0,0,0)
)
: (
   -(2.0/3.0)*u0_B0(-1,0,0) - (1.0/12.0)*u0_B0(2,0,0) + ((1.0/12.0))*u0_B0(-2,0,0)
      + ((2.0/3.0))*u0_B0(1,0,0)
)))));

    kappa_B0(0,0,0) = ((D00_B0(0,0,0)*d1_u0_dx + D01_B0(0,0,0)*d1_u1_dx + D10_B0(0,0,0)*d1_u0_dy +
      D11_B0(0,0,0)*d1_u1_dy + d1_u2_dz)*(D00_B0(0,0,0)*d1_u0_dx + D01_B0(0,0,0)*d1_u1_dx + D10_B0(0,0,0)*d1_u0_dy +
      D11_B0(0,0,0)*d1_u1_dy + d1_u2_dz))*(0.5 - 0.5*tanh(2.5 + 500.0*(D00_B0(0,0,0)*d1_u0_dx + D01_B0(0,0,0)*d1_u1_dx +
      D10_B0(0,0,0)*d1_u0_dy + D11_B0(0,0,0)*d1_u1_dy + d1_u2_dz)/sqrt((Delta0block0*Delta0block0) +
      (Delta1block0*Delta1block0) + (Delta2block0*Delta2block0))))/(1.0e-40 + ((-d1_u1_dz + D01_B0(0,0,0)*d1_u2_dx +
      D11_B0(0,0,0)*d1_u2_dy)*(-d1_u1_dz + D01_B0(0,0,0)*d1_u2_dx + D11_B0(0,0,0)*d1_u2_dy)) + ((-D00_B0(0,0,0)*d1_u2_dx
      - D10_B0(0,0,0)*d1_u2_dy + d1_u0_dz)*(-D00_B0(0,0,0)*d1_u2_dx - D10_B0(0,0,0)*d1_u2_dy + d1_u0_dz)) +
      ((D00_B0(0,0,0)*d1_u1_dx + D10_B0(0,0,0)*d1_u1_dy - D01_B0(0,0,0)*d1_u0_dx -
      D11_B0(0,0,0)*d1_u0_dy)*(D00_B0(0,0,0)*d1_u1_dx + D10_B0(0,0,0)*d1_u1_dy - D01_B0(0,0,0)*d1_u0_dx -
      D11_B0(0,0,0)*d1_u0_dy)) + ((D00_B0(0,0,0)*d1_u0_dx + D01_B0(0,0,0)*d1_u1_dx + D10_B0(0,0,0)*d1_u0_dy +
      D11_B0(0,0,0)*d1_u1_dy + d1_u2_dz)*(D00_B0(0,0,0)*d1_u0_dx + D01_B0(0,0,0)*d1_u1_dx + D10_B0(0,0,0)*d1_u0_dy +
      D11_B0(0,0,0)*d1_u1_dy + d1_u2_dz)));

}

 void opensbliblock00Kernel062(const ACC<double> &rhoE_B0, const ACC<double> &rho_B0, const ACC<double> &rhou0_B0, const
ACC<double> &rhou1_B0, const ACC<double> &rhou2_B0, ACC<double> &a_B0, ACC<double> &u0_B0, ACC<double> &u1_B0,
ACC<double> &u2_B0, ACC<double> &p_B0)
{
   double inv_rho = 0.0;
   inv_rho = 1.0/rho_B0(0,0,0);

   u0_B0(0,0,0) = rhou0_B0(0,0,0)*inv_rho;

   u1_B0(0,0,0) = rhou1_B0(0,0,0)*inv_rho;

   u2_B0(0,0,0) = rhou2_B0(0,0,0)*inv_rho;

    p_B0(0,0,0) = (-1 + gama)*(-(0.5*(rhou0_B0(0,0,0)*rhou0_B0(0,0,0)) + 0.5*(rhou1_B0(0,0,0)*rhou1_B0(0,0,0)) +
      0.5*(rhou2_B0(0,0,0)*rhou2_B0(0,0,0)))*inv_rho + rhoE_B0(0,0,0));

   a_B0(0,0,0) = sqrt(gama*p_B0(0,0,0)*inv_rho);

}

 void opensbliblock00Kernel063(ACC<double> &Residual0_B0, ACC<double> &Residual1_B0, ACC<double> &Residual2_B0,
ACC<double> &Residual3_B0, ACC<double> &Residual4_B0, ACC<double> &rhoE_RKold_B0, ACC<double> &rho_RKold_B0, ACC<double>
&rhou0_RKold_B0, ACC<double> &rhou1_RKold_B0, ACC<double> &rhou2_RKold_B0, ACC<double> &wk0_B0, ACC<double> &wk1_B0,
ACC<double> &wk2_B0, ACC<double> &wk3_B0, ACC<double> &wk4_B0)
{
   wk0_B0(0,0,0) = 0.0;

   wk1_B0(0,0,0) = 0.0;

   wk2_B0(0,0,0) = 0.0;

   wk3_B0(0,0,0) = 0.0;

   wk4_B0(0,0,0) = 0.0;

   Residual0_B0(0,0,0) = 0.0;

   Residual1_B0(0,0,0) = 0.0;

   Residual2_B0(0,0,0) = 0.0;

   Residual3_B0(0,0,0) = 0.0;

   Residual4_B0(0,0,0) = 0.0;

   rho_RKold_B0(0,0,0) = 0.0;

   rhou0_RKold_B0(0,0,0) = 0.0;

   rhou1_RKold_B0(0,0,0) = 0.0;

   rhou2_RKold_B0(0,0,0) = 0.0;

   rhoE_RKold_B0(0,0,0) = 0.0;

}

 void opensbliblock00Kernel064(const ACC<double> &D00_B0, const ACC<double> &D01_B0, const ACC<double> &a_B0, const
ACC<double> &detJ_B0, const ACC<double> &kappa_B0, const ACC<double> &rhoE_B0, const ACC<double> &rho_B0, const
ACC<double> &rhou0_B0, const ACC<double> &rhou1_B0, const ACC<double> &rhou2_B0, const ACC<double> &u0_B0, const
ACC<double> &u1_B0, const ACC<double> &u2_B0, ACC<double> &wk0_B0, ACC<double> &wk1_B0, ACC<double> &wk2_B0, ACC<double>
&wk3_B0, ACC<double> &wk4_B0)
{
   double AVG_0_0_LEV_00 = 0.0;
   double AVG_0_0_LEV_01 = 0.0;
   double AVG_0_0_LEV_02 = 0.0;
   double AVG_0_0_LEV_03 = 0.0;
   double AVG_0_0_LEV_04 = 0.0;
   double AVG_0_0_LEV_10 = 0.0;
   double AVG_0_0_LEV_11 = 0.0;
   double AVG_0_0_LEV_12 = 0.0;
   double AVG_0_0_LEV_13 = 0.0;
   double AVG_0_0_LEV_14 = 0.0;
   double AVG_0_0_LEV_20 = 0.0;
   double AVG_0_0_LEV_21 = 0.0;
   double AVG_0_0_LEV_22 = 0.0;
   double AVG_0_0_LEV_30 = 0.0;
   double AVG_0_0_LEV_31 = 0.0;
   double AVG_0_0_LEV_32 = 0.0;
   double AVG_0_0_LEV_33 = 0.0;
   double AVG_0_0_LEV_34 = 0.0;
   double AVG_0_0_LEV_40 = 0.0;
   double AVG_0_0_LEV_41 = 0.0;
   double AVG_0_0_LEV_42 = 0.0;
   double AVG_0_0_LEV_43 = 0.0;
   double AVG_0_0_LEV_44 = 0.0;
   double AVG_0_D00 = 0.0;
   double AVG_0_D01 = 0.0;
   double AVG_0_REV_00 = 0.0;
   double AVG_0_REV_01 = 0.0;
   double AVG_0_REV_03 = 0.0;
   double AVG_0_REV_04 = 0.0;
   double AVG_0_REV_10 = 0.0;
   double AVG_0_REV_11 = 0.0;
   double AVG_0_REV_12 = 0.0;
   double AVG_0_REV_13 = 0.0;
   double AVG_0_REV_14 = 0.0;
   double AVG_0_REV_20 = 0.0;
   double AVG_0_REV_21 = 0.0;
   double AVG_0_REV_22 = 0.0;
   double AVG_0_REV_23 = 0.0;
   double AVG_0_REV_24 = 0.0;
   double AVG_0_REV_30 = 0.0;
   double AVG_0_REV_31 = 0.0;
   double AVG_0_REV_33 = 0.0;
   double AVG_0_REV_34 = 0.0;
   double AVG_0_REV_40 = 0.0;
   double AVG_0_REV_41 = 0.0;
   double AVG_0_REV_42 = 0.0;
   double AVG_0_REV_43 = 0.0;
   double AVG_0_REV_44 = 0.0;
   double AVG_0_a = 0.0;
   double AVG_0_detJ = 0.0;
   double AVG_0_rho = 0.0;
   double AVG_0_u0 = 0.0;
   double AVG_0_u1 = 0.0;
   double AVG_0_u2 = 0.0;
   double S = 0.0;
   double alpha_00 = 0.0;
   double alpha_01 = 0.0;
   double alpha_02 = 0.0;
   double alpha_10 = 0.0;
   double alpha_11 = 0.0;
   double alpha_12 = 0.0;
   double alpha_20 = 0.0;
   double alpha_21 = 0.0;
   double alpha_22 = 0.0;
   double alpha_30 = 0.0;
   double alpha_31 = 0.0;
   double alpha_32 = 0.0;
   double alpha_40 = 0.0;
   double alpha_41 = 0.0;
   double alpha_42 = 0.0;
   double g_00 = 0.0;
   double g_01 = 0.0;
   double g_10 = 0.0;
   double g_11 = 0.0;
   double g_20 = 0.0;
   double g_21 = 0.0;
   double g_30 = 0.0;
   double g_31 = 0.0;
   double g_40 = 0.0;
   double g_41 = 0.0;
   double gamma_0 = 0.0;
   double gamma_1 = 0.0;
   double gamma_2 = 0.0;
   double gamma_3 = 0.0;
   double gamma_4 = 0.0;
   double inv_AVG_a = 0.0;
   double inv_AVG_met_fact = 0.0;
   double inv_AVG_rho = 0.0;
   double phi_0 = 0.0;
   double phi_1 = 0.0;
   double phi_2 = 0.0;
   double phi_3 = 0.0;
   double phi_4 = 0.0;
   double phi_star_0 = 0.0;
   double phi_star_1 = 0.0;
   double phi_star_2 = 0.0;
   double phi_star_3 = 0.0;
   double phi_star_4 = 0.0;
   double sigma_0_0 = 0.0;
   double sigma_0_1 = 0.0;
   double sigma_0_2 = 0.0;
   double sigma_0_3 = 0.0;
   double sigma_0_4 = 0.0;
   double sigma_1_0 = 0.0;
   double sigma_1_1 = 0.0;
   double sigma_1_2 = 0.0;
   double sigma_1_3 = 0.0;
   double sigma_1_4 = 0.0;
   double t1 = 0.0;
   double t2 = 0.0;
   double theta_0 = 0.0;
   double theta_1 = 0.0;
   double theta_2 = 0.0;
   double theta_3 = 0.0;
   double theta_4 = 0.0;
   double theta_hat_00 = 0.0;
   double theta_hat_01 = 0.0;
   double theta_hat_10 = 0.0;
   double theta_hat_11 = 0.0;
   double theta_hat_20 = 0.0;
   double theta_hat_21 = 0.0;
   double theta_hat_30 = 0.0;
   double theta_hat_31 = 0.0;
   double theta_hat_40 = 0.0;
   double theta_hat_41 = 0.0;
   double ws_lambda_00 = 0.0;
   double ws_lambda_11 = 0.0;
   double ws_lambda_22 = 0.0;
   double ws_lambda_33 = 0.0;
   double ws_lambda_44 = 0.0;
    if (fmax(kappa_B0(1,0,0), fmax(kappa_B0(-2,0,0), fmax(kappa_B0(-3,0,0), fmax(kappa_B0(2,0,0), fmax(kappa_B0(-1,0,0),
      kappa_B0(0,0,0)))))) > Ducros_check){

      AVG_0_u0 = ((1.0/2.0))*(u0_B0(0,0,0) + u0_B0(-1,0,0));

      AVG_0_a = ((1.0/2.0))*(a_B0(0,0,0) + a_B0(-1,0,0));

      AVG_0_u2 = ((1.0/2.0))*(u2_B0(0,0,0) + u2_B0(-1,0,0));

      AVG_0_rho = ((1.0/2.0))*(rho_B0(0,0,0) + rho_B0(-1,0,0));

      AVG_0_u1 = ((1.0/2.0))*(u1_B0(0,0,0) + u1_B0(-1,0,0));

      AVG_0_detJ = ((1.0/2.0))*(detJ_B0(0,0,0) + detJ_B0(1,0,0));

      AVG_0_D00 = ((1.0/2.0))*(D00_B0(0,0,0) + D00_B0(1,0,0));

      AVG_0_D01 = ((1.0/2.0))*(D01_B0(0,0,0) + D01_B0(1,0,0));

      inv_AVG_a = 1.0/(AVG_0_a);

      inv_AVG_rho = 1.0/(AVG_0_rho);

      inv_AVG_met_fact = pow((AVG_0_D00*AVG_0_D00) + (AVG_0_D01*AVG_0_D01), (-1.0/2.0));

       AVG_0_0_LEV_00 = -(1.0/2.0)*(-2*AVG_0_D00 - (AVG_0_u0*AVG_0_u0)*(inv_AVG_a*inv_AVG_a)*AVG_0_D00 -
            (AVG_0_u1*AVG_0_u1)*(inv_AVG_a*inv_AVG_a)*AVG_0_D00 - (AVG_0_u2*AVG_0_u2)*(inv_AVG_a*inv_AVG_a)*AVG_0_D00 -
            2*AVG_0_D01*AVG_0_u2*inv_AVG_rho + (AVG_0_u0*AVG_0_u0)*(inv_AVG_a*inv_AVG_a)*gama*AVG_0_D00 +
            (AVG_0_u1*AVG_0_u1)*(inv_AVG_a*inv_AVG_a)*gama*AVG_0_D00 +
            (AVG_0_u2*AVG_0_u2)*(inv_AVG_a*inv_AVG_a)*gama*AVG_0_D00)*inv_AVG_met_fact;

      AVG_0_0_LEV_01 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_D00*AVG_0_u0*inv_AVG_met_fact;

      AVG_0_0_LEV_02 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_D00*AVG_0_u1*inv_AVG_met_fact;

       AVG_0_0_LEV_03 = (-AVG_0_D01*inv_AVG_rho - (inv_AVG_a*inv_AVG_a)*AVG_0_D00*AVG_0_u2 +
            (inv_AVG_a*inv_AVG_a)*gama*AVG_0_D00*AVG_0_u2)*inv_AVG_met_fact;

      AVG_0_0_LEV_04 = -(inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_D00*inv_AVG_met_fact;

       AVG_0_0_LEV_10 = -(1.0/2.0)*(-2*AVG_0_D01 - (AVG_0_u0*AVG_0_u0)*(inv_AVG_a*inv_AVG_a)*AVG_0_D01 -
            (AVG_0_u1*AVG_0_u1)*(inv_AVG_a*inv_AVG_a)*AVG_0_D01 - (AVG_0_u2*AVG_0_u2)*(inv_AVG_a*inv_AVG_a)*AVG_0_D01 +
            2*AVG_0_D00*AVG_0_u2*inv_AVG_rho + (AVG_0_u0*AVG_0_u0)*(inv_AVG_a*inv_AVG_a)*gama*AVG_0_D01 +
            (AVG_0_u1*AVG_0_u1)*(inv_AVG_a*inv_AVG_a)*gama*AVG_0_D01 +
            (AVG_0_u2*AVG_0_u2)*(inv_AVG_a*inv_AVG_a)*gama*AVG_0_D01)*inv_AVG_met_fact;

      AVG_0_0_LEV_11 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_D01*AVG_0_u0*inv_AVG_met_fact;

      AVG_0_0_LEV_12 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_D01*AVG_0_u1*inv_AVG_met_fact;

       AVG_0_0_LEV_13 = (AVG_0_D00*inv_AVG_rho - (inv_AVG_a*inv_AVG_a)*AVG_0_D01*AVG_0_u2 +
            (inv_AVG_a*inv_AVG_a)*gama*AVG_0_D01*AVG_0_u2)*inv_AVG_met_fact;

      AVG_0_0_LEV_14 = -(inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_D01*inv_AVG_met_fact;

      AVG_0_0_LEV_20 = (AVG_0_D00*AVG_0_u1 - AVG_0_D01*AVG_0_u0)*inv_AVG_met_fact*inv_AVG_rho;

      AVG_0_0_LEV_21 = AVG_0_D01*inv_AVG_met_fact*inv_AVG_rho;

      AVG_0_0_LEV_22 = -AVG_0_D00*inv_AVG_met_fact*inv_AVG_rho;

       AVG_0_0_LEV_30 = -0.353553390593274*((AVG_0_u0*AVG_0_u0) + (AVG_0_u1*AVG_0_u1) + (AVG_0_u2*AVG_0_u2) -
            (AVG_0_u0*AVG_0_u0)*gama - (AVG_0_u1*AVG_0_u1)*gama - (AVG_0_u2*AVG_0_u2)*gama +
            2*AVG_0_D00*AVG_0_a*AVG_0_u0*inv_AVG_met_fact +
            2*AVG_0_D01*AVG_0_a*AVG_0_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

       AVG_0_0_LEV_31 = 0.707106781186547*(-gama*AVG_0_u0 + AVG_0_D00*AVG_0_a*inv_AVG_met_fact +
            AVG_0_u0)*inv_AVG_a*inv_AVG_rho;

       AVG_0_0_LEV_32 = 0.707106781186547*(-gama*AVG_0_u1 + AVG_0_D01*AVG_0_a*inv_AVG_met_fact +
            AVG_0_u1)*inv_AVG_a*inv_AVG_rho;

      AVG_0_0_LEV_33 = -0.707106781186547*gamma_m1*AVG_0_u2*inv_AVG_a*inv_AVG_rho;

      AVG_0_0_LEV_34 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

       AVG_0_0_LEV_40 = 0.353553390593274*(-(AVG_0_u0*AVG_0_u0) - (AVG_0_u1*AVG_0_u1) - (AVG_0_u2*AVG_0_u2) +
            (AVG_0_u0*AVG_0_u0)*gama + (AVG_0_u1*AVG_0_u1)*gama + (AVG_0_u2*AVG_0_u2)*gama +
            2*AVG_0_D00*AVG_0_a*AVG_0_u0*inv_AVG_met_fact +
            2*AVG_0_D01*AVG_0_a*AVG_0_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

       AVG_0_0_LEV_41 = -0.707106781186547*(-AVG_0_u0 + gama*AVG_0_u0 +
            AVG_0_D00*AVG_0_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

       AVG_0_0_LEV_42 = -0.707106781186547*(-AVG_0_u1 + gama*AVG_0_u1 +
            AVG_0_D01*AVG_0_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

      AVG_0_0_LEV_43 = -0.707106781186547*gamma_m1*AVG_0_u2*inv_AVG_a*inv_AVG_rho;

      AVG_0_0_LEV_44 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

       alpha_00 = (-rho_B0(-1,0,0) + rho_B0(0,0,0))*AVG_0_0_LEV_00 + (-rhoE_B0(-1,0,0) + rhoE_B0(0,0,0))*AVG_0_0_LEV_04
            + (-rhou0_B0(-1,0,0) + rhou0_B0(0,0,0))*AVG_0_0_LEV_01 + (-rhou1_B0(-1,0,0) +
            rhou1_B0(0,0,0))*AVG_0_0_LEV_02 + (-rhou2_B0(-1,0,0) + rhou2_B0(0,0,0))*AVG_0_0_LEV_03;

       alpha_10 = (-rho_B0(-1,0,0) + rho_B0(0,0,0))*AVG_0_0_LEV_10 + (-rhoE_B0(-1,0,0) + rhoE_B0(0,0,0))*AVG_0_0_LEV_14
            + (-rhou0_B0(-1,0,0) + rhou0_B0(0,0,0))*AVG_0_0_LEV_11 + (-rhou1_B0(-1,0,0) +
            rhou1_B0(0,0,0))*AVG_0_0_LEV_12 + (-rhou2_B0(-1,0,0) + rhou2_B0(0,0,0))*AVG_0_0_LEV_13;

       alpha_20 = (-rho_B0(-1,0,0) + rho_B0(0,0,0))*AVG_0_0_LEV_20 + (-rhou0_B0(-1,0,0) +
            rhou0_B0(0,0,0))*AVG_0_0_LEV_21 + (-rhou1_B0(-1,0,0) + rhou1_B0(0,0,0))*AVG_0_0_LEV_22;

       alpha_30 = (-rho_B0(-1,0,0) + rho_B0(0,0,0))*AVG_0_0_LEV_30 + (-rhoE_B0(-1,0,0) + rhoE_B0(0,0,0))*AVG_0_0_LEV_34
            + (-rhou0_B0(-1,0,0) + rhou0_B0(0,0,0))*AVG_0_0_LEV_31 + (-rhou1_B0(-1,0,0) +
            rhou1_B0(0,0,0))*AVG_0_0_LEV_32 + (-rhou2_B0(-1,0,0) + rhou2_B0(0,0,0))*AVG_0_0_LEV_33;

       alpha_40 = (-rho_B0(-1,0,0) + rho_B0(0,0,0))*AVG_0_0_LEV_40 + (-rhoE_B0(-1,0,0) + rhoE_B0(0,0,0))*AVG_0_0_LEV_44
            + (-rhou0_B0(-1,0,0) + rhou0_B0(0,0,0))*AVG_0_0_LEV_41 + (-rhou1_B0(-1,0,0) +
            rhou1_B0(0,0,0))*AVG_0_0_LEV_42 + (-rhou2_B0(-1,0,0) + rhou2_B0(0,0,0))*AVG_0_0_LEV_43;

      AVG_0_u0 = ((1.0/2.0))*(u0_B0(0,0,0) + u0_B0(1,0,0));

      AVG_0_a = ((1.0/2.0))*(a_B0(0,0,0) + a_B0(1,0,0));

      AVG_0_u2 = ((1.0/2.0))*(u2_B0(0,0,0) + u2_B0(1,0,0));

      AVG_0_rho = ((1.0/2.0))*(rho_B0(0,0,0) + rho_B0(1,0,0));

      AVG_0_u1 = ((1.0/2.0))*(u1_B0(0,0,0) + u1_B0(1,0,0));

      AVG_0_detJ = ((1.0/2.0))*(detJ_B0(0,0,0) + detJ_B0(1,0,0));

      AVG_0_D00 = ((1.0/2.0))*(D00_B0(0,0,0) + D00_B0(1,0,0));

      AVG_0_D01 = ((1.0/2.0))*(D01_B0(0,0,0) + D01_B0(1,0,0));

      inv_AVG_a = 1.0/(AVG_0_a);

      inv_AVG_rho = 1.0/(AVG_0_rho);

      inv_AVG_met_fact = pow((AVG_0_D00*AVG_0_D00) + (AVG_0_D01*AVG_0_D01), (-1.0/2.0));

       AVG_0_0_LEV_00 = -(1.0/2.0)*(-2*AVG_0_D00 - (AVG_0_u0*AVG_0_u0)*(inv_AVG_a*inv_AVG_a)*AVG_0_D00 -
            (AVG_0_u1*AVG_0_u1)*(inv_AVG_a*inv_AVG_a)*AVG_0_D00 - (AVG_0_u2*AVG_0_u2)*(inv_AVG_a*inv_AVG_a)*AVG_0_D00 -
            2*AVG_0_D01*AVG_0_u2*inv_AVG_rho + (AVG_0_u0*AVG_0_u0)*(inv_AVG_a*inv_AVG_a)*gama*AVG_0_D00 +
            (AVG_0_u1*AVG_0_u1)*(inv_AVG_a*inv_AVG_a)*gama*AVG_0_D00 +
            (AVG_0_u2*AVG_0_u2)*(inv_AVG_a*inv_AVG_a)*gama*AVG_0_D00)*inv_AVG_met_fact;

      AVG_0_0_LEV_01 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_D00*AVG_0_u0*inv_AVG_met_fact;

      AVG_0_0_LEV_02 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_D00*AVG_0_u1*inv_AVG_met_fact;

       AVG_0_0_LEV_03 = (-AVG_0_D01*inv_AVG_rho - (inv_AVG_a*inv_AVG_a)*AVG_0_D00*AVG_0_u2 +
            (inv_AVG_a*inv_AVG_a)*gama*AVG_0_D00*AVG_0_u2)*inv_AVG_met_fact;

      AVG_0_0_LEV_04 = -(inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_D00*inv_AVG_met_fact;

       AVG_0_0_LEV_10 = -(1.0/2.0)*(-2*AVG_0_D01 - (AVG_0_u0*AVG_0_u0)*(inv_AVG_a*inv_AVG_a)*AVG_0_D01 -
            (AVG_0_u1*AVG_0_u1)*(inv_AVG_a*inv_AVG_a)*AVG_0_D01 - (AVG_0_u2*AVG_0_u2)*(inv_AVG_a*inv_AVG_a)*AVG_0_D01 +
            2*AVG_0_D00*AVG_0_u2*inv_AVG_rho + (AVG_0_u0*AVG_0_u0)*(inv_AVG_a*inv_AVG_a)*gama*AVG_0_D01 +
            (AVG_0_u1*AVG_0_u1)*(inv_AVG_a*inv_AVG_a)*gama*AVG_0_D01 +
            (AVG_0_u2*AVG_0_u2)*(inv_AVG_a*inv_AVG_a)*gama*AVG_0_D01)*inv_AVG_met_fact;

      AVG_0_0_LEV_11 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_D01*AVG_0_u0*inv_AVG_met_fact;

      AVG_0_0_LEV_12 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_D01*AVG_0_u1*inv_AVG_met_fact;

       AVG_0_0_LEV_13 = (AVG_0_D00*inv_AVG_rho - (inv_AVG_a*inv_AVG_a)*AVG_0_D01*AVG_0_u2 +
            (inv_AVG_a*inv_AVG_a)*gama*AVG_0_D01*AVG_0_u2)*inv_AVG_met_fact;

      AVG_0_0_LEV_14 = -(inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_D01*inv_AVG_met_fact;

      AVG_0_0_LEV_20 = (AVG_0_D00*AVG_0_u1 - AVG_0_D01*AVG_0_u0)*inv_AVG_met_fact*inv_AVG_rho;

      AVG_0_0_LEV_21 = AVG_0_D01*inv_AVG_met_fact*inv_AVG_rho;

      AVG_0_0_LEV_22 = -AVG_0_D00*inv_AVG_met_fact*inv_AVG_rho;

       AVG_0_0_LEV_30 = -0.353553390593274*((AVG_0_u0*AVG_0_u0) + (AVG_0_u1*AVG_0_u1) + (AVG_0_u2*AVG_0_u2) -
            (AVG_0_u0*AVG_0_u0)*gama - (AVG_0_u1*AVG_0_u1)*gama - (AVG_0_u2*AVG_0_u2)*gama +
            2*AVG_0_D00*AVG_0_a*AVG_0_u0*inv_AVG_met_fact +
            2*AVG_0_D01*AVG_0_a*AVG_0_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

       AVG_0_0_LEV_31 = 0.707106781186547*(-gama*AVG_0_u0 + AVG_0_D00*AVG_0_a*inv_AVG_met_fact +
            AVG_0_u0)*inv_AVG_a*inv_AVG_rho;

       AVG_0_0_LEV_32 = 0.707106781186547*(-gama*AVG_0_u1 + AVG_0_D01*AVG_0_a*inv_AVG_met_fact +
            AVG_0_u1)*inv_AVG_a*inv_AVG_rho;

      AVG_0_0_LEV_33 = -0.707106781186547*gamma_m1*AVG_0_u2*inv_AVG_a*inv_AVG_rho;

      AVG_0_0_LEV_34 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

       AVG_0_0_LEV_40 = 0.353553390593274*(-(AVG_0_u0*AVG_0_u0) - (AVG_0_u1*AVG_0_u1) - (AVG_0_u2*AVG_0_u2) +
            (AVG_0_u0*AVG_0_u0)*gama + (AVG_0_u1*AVG_0_u1)*gama + (AVG_0_u2*AVG_0_u2)*gama +
            2*AVG_0_D00*AVG_0_a*AVG_0_u0*inv_AVG_met_fact +
            2*AVG_0_D01*AVG_0_a*AVG_0_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

       AVG_0_0_LEV_41 = -0.707106781186547*(-AVG_0_u0 + gama*AVG_0_u0 +
            AVG_0_D00*AVG_0_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

       AVG_0_0_LEV_42 = -0.707106781186547*(-AVG_0_u1 + gama*AVG_0_u1 +
            AVG_0_D01*AVG_0_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

      AVG_0_0_LEV_43 = -0.707106781186547*gamma_m1*AVG_0_u2*inv_AVG_a*inv_AVG_rho;

      AVG_0_0_LEV_44 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

       alpha_01 = (-rho_B0(0,0,0) + rho_B0(1,0,0))*AVG_0_0_LEV_00 + (-rhoE_B0(0,0,0) + rhoE_B0(1,0,0))*AVG_0_0_LEV_04 +
            (-rhou0_B0(0,0,0) + rhou0_B0(1,0,0))*AVG_0_0_LEV_01 + (-rhou1_B0(0,0,0) + rhou1_B0(1,0,0))*AVG_0_0_LEV_02 +
            (-rhou2_B0(0,0,0) + rhou2_B0(1,0,0))*AVG_0_0_LEV_03;

       alpha_11 = (-rho_B0(0,0,0) + rho_B0(1,0,0))*AVG_0_0_LEV_10 + (-rhoE_B0(0,0,0) + rhoE_B0(1,0,0))*AVG_0_0_LEV_14 +
            (-rhou0_B0(0,0,0) + rhou0_B0(1,0,0))*AVG_0_0_LEV_11 + (-rhou1_B0(0,0,0) + rhou1_B0(1,0,0))*AVG_0_0_LEV_12 +
            (-rhou2_B0(0,0,0) + rhou2_B0(1,0,0))*AVG_0_0_LEV_13;

       alpha_21 = (-rho_B0(0,0,0) + rho_B0(1,0,0))*AVG_0_0_LEV_20 + (-rhou0_B0(0,0,0) + rhou0_B0(1,0,0))*AVG_0_0_LEV_21
            + (-rhou1_B0(0,0,0) + rhou1_B0(1,0,0))*AVG_0_0_LEV_22;

       alpha_31 = (-rho_B0(0,0,0) + rho_B0(1,0,0))*AVG_0_0_LEV_30 + (-rhoE_B0(0,0,0) + rhoE_B0(1,0,0))*AVG_0_0_LEV_34 +
            (-rhou0_B0(0,0,0) + rhou0_B0(1,0,0))*AVG_0_0_LEV_31 + (-rhou1_B0(0,0,0) + rhou1_B0(1,0,0))*AVG_0_0_LEV_32 +
            (-rhou2_B0(0,0,0) + rhou2_B0(1,0,0))*AVG_0_0_LEV_33;

       alpha_41 = (-rho_B0(0,0,0) + rho_B0(1,0,0))*AVG_0_0_LEV_40 + (-rhoE_B0(0,0,0) + rhoE_B0(1,0,0))*AVG_0_0_LEV_44 +
            (-rhou0_B0(0,0,0) + rhou0_B0(1,0,0))*AVG_0_0_LEV_41 + (-rhou1_B0(0,0,0) + rhou1_B0(1,0,0))*AVG_0_0_LEV_42 +
            (-rhou2_B0(0,0,0) + rhou2_B0(1,0,0))*AVG_0_0_LEV_43;

      ws_lambda_00 = (D00_B0(0,0,0)*AVG_0_u0 + D01_B0(0,0,0)*AVG_0_u1)*detJ_B0(0,0,0);

      ws_lambda_11 = (D00_B0(0,0,0)*AVG_0_u0 + D01_B0(0,0,0)*AVG_0_u1)*detJ_B0(0,0,0);

      ws_lambda_22 = (D00_B0(0,0,0)*AVG_0_u0 + D01_B0(0,0,0)*AVG_0_u1)*detJ_B0(0,0,0);

       ws_lambda_33 = sqrt((D00_B0(0,0,0)*D00_B0(0,0,0))*(detJ_B0(0,0,0)*detJ_B0(0,0,0)) +
            (D01_B0(0,0,0)*D01_B0(0,0,0))*(detJ_B0(0,0,0)*detJ_B0(0,0,0)))*AVG_0_a +
            D00_B0(0,0,0)*detJ_B0(0,0,0)*AVG_0_u0 + D01_B0(0,0,0)*detJ_B0(0,0,0)*AVG_0_u1;

       ws_lambda_44 = -sqrt((D00_B0(0,0,0)*D00_B0(0,0,0))*(detJ_B0(0,0,0)*detJ_B0(0,0,0)) +
            (D01_B0(0,0,0)*D01_B0(0,0,0))*(detJ_B0(0,0,0)*detJ_B0(0,0,0)))*AVG_0_a +
            D00_B0(0,0,0)*detJ_B0(0,0,0)*AVG_0_u0 + D01_B0(0,0,0)*detJ_B0(0,0,0)*AVG_0_u1;

      AVG_0_REV_00 = AVG_0_D00*inv_AVG_met_fact;

      AVG_0_REV_01 = AVG_0_D01*inv_AVG_met_fact;

      AVG_0_REV_03 = 0.707106781186547*AVG_0_rho*inv_AVG_a;

      AVG_0_REV_04 = 0.707106781186547*AVG_0_rho*inv_AVG_a;

      AVG_0_REV_10 = AVG_0_D00*AVG_0_u0*inv_AVG_met_fact;

      AVG_0_REV_11 = AVG_0_D01*AVG_0_u0*inv_AVG_met_fact;

      AVG_0_REV_12 = AVG_0_D01*AVG_0_rho*inv_AVG_met_fact;

      AVG_0_REV_13 = 0.707106781186547*(AVG_0_D00*AVG_0_a*inv_AVG_met_fact + AVG_0_u0)*AVG_0_rho*inv_AVG_a;

      AVG_0_REV_14 = 0.707106781186547*(-AVG_0_D00*AVG_0_a*inv_AVG_met_fact + AVG_0_u0)*AVG_0_rho*inv_AVG_a;

      AVG_0_REV_20 = AVG_0_D00*AVG_0_u1*inv_AVG_met_fact;

      AVG_0_REV_21 = AVG_0_D01*AVG_0_u1*inv_AVG_met_fact;

      AVG_0_REV_22 = -AVG_0_D00*AVG_0_rho*inv_AVG_met_fact;

      AVG_0_REV_23 = 0.707106781186547*(AVG_0_D01*AVG_0_a*inv_AVG_met_fact + AVG_0_u1)*AVG_0_rho*inv_AVG_a;

      AVG_0_REV_24 = 0.707106781186547*(-AVG_0_D01*AVG_0_a*inv_AVG_met_fact + AVG_0_u1)*AVG_0_rho*inv_AVG_a;

      AVG_0_REV_30 = AVG_0_D00*AVG_0_u2*inv_AVG_met_fact - AVG_0_D01*AVG_0_rho*inv_AVG_met_fact;

      AVG_0_REV_31 = AVG_0_D00*AVG_0_rho*inv_AVG_met_fact + AVG_0_D01*AVG_0_u2*inv_AVG_met_fact;

      AVG_0_REV_33 = 0.707106781186547*AVG_0_rho*AVG_0_u2*inv_AVG_a;

      AVG_0_REV_34 = 0.707106781186547*AVG_0_rho*AVG_0_u2*inv_AVG_a;

       AVG_0_REV_40 = ((1.0/2.0))*((AVG_0_u0*AVG_0_u0) + (AVG_0_u1*AVG_0_u1) +
            (AVG_0_u2*AVG_0_u2))*AVG_0_D00*inv_AVG_met_fact - AVG_0_D01*AVG_0_rho*AVG_0_u2*inv_AVG_met_fact;

       AVG_0_REV_41 = ((1.0/2.0))*((AVG_0_u0*AVG_0_u0) + (AVG_0_u1*AVG_0_u1) +
            (AVG_0_u2*AVG_0_u2))*AVG_0_D01*inv_AVG_met_fact + AVG_0_D00*AVG_0_rho*AVG_0_u2*inv_AVG_met_fact;

      AVG_0_REV_42 = (AVG_0_D01*AVG_0_u0*inv_AVG_met_fact - AVG_0_D00*AVG_0_u1*inv_AVG_met_fact)*AVG_0_rho;

       AVG_0_REV_43 = 0.707106781186547*(((AVG_0_a*AVG_0_a) + ((1.0/2.0))*((AVG_0_u0*AVG_0_u0) + (AVG_0_u1*AVG_0_u1) +
            (AVG_0_u2*AVG_0_u2))*gamma_m1)*invgamma_m1 + (AVG_0_D00*AVG_0_u0*inv_AVG_met_fact +
            AVG_0_D01*AVG_0_u1*inv_AVG_met_fact)*AVG_0_a)*AVG_0_rho*inv_AVG_a;

       AVG_0_REV_44 = 0.707106781186547*(((AVG_0_a*AVG_0_a) + ((1.0/2.0))*((AVG_0_u0*AVG_0_u0) + (AVG_0_u1*AVG_0_u1) +
            (AVG_0_u2*AVG_0_u2))*gamma_m1)*invgamma_m1 - (AVG_0_D00*AVG_0_u0*inv_AVG_met_fact +
            AVG_0_D01*AVG_0_u1*inv_AVG_met_fact)*AVG_0_a)*AVG_0_rho*inv_AVG_a;

      AVG_0_u0 = ((1.0/2.0))*(u0_B0(1,0,0) + u0_B0(2,0,0));

      AVG_0_a = ((1.0/2.0))*(a_B0(1,0,0) + a_B0(2,0,0));

      AVG_0_u2 = ((1.0/2.0))*(u2_B0(1,0,0) + u2_B0(2,0,0));

      AVG_0_rho = ((1.0/2.0))*(rho_B0(1,0,0) + rho_B0(2,0,0));

      AVG_0_u1 = ((1.0/2.0))*(u1_B0(1,0,0) + u1_B0(2,0,0));

      AVG_0_detJ = ((1.0/2.0))*(detJ_B0(0,0,0) + detJ_B0(1,0,0));

      AVG_0_D00 = ((1.0/2.0))*(D00_B0(0,0,0) + D00_B0(1,0,0));

      AVG_0_D01 = ((1.0/2.0))*(D01_B0(0,0,0) + D01_B0(1,0,0));

      inv_AVG_a = 1.0/(AVG_0_a);

      inv_AVG_rho = 1.0/(AVG_0_rho);

      inv_AVG_met_fact = pow((AVG_0_D00*AVG_0_D00) + (AVG_0_D01*AVG_0_D01), (-1.0/2.0));

       AVG_0_0_LEV_00 = -(1.0/2.0)*(-2*AVG_0_D00 - (AVG_0_u0*AVG_0_u0)*(inv_AVG_a*inv_AVG_a)*AVG_0_D00 -
            (AVG_0_u1*AVG_0_u1)*(inv_AVG_a*inv_AVG_a)*AVG_0_D00 - (AVG_0_u2*AVG_0_u2)*(inv_AVG_a*inv_AVG_a)*AVG_0_D00 -
            2*AVG_0_D01*AVG_0_u2*inv_AVG_rho + (AVG_0_u0*AVG_0_u0)*(inv_AVG_a*inv_AVG_a)*gama*AVG_0_D00 +
            (AVG_0_u1*AVG_0_u1)*(inv_AVG_a*inv_AVG_a)*gama*AVG_0_D00 +
            (AVG_0_u2*AVG_0_u2)*(inv_AVG_a*inv_AVG_a)*gama*AVG_0_D00)*inv_AVG_met_fact;

      AVG_0_0_LEV_01 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_D00*AVG_0_u0*inv_AVG_met_fact;

      AVG_0_0_LEV_02 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_D00*AVG_0_u1*inv_AVG_met_fact;

       AVG_0_0_LEV_03 = (-AVG_0_D01*inv_AVG_rho - (inv_AVG_a*inv_AVG_a)*AVG_0_D00*AVG_0_u2 +
            (inv_AVG_a*inv_AVG_a)*gama*AVG_0_D00*AVG_0_u2)*inv_AVG_met_fact;

      AVG_0_0_LEV_04 = -(inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_D00*inv_AVG_met_fact;

       AVG_0_0_LEV_10 = -(1.0/2.0)*(-2*AVG_0_D01 - (AVG_0_u0*AVG_0_u0)*(inv_AVG_a*inv_AVG_a)*AVG_0_D01 -
            (AVG_0_u1*AVG_0_u1)*(inv_AVG_a*inv_AVG_a)*AVG_0_D01 - (AVG_0_u2*AVG_0_u2)*(inv_AVG_a*inv_AVG_a)*AVG_0_D01 +
            2*AVG_0_D00*AVG_0_u2*inv_AVG_rho + (AVG_0_u0*AVG_0_u0)*(inv_AVG_a*inv_AVG_a)*gama*AVG_0_D01 +
            (AVG_0_u1*AVG_0_u1)*(inv_AVG_a*inv_AVG_a)*gama*AVG_0_D01 +
            (AVG_0_u2*AVG_0_u2)*(inv_AVG_a*inv_AVG_a)*gama*AVG_0_D01)*inv_AVG_met_fact;

      AVG_0_0_LEV_11 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_D01*AVG_0_u0*inv_AVG_met_fact;

      AVG_0_0_LEV_12 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_D01*AVG_0_u1*inv_AVG_met_fact;

       AVG_0_0_LEV_13 = (AVG_0_D00*inv_AVG_rho - (inv_AVG_a*inv_AVG_a)*AVG_0_D01*AVG_0_u2 +
            (inv_AVG_a*inv_AVG_a)*gama*AVG_0_D01*AVG_0_u2)*inv_AVG_met_fact;

      AVG_0_0_LEV_14 = -(inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_0_D01*inv_AVG_met_fact;

      AVG_0_0_LEV_20 = (AVG_0_D00*AVG_0_u1 - AVG_0_D01*AVG_0_u0)*inv_AVG_met_fact*inv_AVG_rho;

      AVG_0_0_LEV_21 = AVG_0_D01*inv_AVG_met_fact*inv_AVG_rho;

      AVG_0_0_LEV_22 = -AVG_0_D00*inv_AVG_met_fact*inv_AVG_rho;

       AVG_0_0_LEV_30 = -0.353553390593274*((AVG_0_u0*AVG_0_u0) + (AVG_0_u1*AVG_0_u1) + (AVG_0_u2*AVG_0_u2) -
            (AVG_0_u0*AVG_0_u0)*gama - (AVG_0_u1*AVG_0_u1)*gama - (AVG_0_u2*AVG_0_u2)*gama +
            2*AVG_0_D00*AVG_0_a*AVG_0_u0*inv_AVG_met_fact +
            2*AVG_0_D01*AVG_0_a*AVG_0_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

       AVG_0_0_LEV_31 = 0.707106781186547*(-gama*AVG_0_u0 + AVG_0_D00*AVG_0_a*inv_AVG_met_fact +
            AVG_0_u0)*inv_AVG_a*inv_AVG_rho;

       AVG_0_0_LEV_32 = 0.707106781186547*(-gama*AVG_0_u1 + AVG_0_D01*AVG_0_a*inv_AVG_met_fact +
            AVG_0_u1)*inv_AVG_a*inv_AVG_rho;

      AVG_0_0_LEV_33 = -0.707106781186547*gamma_m1*AVG_0_u2*inv_AVG_a*inv_AVG_rho;

      AVG_0_0_LEV_34 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

       AVG_0_0_LEV_40 = 0.353553390593274*(-(AVG_0_u0*AVG_0_u0) - (AVG_0_u1*AVG_0_u1) - (AVG_0_u2*AVG_0_u2) +
            (AVG_0_u0*AVG_0_u0)*gama + (AVG_0_u1*AVG_0_u1)*gama + (AVG_0_u2*AVG_0_u2)*gama +
            2*AVG_0_D00*AVG_0_a*AVG_0_u0*inv_AVG_met_fact +
            2*AVG_0_D01*AVG_0_a*AVG_0_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

       AVG_0_0_LEV_41 = -0.707106781186547*(-AVG_0_u0 + gama*AVG_0_u0 +
            AVG_0_D00*AVG_0_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

       AVG_0_0_LEV_42 = -0.707106781186547*(-AVG_0_u1 + gama*AVG_0_u1 +
            AVG_0_D01*AVG_0_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

      AVG_0_0_LEV_43 = -0.707106781186547*gamma_m1*AVG_0_u2*inv_AVG_a*inv_AVG_rho;

      AVG_0_0_LEV_44 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

       alpha_02 = (-rho_B0(1,0,0) + rho_B0(2,0,0))*AVG_0_0_LEV_00 + (-rhoE_B0(1,0,0) + rhoE_B0(2,0,0))*AVG_0_0_LEV_04 +
            (-rhou0_B0(1,0,0) + rhou0_B0(2,0,0))*AVG_0_0_LEV_01 + (-rhou1_B0(1,0,0) + rhou1_B0(2,0,0))*AVG_0_0_LEV_02 +
            (-rhou2_B0(1,0,0) + rhou2_B0(2,0,0))*AVG_0_0_LEV_03;

       alpha_12 = (-rho_B0(1,0,0) + rho_B0(2,0,0))*AVG_0_0_LEV_10 + (-rhoE_B0(1,0,0) + rhoE_B0(2,0,0))*AVG_0_0_LEV_14 +
            (-rhou0_B0(1,0,0) + rhou0_B0(2,0,0))*AVG_0_0_LEV_11 + (-rhou1_B0(1,0,0) + rhou1_B0(2,0,0))*AVG_0_0_LEV_12 +
            (-rhou2_B0(1,0,0) + rhou2_B0(2,0,0))*AVG_0_0_LEV_13;

       alpha_22 = (-rho_B0(1,0,0) + rho_B0(2,0,0))*AVG_0_0_LEV_20 + (-rhou0_B0(1,0,0) + rhou0_B0(2,0,0))*AVG_0_0_LEV_21
            + (-rhou1_B0(1,0,0) + rhou1_B0(2,0,0))*AVG_0_0_LEV_22;

       alpha_32 = (-rho_B0(1,0,0) + rho_B0(2,0,0))*AVG_0_0_LEV_30 + (-rhoE_B0(1,0,0) + rhoE_B0(2,0,0))*AVG_0_0_LEV_34 +
            (-rhou0_B0(1,0,0) + rhou0_B0(2,0,0))*AVG_0_0_LEV_31 + (-rhou1_B0(1,0,0) + rhou1_B0(2,0,0))*AVG_0_0_LEV_32 +
            (-rhou2_B0(1,0,0) + rhou2_B0(2,0,0))*AVG_0_0_LEV_33;

       alpha_42 = (-rho_B0(1,0,0) + rho_B0(2,0,0))*AVG_0_0_LEV_40 + (-rhoE_B0(1,0,0) + rhoE_B0(2,0,0))*AVG_0_0_LEV_44 +
            (-rhou0_B0(1,0,0) + rhou0_B0(2,0,0))*AVG_0_0_LEV_41 + (-rhou1_B0(1,0,0) + rhou1_B0(2,0,0))*AVG_0_0_LEV_42 +
            (-rhou2_B0(1,0,0) + rhou2_B0(2,0,0))*AVG_0_0_LEV_43;

       sigma_0_0 = ((fabs(ws_lambda_00) >= delta_TVD) ? (
   fabs(ws_lambda_00)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_00*ws_lambda_00))*invdelta_TVD
));

       sigma_0_1 = ((fabs(ws_lambda_11) >= delta_TVD) ? (
   fabs(ws_lambda_11)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_11*ws_lambda_11))*invdelta_TVD
));

       sigma_0_2 = ((fabs(ws_lambda_22) >= delta_TVD) ? (
   fabs(ws_lambda_22)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_22*ws_lambda_22))*invdelta_TVD
));

       sigma_0_3 = ((fabs(ws_lambda_33) >= delta_TVD) ? (
   fabs(ws_lambda_33)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_33*ws_lambda_33))*invdelta_TVD
));

       sigma_0_4 = ((fabs(ws_lambda_44) >= delta_TVD) ? (
   fabs(ws_lambda_44)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_44*ws_lambda_44))*invdelta_TVD
));

      S = (alpha_01 > 0) ? 1 : ((alpha_01 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_00, 2*fabs(alpha_01)));

      t2 = fmin(fabs(alpha_01), 2*S*alpha_00);

      g_00 = S*fmax(t1, t2);

      S = (alpha_11 > 0) ? 1 : ((alpha_11 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_10, 2*fabs(alpha_11)));

      t2 = fmin(fabs(alpha_11), 2*S*alpha_10);

      g_10 = S*fmax(t1, t2);

      S = (alpha_21 > 0) ? 1 : ((alpha_21 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_20, 2*fabs(alpha_21)));

      t2 = fmin(fabs(alpha_21), 2*S*alpha_20);

      g_20 = S*fmax(t1, t2);

      S = (alpha_31 > 0) ? 1 : ((alpha_31 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_30, 2*fabs(alpha_31)));

      t2 = fmin(fabs(alpha_31), 2*S*alpha_30);

      g_30 = S*fmax(t1, t2);

      S = (alpha_41 > 0) ? 1 : ((alpha_41 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_40, 2*fabs(alpha_41)));

      t2 = fmin(fabs(alpha_41), 2*S*alpha_40);

      g_40 = S*fmax(t1, t2);

      S = (alpha_02 > 0) ? 1 : ((alpha_02 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_01, 2*fabs(alpha_02)));

      t2 = fmin(fabs(alpha_02), 2*S*alpha_01);

      g_01 = S*fmax(t1, t2);

      S = (alpha_12 > 0) ? 1 : ((alpha_12 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_11, 2*fabs(alpha_12)));

      t2 = fmin(fabs(alpha_12), 2*S*alpha_11);

      g_11 = S*fmax(t1, t2);

      S = (alpha_22 > 0) ? 1 : ((alpha_22 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_21, 2*fabs(alpha_22)));

      t2 = fmin(fabs(alpha_22), 2*S*alpha_21);

      g_21 = S*fmax(t1, t2);

      S = (alpha_32 > 0) ? 1 : ((alpha_32 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_31, 2*fabs(alpha_32)));

      t2 = fmin(fabs(alpha_32), 2*S*alpha_31);

      g_31 = S*fmax(t1, t2);

      S = (alpha_42 > 0) ? 1 : ((alpha_42 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_41, 2*fabs(alpha_42)));

      t2 = fmin(fabs(alpha_42), 2*S*alpha_41);

      g_41 = S*fmax(t1, t2);

       gamma_0 = ((alpha_01 == 0) ? (
   0
)
: (
   (-g_00 + g_01)*alpha_01*sigma_0_0/((alpha_01*alpha_01) +
            eps_TVD)
));

       gamma_1 = ((alpha_11 == 0) ? (
   0
)
: (
   (-g_10 + g_11)*alpha_11*sigma_0_1/((alpha_11*alpha_11) +
            eps_TVD)
));

       gamma_2 = ((alpha_21 == 0) ? (
   0
)
: (
   (-g_20 + g_21)*alpha_21*sigma_0_2/((alpha_21*alpha_21) +
            eps_TVD)
));

       gamma_3 = ((alpha_31 == 0) ? (
   0
)
: (
   (-g_30 + g_31)*alpha_31*sigma_0_3/((alpha_31*alpha_31) +
            eps_TVD)
));

       gamma_4 = ((alpha_41 == 0) ? (
   0
)
: (
   (-g_40 + g_41)*alpha_41*sigma_0_4/((alpha_41*alpha_41) +
            eps_TVD)
));

       sigma_1_0 = ((fabs(gamma_0) >= delta_TVD) ? (
   fabs(gamma_0)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (gamma_0*gamma_0))*invdelta_TVD
));

       sigma_1_1 = ((fabs(gamma_1) >= delta_TVD) ? (
   fabs(gamma_1)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (gamma_1*gamma_1))*invdelta_TVD
));

       sigma_1_2 = ((fabs(gamma_2) >= delta_TVD) ? (
   fabs(gamma_2)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (gamma_2*gamma_2))*invdelta_TVD
));

       sigma_1_3 = ((fabs(gamma_3) >= delta_TVD) ? (
   fabs(gamma_3)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (gamma_3*gamma_3))*invdelta_TVD
));

       sigma_1_4 = ((fabs(gamma_4) >= delta_TVD) ? (
   fabs(gamma_4)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (gamma_4*gamma_4))*invdelta_TVD
));

      phi_0 = -fabs(sigma_0_0 + sigma_1_0)*alpha_01 + 0.5*(g_00 + g_01)*sigma_0_0;

      phi_1 = -fabs(sigma_0_1 + sigma_1_1)*alpha_11 + 0.5*(g_10 + g_11)*sigma_0_1;

      phi_2 = -fabs(sigma_0_2 + sigma_1_2)*alpha_21 + 0.5*(g_20 + g_21)*sigma_0_2;

      phi_3 = -fabs(sigma_0_3 + sigma_1_3)*alpha_31 + 0.5*(g_30 + g_31)*sigma_0_3;

      phi_4 = -fabs(sigma_0_4 + sigma_1_4)*alpha_41 + 0.5*(g_40 + g_41)*sigma_0_4;

      t1 = -fabs(alpha_00) + fabs(alpha_01);

      t2 = fabs(alpha_00) + fabs(alpha_01) + eps_TVD;

      theta_hat_00 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_10) + fabs(alpha_11);

      t2 = fabs(alpha_10) + fabs(alpha_11) + eps_TVD;

      theta_hat_10 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_20) + fabs(alpha_21);

      t2 = fabs(alpha_20) + fabs(alpha_21) + eps_TVD;

      theta_hat_20 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_30) + fabs(alpha_31);

      t2 = fabs(alpha_30) + fabs(alpha_31) + eps_TVD;

      theta_hat_30 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_40) + fabs(alpha_41);

      t2 = fabs(alpha_40) + fabs(alpha_41) + eps_TVD;

      theta_hat_40 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_01) + fabs(alpha_02);

      t2 = fabs(alpha_01) + fabs(alpha_02) + eps_TVD;

      theta_hat_01 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_11) + fabs(alpha_12);

      t2 = fabs(alpha_11) + fabs(alpha_12) + eps_TVD;

      theta_hat_11 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_21) + fabs(alpha_22);

      t2 = fabs(alpha_21) + fabs(alpha_22) + eps_TVD;

      theta_hat_21 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_31) + fabs(alpha_32);

      t2 = fabs(alpha_31) + fabs(alpha_32) + eps_TVD;

      theta_hat_31 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_41) + fabs(alpha_42);

      t2 = fabs(alpha_41) + fabs(alpha_42) + eps_TVD;

      theta_hat_41 = (fabs(t1/t2)*fabs(t1/t2));

      theta_0 = fmax(theta_hat_00, theta_hat_01);

      theta_1 = fmax(theta_hat_10, theta_hat_11);

      theta_2 = fmax(theta_hat_20, theta_hat_21);

      theta_3 = fmax(theta_hat_30, theta_hat_31);

      theta_4 = fmax(theta_hat_40, theta_hat_41);

      phi_star_0 = kappa_TVD*phi_0*theta_0;

      phi_star_1 = kappa_TVD*phi_1*theta_1;

      phi_star_2 = kappa_TVD*phi_2*theta_2;

      phi_star_3 = kappa_TVD*phi_3*theta_3;

      phi_star_4 = kappa_TVD*phi_4*theta_4;

       wk0_B0(0,0,0) = 0.5*(AVG_0_REV_00*phi_star_0 + AVG_0_REV_01*phi_star_1 + AVG_0_REV_03*phi_star_3 +
            AVG_0_REV_04*phi_star_4);

       wk1_B0(0,0,0) = 0.5*(AVG_0_REV_10*phi_star_0 + AVG_0_REV_11*phi_star_1 + AVG_0_REV_12*phi_star_2 +
            AVG_0_REV_13*phi_star_3 + AVG_0_REV_14*phi_star_4);

       wk2_B0(0,0,0) = 0.5*(AVG_0_REV_20*phi_star_0 + AVG_0_REV_21*phi_star_1 + AVG_0_REV_22*phi_star_2 +
            AVG_0_REV_23*phi_star_3 + AVG_0_REV_24*phi_star_4);

       wk3_B0(0,0,0) = 0.5*(AVG_0_REV_30*phi_star_0 + AVG_0_REV_31*phi_star_1 + AVG_0_REV_33*phi_star_3 +
            AVG_0_REV_34*phi_star_4);

       wk4_B0(0,0,0) = 0.5*(AVG_0_REV_40*phi_star_0 + AVG_0_REV_41*phi_star_1 + AVG_0_REV_42*phi_star_2 +
            AVG_0_REV_43*phi_star_3 + AVG_0_REV_44*phi_star_4);

   }

   else{

      wk0_B0(0,0,0) = 0.0;

      wk1_B0(0,0,0) = 0.0;

      wk2_B0(0,0,0) = 0.0;

      wk3_B0(0,0,0) = 0.0;

      wk4_B0(0,0,0) = 0.0;

   }

}

 void opensbliblock00Kernel065(const ACC<double> &D10_B0, const ACC<double> &D11_B0, const ACC<double> &a_B0, const
ACC<double> &detJ_B0, const ACC<double> &kappa_B0, const ACC<double> &rhoE_B0, const ACC<double> &rho_B0, const
ACC<double> &rhou0_B0, const ACC<double> &rhou1_B0, const ACC<double> &rhou2_B0, const ACC<double> &u0_B0, const
ACC<double> &u1_B0, const ACC<double> &u2_B0, ACC<double> &Residual0_B0, ACC<double> &Residual1_B0, ACC<double>
&Residual2_B0, ACC<double> &Residual3_B0, ACC<double> &Residual4_B0)
{
   double AVG_1_1_LEV_00 = 0.0;
   double AVG_1_1_LEV_01 = 0.0;
   double AVG_1_1_LEV_02 = 0.0;
   double AVG_1_1_LEV_03 = 0.0;
   double AVG_1_1_LEV_04 = 0.0;
   double AVG_1_1_LEV_10 = 0.0;
   double AVG_1_1_LEV_11 = 0.0;
   double AVG_1_1_LEV_12 = 0.0;
   double AVG_1_1_LEV_13 = 0.0;
   double AVG_1_1_LEV_14 = 0.0;
   double AVG_1_1_LEV_20 = 0.0;
   double AVG_1_1_LEV_21 = 0.0;
   double AVG_1_1_LEV_22 = 0.0;
   double AVG_1_1_LEV_30 = 0.0;
   double AVG_1_1_LEV_31 = 0.0;
   double AVG_1_1_LEV_32 = 0.0;
   double AVG_1_1_LEV_33 = 0.0;
   double AVG_1_1_LEV_34 = 0.0;
   double AVG_1_1_LEV_40 = 0.0;
   double AVG_1_1_LEV_41 = 0.0;
   double AVG_1_1_LEV_42 = 0.0;
   double AVG_1_1_LEV_43 = 0.0;
   double AVG_1_1_LEV_44 = 0.0;
   double AVG_1_D10 = 0.0;
   double AVG_1_D11 = 0.0;
   double AVG_1_REV_00 = 0.0;
   double AVG_1_REV_01 = 0.0;
   double AVG_1_REV_03 = 0.0;
   double AVG_1_REV_04 = 0.0;
   double AVG_1_REV_10 = 0.0;
   double AVG_1_REV_11 = 0.0;
   double AVG_1_REV_12 = 0.0;
   double AVG_1_REV_13 = 0.0;
   double AVG_1_REV_14 = 0.0;
   double AVG_1_REV_20 = 0.0;
   double AVG_1_REV_21 = 0.0;
   double AVG_1_REV_22 = 0.0;
   double AVG_1_REV_23 = 0.0;
   double AVG_1_REV_24 = 0.0;
   double AVG_1_REV_30 = 0.0;
   double AVG_1_REV_31 = 0.0;
   double AVG_1_REV_33 = 0.0;
   double AVG_1_REV_34 = 0.0;
   double AVG_1_REV_40 = 0.0;
   double AVG_1_REV_41 = 0.0;
   double AVG_1_REV_42 = 0.0;
   double AVG_1_REV_43 = 0.0;
   double AVG_1_REV_44 = 0.0;
   double AVG_1_a = 0.0;
   double AVG_1_detJ = 0.0;
   double AVG_1_rho = 0.0;
   double AVG_1_u0 = 0.0;
   double AVG_1_u1 = 0.0;
   double AVG_1_u2 = 0.0;
   double S = 0.0;
   double alpha_00 = 0.0;
   double alpha_01 = 0.0;
   double alpha_02 = 0.0;
   double alpha_10 = 0.0;
   double alpha_11 = 0.0;
   double alpha_12 = 0.0;
   double alpha_20 = 0.0;
   double alpha_21 = 0.0;
   double alpha_22 = 0.0;
   double alpha_30 = 0.0;
   double alpha_31 = 0.0;
   double alpha_32 = 0.0;
   double alpha_40 = 0.0;
   double alpha_41 = 0.0;
   double alpha_42 = 0.0;
   double g_00 = 0.0;
   double g_01 = 0.0;
   double g_10 = 0.0;
   double g_11 = 0.0;
   double g_20 = 0.0;
   double g_21 = 0.0;
   double g_30 = 0.0;
   double g_31 = 0.0;
   double g_40 = 0.0;
   double g_41 = 0.0;
   double gamma_0 = 0.0;
   double gamma_1 = 0.0;
   double gamma_2 = 0.0;
   double gamma_3 = 0.0;
   double gamma_4 = 0.0;
   double inv_AVG_a = 0.0;
   double inv_AVG_met_fact = 0.0;
   double inv_AVG_rho = 0.0;
   double phi_0 = 0.0;
   double phi_1 = 0.0;
   double phi_2 = 0.0;
   double phi_3 = 0.0;
   double phi_4 = 0.0;
   double phi_star_0 = 0.0;
   double phi_star_1 = 0.0;
   double phi_star_2 = 0.0;
   double phi_star_3 = 0.0;
   double phi_star_4 = 0.0;
   double sigma_0_0 = 0.0;
   double sigma_0_1 = 0.0;
   double sigma_0_2 = 0.0;
   double sigma_0_3 = 0.0;
   double sigma_0_4 = 0.0;
   double sigma_1_0 = 0.0;
   double sigma_1_1 = 0.0;
   double sigma_1_2 = 0.0;
   double sigma_1_3 = 0.0;
   double sigma_1_4 = 0.0;
   double t1 = 0.0;
   double t2 = 0.0;
   double theta_0 = 0.0;
   double theta_1 = 0.0;
   double theta_2 = 0.0;
   double theta_3 = 0.0;
   double theta_4 = 0.0;
   double theta_hat_00 = 0.0;
   double theta_hat_01 = 0.0;
   double theta_hat_10 = 0.0;
   double theta_hat_11 = 0.0;
   double theta_hat_20 = 0.0;
   double theta_hat_21 = 0.0;
   double theta_hat_30 = 0.0;
   double theta_hat_31 = 0.0;
   double theta_hat_40 = 0.0;
   double theta_hat_41 = 0.0;
   double ws_lambda_00 = 0.0;
   double ws_lambda_11 = 0.0;
   double ws_lambda_22 = 0.0;
   double ws_lambda_33 = 0.0;
   double ws_lambda_44 = 0.0;
    if (fmax(kappa_B0(0,1,0), fmax(kappa_B0(0,-2,0), fmax(kappa_B0(0,-3,0), fmax(kappa_B0(0,2,0), fmax(kappa_B0(0,-1,0),
      kappa_B0(0,0,0)))))) > Ducros_check){

      AVG_1_u0 = ((1.0/2.0))*(u0_B0(0,0,0) + u0_B0(0,-1,0));

      AVG_1_a = ((1.0/2.0))*(a_B0(0,0,0) + a_B0(0,-1,0));

      AVG_1_u2 = ((1.0/2.0))*(u2_B0(0,0,0) + u2_B0(0,-1,0));

      AVG_1_rho = ((1.0/2.0))*(rho_B0(0,0,0) + rho_B0(0,-1,0));

      AVG_1_u1 = ((1.0/2.0))*(u1_B0(0,0,0) + u1_B0(0,-1,0));

      AVG_1_D10 = ((1.0/2.0))*(D10_B0(0,0,0) + D10_B0(0,1,0));

      AVG_1_detJ = ((1.0/2.0))*(detJ_B0(0,0,0) + detJ_B0(0,1,0));

      AVG_1_D11 = ((1.0/2.0))*(D11_B0(0,0,0) + D11_B0(0,1,0));

      inv_AVG_a = 1.0/(AVG_1_a);

      inv_AVG_rho = 1.0/(AVG_1_rho);

      inv_AVG_met_fact = pow((AVG_1_D10*AVG_1_D10) + (AVG_1_D11*AVG_1_D11), (-1.0/2.0));

       AVG_1_1_LEV_00 = -(1.0/2.0)*(-2*AVG_1_D10 - (AVG_1_u0*AVG_1_u0)*(inv_AVG_a*inv_AVG_a)*AVG_1_D10 -
            (AVG_1_u1*AVG_1_u1)*(inv_AVG_a*inv_AVG_a)*AVG_1_D10 - (AVG_1_u2*AVG_1_u2)*(inv_AVG_a*inv_AVG_a)*AVG_1_D10 -
            2*AVG_1_D11*AVG_1_u2*inv_AVG_rho + (AVG_1_u0*AVG_1_u0)*(inv_AVG_a*inv_AVG_a)*gama*AVG_1_D10 +
            (AVG_1_u1*AVG_1_u1)*(inv_AVG_a*inv_AVG_a)*gama*AVG_1_D10 +
            (AVG_1_u2*AVG_1_u2)*(inv_AVG_a*inv_AVG_a)*gama*AVG_1_D10)*inv_AVG_met_fact;

      AVG_1_1_LEV_01 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_D10*AVG_1_u0*inv_AVG_met_fact;

      AVG_1_1_LEV_02 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_D10*AVG_1_u1*inv_AVG_met_fact;

       AVG_1_1_LEV_03 = (-AVG_1_D11*inv_AVG_rho - (inv_AVG_a*inv_AVG_a)*AVG_1_D10*AVG_1_u2 +
            (inv_AVG_a*inv_AVG_a)*gama*AVG_1_D10*AVG_1_u2)*inv_AVG_met_fact;

      AVG_1_1_LEV_04 = -(inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_D10*inv_AVG_met_fact;

       AVG_1_1_LEV_10 = -(1.0/2.0)*(-2*AVG_1_D11 - (AVG_1_u0*AVG_1_u0)*(inv_AVG_a*inv_AVG_a)*AVG_1_D11 -
            (AVG_1_u1*AVG_1_u1)*(inv_AVG_a*inv_AVG_a)*AVG_1_D11 - (AVG_1_u2*AVG_1_u2)*(inv_AVG_a*inv_AVG_a)*AVG_1_D11 +
            2*AVG_1_D10*AVG_1_u2*inv_AVG_rho + (AVG_1_u0*AVG_1_u0)*(inv_AVG_a*inv_AVG_a)*gama*AVG_1_D11 +
            (AVG_1_u1*AVG_1_u1)*(inv_AVG_a*inv_AVG_a)*gama*AVG_1_D11 +
            (AVG_1_u2*AVG_1_u2)*(inv_AVG_a*inv_AVG_a)*gama*AVG_1_D11)*inv_AVG_met_fact;

      AVG_1_1_LEV_11 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_D11*AVG_1_u0*inv_AVG_met_fact;

      AVG_1_1_LEV_12 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_D11*AVG_1_u1*inv_AVG_met_fact;

       AVG_1_1_LEV_13 = (AVG_1_D10*inv_AVG_rho - (inv_AVG_a*inv_AVG_a)*AVG_1_D11*AVG_1_u2 +
            (inv_AVG_a*inv_AVG_a)*gama*AVG_1_D11*AVG_1_u2)*inv_AVG_met_fact;

      AVG_1_1_LEV_14 = -(inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_D11*inv_AVG_met_fact;

      AVG_1_1_LEV_20 = (AVG_1_D10*AVG_1_u1 - AVG_1_D11*AVG_1_u0)*inv_AVG_met_fact*inv_AVG_rho;

      AVG_1_1_LEV_21 = AVG_1_D11*inv_AVG_met_fact*inv_AVG_rho;

      AVG_1_1_LEV_22 = -AVG_1_D10*inv_AVG_met_fact*inv_AVG_rho;

       AVG_1_1_LEV_30 = -0.353553390593274*((AVG_1_u0*AVG_1_u0) + (AVG_1_u1*AVG_1_u1) + (AVG_1_u2*AVG_1_u2) -
            (AVG_1_u0*AVG_1_u0)*gama - (AVG_1_u1*AVG_1_u1)*gama - (AVG_1_u2*AVG_1_u2)*gama +
            2*AVG_1_D10*AVG_1_a*AVG_1_u0*inv_AVG_met_fact +
            2*AVG_1_D11*AVG_1_a*AVG_1_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

       AVG_1_1_LEV_31 = 0.707106781186547*(-gama*AVG_1_u0 + AVG_1_D10*AVG_1_a*inv_AVG_met_fact +
            AVG_1_u0)*inv_AVG_a*inv_AVG_rho;

       AVG_1_1_LEV_32 = 0.707106781186547*(-gama*AVG_1_u1 + AVG_1_D11*AVG_1_a*inv_AVG_met_fact +
            AVG_1_u1)*inv_AVG_a*inv_AVG_rho;

      AVG_1_1_LEV_33 = -0.707106781186547*gamma_m1*AVG_1_u2*inv_AVG_a*inv_AVG_rho;

      AVG_1_1_LEV_34 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

       AVG_1_1_LEV_40 = 0.353553390593274*(-(AVG_1_u0*AVG_1_u0) - (AVG_1_u1*AVG_1_u1) - (AVG_1_u2*AVG_1_u2) +
            (AVG_1_u0*AVG_1_u0)*gama + (AVG_1_u1*AVG_1_u1)*gama + (AVG_1_u2*AVG_1_u2)*gama +
            2*AVG_1_D10*AVG_1_a*AVG_1_u0*inv_AVG_met_fact +
            2*AVG_1_D11*AVG_1_a*AVG_1_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

       AVG_1_1_LEV_41 = -0.707106781186547*(-AVG_1_u0 + gama*AVG_1_u0 +
            AVG_1_D10*AVG_1_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

       AVG_1_1_LEV_42 = -0.707106781186547*(-AVG_1_u1 + gama*AVG_1_u1 +
            AVG_1_D11*AVG_1_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

      AVG_1_1_LEV_43 = -0.707106781186547*gamma_m1*AVG_1_u2*inv_AVG_a*inv_AVG_rho;

      AVG_1_1_LEV_44 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

       alpha_00 = (-rho_B0(0,-1,0) + rho_B0(0,0,0))*AVG_1_1_LEV_00 + (-rhoE_B0(0,-1,0) + rhoE_B0(0,0,0))*AVG_1_1_LEV_04
            + (-rhou0_B0(0,-1,0) + rhou0_B0(0,0,0))*AVG_1_1_LEV_01 + (-rhou1_B0(0,-1,0) +
            rhou1_B0(0,0,0))*AVG_1_1_LEV_02 + (-rhou2_B0(0,-1,0) + rhou2_B0(0,0,0))*AVG_1_1_LEV_03;

       alpha_10 = (-rho_B0(0,-1,0) + rho_B0(0,0,0))*AVG_1_1_LEV_10 + (-rhoE_B0(0,-1,0) + rhoE_B0(0,0,0))*AVG_1_1_LEV_14
            + (-rhou0_B0(0,-1,0) + rhou0_B0(0,0,0))*AVG_1_1_LEV_11 + (-rhou1_B0(0,-1,0) +
            rhou1_B0(0,0,0))*AVG_1_1_LEV_12 + (-rhou2_B0(0,-1,0) + rhou2_B0(0,0,0))*AVG_1_1_LEV_13;

       alpha_20 = (-rho_B0(0,-1,0) + rho_B0(0,0,0))*AVG_1_1_LEV_20 + (-rhou0_B0(0,-1,0) +
            rhou0_B0(0,0,0))*AVG_1_1_LEV_21 + (-rhou1_B0(0,-1,0) + rhou1_B0(0,0,0))*AVG_1_1_LEV_22;

       alpha_30 = (-rho_B0(0,-1,0) + rho_B0(0,0,0))*AVG_1_1_LEV_30 + (-rhoE_B0(0,-1,0) + rhoE_B0(0,0,0))*AVG_1_1_LEV_34
            + (-rhou0_B0(0,-1,0) + rhou0_B0(0,0,0))*AVG_1_1_LEV_31 + (-rhou1_B0(0,-1,0) +
            rhou1_B0(0,0,0))*AVG_1_1_LEV_32 + (-rhou2_B0(0,-1,0) + rhou2_B0(0,0,0))*AVG_1_1_LEV_33;

       alpha_40 = (-rho_B0(0,-1,0) + rho_B0(0,0,0))*AVG_1_1_LEV_40 + (-rhoE_B0(0,-1,0) + rhoE_B0(0,0,0))*AVG_1_1_LEV_44
            + (-rhou0_B0(0,-1,0) + rhou0_B0(0,0,0))*AVG_1_1_LEV_41 + (-rhou1_B0(0,-1,0) +
            rhou1_B0(0,0,0))*AVG_1_1_LEV_42 + (-rhou2_B0(0,-1,0) + rhou2_B0(0,0,0))*AVG_1_1_LEV_43;

      AVG_1_u0 = ((1.0/2.0))*(u0_B0(0,0,0) + u0_B0(0,1,0));

      AVG_1_a = ((1.0/2.0))*(a_B0(0,0,0) + a_B0(0,1,0));

      AVG_1_u2 = ((1.0/2.0))*(u2_B0(0,0,0) + u2_B0(0,1,0));

      AVG_1_rho = ((1.0/2.0))*(rho_B0(0,0,0) + rho_B0(0,1,0));

      AVG_1_u1 = ((1.0/2.0))*(u1_B0(0,0,0) + u1_B0(0,1,0));

      AVG_1_D10 = ((1.0/2.0))*(D10_B0(0,0,0) + D10_B0(0,1,0));

      AVG_1_detJ = ((1.0/2.0))*(detJ_B0(0,0,0) + detJ_B0(0,1,0));

      AVG_1_D11 = ((1.0/2.0))*(D11_B0(0,0,0) + D11_B0(0,1,0));

      inv_AVG_a = 1.0/(AVG_1_a);

      inv_AVG_rho = 1.0/(AVG_1_rho);

      inv_AVG_met_fact = pow((AVG_1_D10*AVG_1_D10) + (AVG_1_D11*AVG_1_D11), (-1.0/2.0));

       AVG_1_1_LEV_00 = -(1.0/2.0)*(-2*AVG_1_D10 - (AVG_1_u0*AVG_1_u0)*(inv_AVG_a*inv_AVG_a)*AVG_1_D10 -
            (AVG_1_u1*AVG_1_u1)*(inv_AVG_a*inv_AVG_a)*AVG_1_D10 - (AVG_1_u2*AVG_1_u2)*(inv_AVG_a*inv_AVG_a)*AVG_1_D10 -
            2*AVG_1_D11*AVG_1_u2*inv_AVG_rho + (AVG_1_u0*AVG_1_u0)*(inv_AVG_a*inv_AVG_a)*gama*AVG_1_D10 +
            (AVG_1_u1*AVG_1_u1)*(inv_AVG_a*inv_AVG_a)*gama*AVG_1_D10 +
            (AVG_1_u2*AVG_1_u2)*(inv_AVG_a*inv_AVG_a)*gama*AVG_1_D10)*inv_AVG_met_fact;

      AVG_1_1_LEV_01 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_D10*AVG_1_u0*inv_AVG_met_fact;

      AVG_1_1_LEV_02 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_D10*AVG_1_u1*inv_AVG_met_fact;

       AVG_1_1_LEV_03 = (-AVG_1_D11*inv_AVG_rho - (inv_AVG_a*inv_AVG_a)*AVG_1_D10*AVG_1_u2 +
            (inv_AVG_a*inv_AVG_a)*gama*AVG_1_D10*AVG_1_u2)*inv_AVG_met_fact;

      AVG_1_1_LEV_04 = -(inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_D10*inv_AVG_met_fact;

       AVG_1_1_LEV_10 = -(1.0/2.0)*(-2*AVG_1_D11 - (AVG_1_u0*AVG_1_u0)*(inv_AVG_a*inv_AVG_a)*AVG_1_D11 -
            (AVG_1_u1*AVG_1_u1)*(inv_AVG_a*inv_AVG_a)*AVG_1_D11 - (AVG_1_u2*AVG_1_u2)*(inv_AVG_a*inv_AVG_a)*AVG_1_D11 +
            2*AVG_1_D10*AVG_1_u2*inv_AVG_rho + (AVG_1_u0*AVG_1_u0)*(inv_AVG_a*inv_AVG_a)*gama*AVG_1_D11 +
            (AVG_1_u1*AVG_1_u1)*(inv_AVG_a*inv_AVG_a)*gama*AVG_1_D11 +
            (AVG_1_u2*AVG_1_u2)*(inv_AVG_a*inv_AVG_a)*gama*AVG_1_D11)*inv_AVG_met_fact;

      AVG_1_1_LEV_11 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_D11*AVG_1_u0*inv_AVG_met_fact;

      AVG_1_1_LEV_12 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_D11*AVG_1_u1*inv_AVG_met_fact;

       AVG_1_1_LEV_13 = (AVG_1_D10*inv_AVG_rho - (inv_AVG_a*inv_AVG_a)*AVG_1_D11*AVG_1_u2 +
            (inv_AVG_a*inv_AVG_a)*gama*AVG_1_D11*AVG_1_u2)*inv_AVG_met_fact;

      AVG_1_1_LEV_14 = -(inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_D11*inv_AVG_met_fact;

      AVG_1_1_LEV_20 = (AVG_1_D10*AVG_1_u1 - AVG_1_D11*AVG_1_u0)*inv_AVG_met_fact*inv_AVG_rho;

      AVG_1_1_LEV_21 = AVG_1_D11*inv_AVG_met_fact*inv_AVG_rho;

      AVG_1_1_LEV_22 = -AVG_1_D10*inv_AVG_met_fact*inv_AVG_rho;

       AVG_1_1_LEV_30 = -0.353553390593274*((AVG_1_u0*AVG_1_u0) + (AVG_1_u1*AVG_1_u1) + (AVG_1_u2*AVG_1_u2) -
            (AVG_1_u0*AVG_1_u0)*gama - (AVG_1_u1*AVG_1_u1)*gama - (AVG_1_u2*AVG_1_u2)*gama +
            2*AVG_1_D10*AVG_1_a*AVG_1_u0*inv_AVG_met_fact +
            2*AVG_1_D11*AVG_1_a*AVG_1_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

       AVG_1_1_LEV_31 = 0.707106781186547*(-gama*AVG_1_u0 + AVG_1_D10*AVG_1_a*inv_AVG_met_fact +
            AVG_1_u0)*inv_AVG_a*inv_AVG_rho;

       AVG_1_1_LEV_32 = 0.707106781186547*(-gama*AVG_1_u1 + AVG_1_D11*AVG_1_a*inv_AVG_met_fact +
            AVG_1_u1)*inv_AVG_a*inv_AVG_rho;

      AVG_1_1_LEV_33 = -0.707106781186547*gamma_m1*AVG_1_u2*inv_AVG_a*inv_AVG_rho;

      AVG_1_1_LEV_34 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

       AVG_1_1_LEV_40 = 0.353553390593274*(-(AVG_1_u0*AVG_1_u0) - (AVG_1_u1*AVG_1_u1) - (AVG_1_u2*AVG_1_u2) +
            (AVG_1_u0*AVG_1_u0)*gama + (AVG_1_u1*AVG_1_u1)*gama + (AVG_1_u2*AVG_1_u2)*gama +
            2*AVG_1_D10*AVG_1_a*AVG_1_u0*inv_AVG_met_fact +
            2*AVG_1_D11*AVG_1_a*AVG_1_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

       AVG_1_1_LEV_41 = -0.707106781186547*(-AVG_1_u0 + gama*AVG_1_u0 +
            AVG_1_D10*AVG_1_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

       AVG_1_1_LEV_42 = -0.707106781186547*(-AVG_1_u1 + gama*AVG_1_u1 +
            AVG_1_D11*AVG_1_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

      AVG_1_1_LEV_43 = -0.707106781186547*gamma_m1*AVG_1_u2*inv_AVG_a*inv_AVG_rho;

      AVG_1_1_LEV_44 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

       alpha_01 = (-rho_B0(0,0,0) + rho_B0(0,1,0))*AVG_1_1_LEV_00 + (-rhoE_B0(0,0,0) + rhoE_B0(0,1,0))*AVG_1_1_LEV_04 +
            (-rhou0_B0(0,0,0) + rhou0_B0(0,1,0))*AVG_1_1_LEV_01 + (-rhou1_B0(0,0,0) + rhou1_B0(0,1,0))*AVG_1_1_LEV_02 +
            (-rhou2_B0(0,0,0) + rhou2_B0(0,1,0))*AVG_1_1_LEV_03;

       alpha_11 = (-rho_B0(0,0,0) + rho_B0(0,1,0))*AVG_1_1_LEV_10 + (-rhoE_B0(0,0,0) + rhoE_B0(0,1,0))*AVG_1_1_LEV_14 +
            (-rhou0_B0(0,0,0) + rhou0_B0(0,1,0))*AVG_1_1_LEV_11 + (-rhou1_B0(0,0,0) + rhou1_B0(0,1,0))*AVG_1_1_LEV_12 +
            (-rhou2_B0(0,0,0) + rhou2_B0(0,1,0))*AVG_1_1_LEV_13;

       alpha_21 = (-rho_B0(0,0,0) + rho_B0(0,1,0))*AVG_1_1_LEV_20 + (-rhou0_B0(0,0,0) + rhou0_B0(0,1,0))*AVG_1_1_LEV_21
            + (-rhou1_B0(0,0,0) + rhou1_B0(0,1,0))*AVG_1_1_LEV_22;

       alpha_31 = (-rho_B0(0,0,0) + rho_B0(0,1,0))*AVG_1_1_LEV_30 + (-rhoE_B0(0,0,0) + rhoE_B0(0,1,0))*AVG_1_1_LEV_34 +
            (-rhou0_B0(0,0,0) + rhou0_B0(0,1,0))*AVG_1_1_LEV_31 + (-rhou1_B0(0,0,0) + rhou1_B0(0,1,0))*AVG_1_1_LEV_32 +
            (-rhou2_B0(0,0,0) + rhou2_B0(0,1,0))*AVG_1_1_LEV_33;

       alpha_41 = (-rho_B0(0,0,0) + rho_B0(0,1,0))*AVG_1_1_LEV_40 + (-rhoE_B0(0,0,0) + rhoE_B0(0,1,0))*AVG_1_1_LEV_44 +
            (-rhou0_B0(0,0,0) + rhou0_B0(0,1,0))*AVG_1_1_LEV_41 + (-rhou1_B0(0,0,0) + rhou1_B0(0,1,0))*AVG_1_1_LEV_42 +
            (-rhou2_B0(0,0,0) + rhou2_B0(0,1,0))*AVG_1_1_LEV_43;

      ws_lambda_00 = (D10_B0(0,0,0)*AVG_1_u0 + D11_B0(0,0,0)*AVG_1_u1)*detJ_B0(0,0,0);

      ws_lambda_11 = (D10_B0(0,0,0)*AVG_1_u0 + D11_B0(0,0,0)*AVG_1_u1)*detJ_B0(0,0,0);

      ws_lambda_22 = (D10_B0(0,0,0)*AVG_1_u0 + D11_B0(0,0,0)*AVG_1_u1)*detJ_B0(0,0,0);

       ws_lambda_33 = sqrt((D10_B0(0,0,0)*D10_B0(0,0,0))*(detJ_B0(0,0,0)*detJ_B0(0,0,0)) +
            (D11_B0(0,0,0)*D11_B0(0,0,0))*(detJ_B0(0,0,0)*detJ_B0(0,0,0)))*AVG_1_a +
            D10_B0(0,0,0)*detJ_B0(0,0,0)*AVG_1_u0 + D11_B0(0,0,0)*detJ_B0(0,0,0)*AVG_1_u1;

       ws_lambda_44 = -sqrt((D10_B0(0,0,0)*D10_B0(0,0,0))*(detJ_B0(0,0,0)*detJ_B0(0,0,0)) +
            (D11_B0(0,0,0)*D11_B0(0,0,0))*(detJ_B0(0,0,0)*detJ_B0(0,0,0)))*AVG_1_a +
            D10_B0(0,0,0)*detJ_B0(0,0,0)*AVG_1_u0 + D11_B0(0,0,0)*detJ_B0(0,0,0)*AVG_1_u1;

      AVG_1_REV_00 = AVG_1_D10*inv_AVG_met_fact;

      AVG_1_REV_01 = AVG_1_D11*inv_AVG_met_fact;

      AVG_1_REV_03 = 0.707106781186547*AVG_1_rho*inv_AVG_a;

      AVG_1_REV_04 = 0.707106781186547*AVG_1_rho*inv_AVG_a;

      AVG_1_REV_10 = AVG_1_D10*AVG_1_u0*inv_AVG_met_fact;

      AVG_1_REV_11 = AVG_1_D11*AVG_1_u0*inv_AVG_met_fact;

      AVG_1_REV_12 = AVG_1_D11*AVG_1_rho*inv_AVG_met_fact;

      AVG_1_REV_13 = 0.707106781186547*(AVG_1_D10*AVG_1_a*inv_AVG_met_fact + AVG_1_u0)*AVG_1_rho*inv_AVG_a;

      AVG_1_REV_14 = 0.707106781186547*(-AVG_1_D10*AVG_1_a*inv_AVG_met_fact + AVG_1_u0)*AVG_1_rho*inv_AVG_a;

      AVG_1_REV_20 = AVG_1_D10*AVG_1_u1*inv_AVG_met_fact;

      AVG_1_REV_21 = AVG_1_D11*AVG_1_u1*inv_AVG_met_fact;

      AVG_1_REV_22 = -AVG_1_D10*AVG_1_rho*inv_AVG_met_fact;

      AVG_1_REV_23 = 0.707106781186547*(AVG_1_D11*AVG_1_a*inv_AVG_met_fact + AVG_1_u1)*AVG_1_rho*inv_AVG_a;

      AVG_1_REV_24 = 0.707106781186547*(-AVG_1_D11*AVG_1_a*inv_AVG_met_fact + AVG_1_u1)*AVG_1_rho*inv_AVG_a;

      AVG_1_REV_30 = AVG_1_D10*AVG_1_u2*inv_AVG_met_fact - AVG_1_D11*AVG_1_rho*inv_AVG_met_fact;

      AVG_1_REV_31 = AVG_1_D10*AVG_1_rho*inv_AVG_met_fact + AVG_1_D11*AVG_1_u2*inv_AVG_met_fact;

      AVG_1_REV_33 = 0.707106781186547*AVG_1_rho*AVG_1_u2*inv_AVG_a;

      AVG_1_REV_34 = 0.707106781186547*AVG_1_rho*AVG_1_u2*inv_AVG_a;

       AVG_1_REV_40 = ((1.0/2.0))*((AVG_1_u0*AVG_1_u0) + (AVG_1_u1*AVG_1_u1) +
            (AVG_1_u2*AVG_1_u2))*AVG_1_D10*inv_AVG_met_fact - AVG_1_D11*AVG_1_rho*AVG_1_u2*inv_AVG_met_fact;

       AVG_1_REV_41 = ((1.0/2.0))*((AVG_1_u0*AVG_1_u0) + (AVG_1_u1*AVG_1_u1) +
            (AVG_1_u2*AVG_1_u2))*AVG_1_D11*inv_AVG_met_fact + AVG_1_D10*AVG_1_rho*AVG_1_u2*inv_AVG_met_fact;

      AVG_1_REV_42 = (AVG_1_D11*AVG_1_u0*inv_AVG_met_fact - AVG_1_D10*AVG_1_u1*inv_AVG_met_fact)*AVG_1_rho;

       AVG_1_REV_43 = 0.707106781186547*(((AVG_1_a*AVG_1_a) + ((1.0/2.0))*((AVG_1_u0*AVG_1_u0) + (AVG_1_u1*AVG_1_u1) +
            (AVG_1_u2*AVG_1_u2))*gamma_m1)*invgamma_m1 + (AVG_1_D10*AVG_1_u0*inv_AVG_met_fact +
            AVG_1_D11*AVG_1_u1*inv_AVG_met_fact)*AVG_1_a)*AVG_1_rho*inv_AVG_a;

       AVG_1_REV_44 = 0.707106781186547*(((AVG_1_a*AVG_1_a) + ((1.0/2.0))*((AVG_1_u0*AVG_1_u0) + (AVG_1_u1*AVG_1_u1) +
            (AVG_1_u2*AVG_1_u2))*gamma_m1)*invgamma_m1 - (AVG_1_D10*AVG_1_u0*inv_AVG_met_fact +
            AVG_1_D11*AVG_1_u1*inv_AVG_met_fact)*AVG_1_a)*AVG_1_rho*inv_AVG_a;

      AVG_1_u0 = ((1.0/2.0))*(u0_B0(0,1,0) + u0_B0(0,2,0));

      AVG_1_a = ((1.0/2.0))*(a_B0(0,1,0) + a_B0(0,2,0));

      AVG_1_u2 = ((1.0/2.0))*(u2_B0(0,1,0) + u2_B0(0,2,0));

      AVG_1_rho = ((1.0/2.0))*(rho_B0(0,1,0) + rho_B0(0,2,0));

      AVG_1_u1 = ((1.0/2.0))*(u1_B0(0,1,0) + u1_B0(0,2,0));

      AVG_1_D10 = ((1.0/2.0))*(D10_B0(0,0,0) + D10_B0(0,1,0));

      AVG_1_detJ = ((1.0/2.0))*(detJ_B0(0,0,0) + detJ_B0(0,1,0));

      AVG_1_D11 = ((1.0/2.0))*(D11_B0(0,0,0) + D11_B0(0,1,0));

      inv_AVG_a = 1.0/(AVG_1_a);

      inv_AVG_rho = 1.0/(AVG_1_rho);

      inv_AVG_met_fact = pow((AVG_1_D10*AVG_1_D10) + (AVG_1_D11*AVG_1_D11), (-1.0/2.0));

       AVG_1_1_LEV_00 = -(1.0/2.0)*(-2*AVG_1_D10 - (AVG_1_u0*AVG_1_u0)*(inv_AVG_a*inv_AVG_a)*AVG_1_D10 -
            (AVG_1_u1*AVG_1_u1)*(inv_AVG_a*inv_AVG_a)*AVG_1_D10 - (AVG_1_u2*AVG_1_u2)*(inv_AVG_a*inv_AVG_a)*AVG_1_D10 -
            2*AVG_1_D11*AVG_1_u2*inv_AVG_rho + (AVG_1_u0*AVG_1_u0)*(inv_AVG_a*inv_AVG_a)*gama*AVG_1_D10 +
            (AVG_1_u1*AVG_1_u1)*(inv_AVG_a*inv_AVG_a)*gama*AVG_1_D10 +
            (AVG_1_u2*AVG_1_u2)*(inv_AVG_a*inv_AVG_a)*gama*AVG_1_D10)*inv_AVG_met_fact;

      AVG_1_1_LEV_01 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_D10*AVG_1_u0*inv_AVG_met_fact;

      AVG_1_1_LEV_02 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_D10*AVG_1_u1*inv_AVG_met_fact;

       AVG_1_1_LEV_03 = (-AVG_1_D11*inv_AVG_rho - (inv_AVG_a*inv_AVG_a)*AVG_1_D10*AVG_1_u2 +
            (inv_AVG_a*inv_AVG_a)*gama*AVG_1_D10*AVG_1_u2)*inv_AVG_met_fact;

      AVG_1_1_LEV_04 = -(inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_D10*inv_AVG_met_fact;

       AVG_1_1_LEV_10 = -(1.0/2.0)*(-2*AVG_1_D11 - (AVG_1_u0*AVG_1_u0)*(inv_AVG_a*inv_AVG_a)*AVG_1_D11 -
            (AVG_1_u1*AVG_1_u1)*(inv_AVG_a*inv_AVG_a)*AVG_1_D11 - (AVG_1_u2*AVG_1_u2)*(inv_AVG_a*inv_AVG_a)*AVG_1_D11 +
            2*AVG_1_D10*AVG_1_u2*inv_AVG_rho + (AVG_1_u0*AVG_1_u0)*(inv_AVG_a*inv_AVG_a)*gama*AVG_1_D11 +
            (AVG_1_u1*AVG_1_u1)*(inv_AVG_a*inv_AVG_a)*gama*AVG_1_D11 +
            (AVG_1_u2*AVG_1_u2)*(inv_AVG_a*inv_AVG_a)*gama*AVG_1_D11)*inv_AVG_met_fact;

      AVG_1_1_LEV_11 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_D11*AVG_1_u0*inv_AVG_met_fact;

      AVG_1_1_LEV_12 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_D11*AVG_1_u1*inv_AVG_met_fact;

       AVG_1_1_LEV_13 = (AVG_1_D10*inv_AVG_rho - (inv_AVG_a*inv_AVG_a)*AVG_1_D11*AVG_1_u2 +
            (inv_AVG_a*inv_AVG_a)*gama*AVG_1_D11*AVG_1_u2)*inv_AVG_met_fact;

      AVG_1_1_LEV_14 = -(inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_1_D11*inv_AVG_met_fact;

      AVG_1_1_LEV_20 = (AVG_1_D10*AVG_1_u1 - AVG_1_D11*AVG_1_u0)*inv_AVG_met_fact*inv_AVG_rho;

      AVG_1_1_LEV_21 = AVG_1_D11*inv_AVG_met_fact*inv_AVG_rho;

      AVG_1_1_LEV_22 = -AVG_1_D10*inv_AVG_met_fact*inv_AVG_rho;

       AVG_1_1_LEV_30 = -0.353553390593274*((AVG_1_u0*AVG_1_u0) + (AVG_1_u1*AVG_1_u1) + (AVG_1_u2*AVG_1_u2) -
            (AVG_1_u0*AVG_1_u0)*gama - (AVG_1_u1*AVG_1_u1)*gama - (AVG_1_u2*AVG_1_u2)*gama +
            2*AVG_1_D10*AVG_1_a*AVG_1_u0*inv_AVG_met_fact +
            2*AVG_1_D11*AVG_1_a*AVG_1_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

       AVG_1_1_LEV_31 = 0.707106781186547*(-gama*AVG_1_u0 + AVG_1_D10*AVG_1_a*inv_AVG_met_fact +
            AVG_1_u0)*inv_AVG_a*inv_AVG_rho;

       AVG_1_1_LEV_32 = 0.707106781186547*(-gama*AVG_1_u1 + AVG_1_D11*AVG_1_a*inv_AVG_met_fact +
            AVG_1_u1)*inv_AVG_a*inv_AVG_rho;

      AVG_1_1_LEV_33 = -0.707106781186547*gamma_m1*AVG_1_u2*inv_AVG_a*inv_AVG_rho;

      AVG_1_1_LEV_34 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

       AVG_1_1_LEV_40 = 0.353553390593274*(-(AVG_1_u0*AVG_1_u0) - (AVG_1_u1*AVG_1_u1) - (AVG_1_u2*AVG_1_u2) +
            (AVG_1_u0*AVG_1_u0)*gama + (AVG_1_u1*AVG_1_u1)*gama + (AVG_1_u2*AVG_1_u2)*gama +
            2*AVG_1_D10*AVG_1_a*AVG_1_u0*inv_AVG_met_fact +
            2*AVG_1_D11*AVG_1_a*AVG_1_u1*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

       AVG_1_1_LEV_41 = -0.707106781186547*(-AVG_1_u0 + gama*AVG_1_u0 +
            AVG_1_D10*AVG_1_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

       AVG_1_1_LEV_42 = -0.707106781186547*(-AVG_1_u1 + gama*AVG_1_u1 +
            AVG_1_D11*AVG_1_a*inv_AVG_met_fact)*inv_AVG_a*inv_AVG_rho;

      AVG_1_1_LEV_43 = -0.707106781186547*gamma_m1*AVG_1_u2*inv_AVG_a*inv_AVG_rho;

      AVG_1_1_LEV_44 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

       alpha_02 = (-rho_B0(0,1,0) + rho_B0(0,2,0))*AVG_1_1_LEV_00 + (-rhoE_B0(0,1,0) + rhoE_B0(0,2,0))*AVG_1_1_LEV_04 +
            (-rhou0_B0(0,1,0) + rhou0_B0(0,2,0))*AVG_1_1_LEV_01 + (-rhou1_B0(0,1,0) + rhou1_B0(0,2,0))*AVG_1_1_LEV_02 +
            (-rhou2_B0(0,1,0) + rhou2_B0(0,2,0))*AVG_1_1_LEV_03;

       alpha_12 = (-rho_B0(0,1,0) + rho_B0(0,2,0))*AVG_1_1_LEV_10 + (-rhoE_B0(0,1,0) + rhoE_B0(0,2,0))*AVG_1_1_LEV_14 +
            (-rhou0_B0(0,1,0) + rhou0_B0(0,2,0))*AVG_1_1_LEV_11 + (-rhou1_B0(0,1,0) + rhou1_B0(0,2,0))*AVG_1_1_LEV_12 +
            (-rhou2_B0(0,1,0) + rhou2_B0(0,2,0))*AVG_1_1_LEV_13;

       alpha_22 = (-rho_B0(0,1,0) + rho_B0(0,2,0))*AVG_1_1_LEV_20 + (-rhou0_B0(0,1,0) + rhou0_B0(0,2,0))*AVG_1_1_LEV_21
            + (-rhou1_B0(0,1,0) + rhou1_B0(0,2,0))*AVG_1_1_LEV_22;

       alpha_32 = (-rho_B0(0,1,0) + rho_B0(0,2,0))*AVG_1_1_LEV_30 + (-rhoE_B0(0,1,0) + rhoE_B0(0,2,0))*AVG_1_1_LEV_34 +
            (-rhou0_B0(0,1,0) + rhou0_B0(0,2,0))*AVG_1_1_LEV_31 + (-rhou1_B0(0,1,0) + rhou1_B0(0,2,0))*AVG_1_1_LEV_32 +
            (-rhou2_B0(0,1,0) + rhou2_B0(0,2,0))*AVG_1_1_LEV_33;

       alpha_42 = (-rho_B0(0,1,0) + rho_B0(0,2,0))*AVG_1_1_LEV_40 + (-rhoE_B0(0,1,0) + rhoE_B0(0,2,0))*AVG_1_1_LEV_44 +
            (-rhou0_B0(0,1,0) + rhou0_B0(0,2,0))*AVG_1_1_LEV_41 + (-rhou1_B0(0,1,0) + rhou1_B0(0,2,0))*AVG_1_1_LEV_42 +
            (-rhou2_B0(0,1,0) + rhou2_B0(0,2,0))*AVG_1_1_LEV_43;

       sigma_0_0 = ((fabs(ws_lambda_00) >= delta_TVD) ? (
   fabs(ws_lambda_00)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_00*ws_lambda_00))*invdelta_TVD
));

       sigma_0_1 = ((fabs(ws_lambda_11) >= delta_TVD) ? (
   fabs(ws_lambda_11)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_11*ws_lambda_11))*invdelta_TVD
));

       sigma_0_2 = ((fabs(ws_lambda_22) >= delta_TVD) ? (
   fabs(ws_lambda_22)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_22*ws_lambda_22))*invdelta_TVD
));

       sigma_0_3 = ((fabs(ws_lambda_33) >= delta_TVD) ? (
   fabs(ws_lambda_33)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_33*ws_lambda_33))*invdelta_TVD
));

       sigma_0_4 = ((fabs(ws_lambda_44) >= delta_TVD) ? (
   fabs(ws_lambda_44)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_44*ws_lambda_44))*invdelta_TVD
));

      S = (alpha_01 > 0) ? 1 : ((alpha_01 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_00, 2*fabs(alpha_01)));

      t2 = fmin(fabs(alpha_01), 2*S*alpha_00);

      g_00 = S*fmax(t1, t2);

      S = (alpha_11 > 0) ? 1 : ((alpha_11 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_10, 2*fabs(alpha_11)));

      t2 = fmin(fabs(alpha_11), 2*S*alpha_10);

      g_10 = S*fmax(t1, t2);

      S = (alpha_21 > 0) ? 1 : ((alpha_21 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_20, 2*fabs(alpha_21)));

      t2 = fmin(fabs(alpha_21), 2*S*alpha_20);

      g_20 = S*fmax(t1, t2);

      S = (alpha_31 > 0) ? 1 : ((alpha_31 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_30, 2*fabs(alpha_31)));

      t2 = fmin(fabs(alpha_31), 2*S*alpha_30);

      g_30 = S*fmax(t1, t2);

      S = (alpha_41 > 0) ? 1 : ((alpha_41 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_40, 2*fabs(alpha_41)));

      t2 = fmin(fabs(alpha_41), 2*S*alpha_40);

      g_40 = S*fmax(t1, t2);

      S = (alpha_02 > 0) ? 1 : ((alpha_02 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_01, 2*fabs(alpha_02)));

      t2 = fmin(fabs(alpha_02), 2*S*alpha_01);

      g_01 = S*fmax(t1, t2);

      S = (alpha_12 > 0) ? 1 : ((alpha_12 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_11, 2*fabs(alpha_12)));

      t2 = fmin(fabs(alpha_12), 2*S*alpha_11);

      g_11 = S*fmax(t1, t2);

      S = (alpha_22 > 0) ? 1 : ((alpha_22 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_21, 2*fabs(alpha_22)));

      t2 = fmin(fabs(alpha_22), 2*S*alpha_21);

      g_21 = S*fmax(t1, t2);

      S = (alpha_32 > 0) ? 1 : ((alpha_32 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_31, 2*fabs(alpha_32)));

      t2 = fmin(fabs(alpha_32), 2*S*alpha_31);

      g_31 = S*fmax(t1, t2);

      S = (alpha_42 > 0) ? 1 : ((alpha_42 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_41, 2*fabs(alpha_42)));

      t2 = fmin(fabs(alpha_42), 2*S*alpha_41);

      g_41 = S*fmax(t1, t2);

       gamma_0 = ((alpha_01 == 0) ? (
   0
)
: (
   (-g_00 + g_01)*alpha_01*sigma_0_0/((alpha_01*alpha_01) +
            eps_TVD)
));

       gamma_1 = ((alpha_11 == 0) ? (
   0
)
: (
   (-g_10 + g_11)*alpha_11*sigma_0_1/((alpha_11*alpha_11) +
            eps_TVD)
));

       gamma_2 = ((alpha_21 == 0) ? (
   0
)
: (
   (-g_20 + g_21)*alpha_21*sigma_0_2/((alpha_21*alpha_21) +
            eps_TVD)
));

       gamma_3 = ((alpha_31 == 0) ? (
   0
)
: (
   (-g_30 + g_31)*alpha_31*sigma_0_3/((alpha_31*alpha_31) +
            eps_TVD)
));

       gamma_4 = ((alpha_41 == 0) ? (
   0
)
: (
   (-g_40 + g_41)*alpha_41*sigma_0_4/((alpha_41*alpha_41) +
            eps_TVD)
));

       sigma_1_0 = ((fabs(gamma_0) >= delta_TVD) ? (
   fabs(gamma_0)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (gamma_0*gamma_0))*invdelta_TVD
));

       sigma_1_1 = ((fabs(gamma_1) >= delta_TVD) ? (
   fabs(gamma_1)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (gamma_1*gamma_1))*invdelta_TVD
));

       sigma_1_2 = ((fabs(gamma_2) >= delta_TVD) ? (
   fabs(gamma_2)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (gamma_2*gamma_2))*invdelta_TVD
));

       sigma_1_3 = ((fabs(gamma_3) >= delta_TVD) ? (
   fabs(gamma_3)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (gamma_3*gamma_3))*invdelta_TVD
));

       sigma_1_4 = ((fabs(gamma_4) >= delta_TVD) ? (
   fabs(gamma_4)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (gamma_4*gamma_4))*invdelta_TVD
));

      phi_0 = -fabs(sigma_0_0 + sigma_1_0)*alpha_01 + 0.5*(g_00 + g_01)*sigma_0_0;

      phi_1 = -fabs(sigma_0_1 + sigma_1_1)*alpha_11 + 0.5*(g_10 + g_11)*sigma_0_1;

      phi_2 = -fabs(sigma_0_2 + sigma_1_2)*alpha_21 + 0.5*(g_20 + g_21)*sigma_0_2;

      phi_3 = -fabs(sigma_0_3 + sigma_1_3)*alpha_31 + 0.5*(g_30 + g_31)*sigma_0_3;

      phi_4 = -fabs(sigma_0_4 + sigma_1_4)*alpha_41 + 0.5*(g_40 + g_41)*sigma_0_4;

      t1 = -fabs(alpha_00) + fabs(alpha_01);

      t2 = fabs(alpha_00) + fabs(alpha_01) + eps_TVD;

      theta_hat_00 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_10) + fabs(alpha_11);

      t2 = fabs(alpha_10) + fabs(alpha_11) + eps_TVD;

      theta_hat_10 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_20) + fabs(alpha_21);

      t2 = fabs(alpha_20) + fabs(alpha_21) + eps_TVD;

      theta_hat_20 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_30) + fabs(alpha_31);

      t2 = fabs(alpha_30) + fabs(alpha_31) + eps_TVD;

      theta_hat_30 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_40) + fabs(alpha_41);

      t2 = fabs(alpha_40) + fabs(alpha_41) + eps_TVD;

      theta_hat_40 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_01) + fabs(alpha_02);

      t2 = fabs(alpha_01) + fabs(alpha_02) + eps_TVD;

      theta_hat_01 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_11) + fabs(alpha_12);

      t2 = fabs(alpha_11) + fabs(alpha_12) + eps_TVD;

      theta_hat_11 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_21) + fabs(alpha_22);

      t2 = fabs(alpha_21) + fabs(alpha_22) + eps_TVD;

      theta_hat_21 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_31) + fabs(alpha_32);

      t2 = fabs(alpha_31) + fabs(alpha_32) + eps_TVD;

      theta_hat_31 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_41) + fabs(alpha_42);

      t2 = fabs(alpha_41) + fabs(alpha_42) + eps_TVD;

      theta_hat_41 = (fabs(t1/t2)*fabs(t1/t2));

      theta_0 = fmax(theta_hat_00, theta_hat_01);

      theta_1 = fmax(theta_hat_10, theta_hat_11);

      theta_2 = fmax(theta_hat_20, theta_hat_21);

      theta_3 = fmax(theta_hat_30, theta_hat_31);

      theta_4 = fmax(theta_hat_40, theta_hat_41);

      phi_star_0 = kappa_TVD*phi_0*theta_0;

      phi_star_1 = kappa_TVD*phi_1*theta_1;

      phi_star_2 = kappa_TVD*phi_2*theta_2;

      phi_star_3 = kappa_TVD*phi_3*theta_3;

      phi_star_4 = kappa_TVD*phi_4*theta_4;

       Residual0_B0(0,0,0) = 0.5*(AVG_1_REV_00*phi_star_0 + AVG_1_REV_01*phi_star_1 + AVG_1_REV_03*phi_star_3 +
            AVG_1_REV_04*phi_star_4);

       Residual1_B0(0,0,0) = 0.5*(AVG_1_REV_10*phi_star_0 + AVG_1_REV_11*phi_star_1 + AVG_1_REV_12*phi_star_2 +
            AVG_1_REV_13*phi_star_3 + AVG_1_REV_14*phi_star_4);

       Residual2_B0(0,0,0) = 0.5*(AVG_1_REV_20*phi_star_0 + AVG_1_REV_21*phi_star_1 + AVG_1_REV_22*phi_star_2 +
            AVG_1_REV_23*phi_star_3 + AVG_1_REV_24*phi_star_4);

       Residual3_B0(0,0,0) = 0.5*(AVG_1_REV_30*phi_star_0 + AVG_1_REV_31*phi_star_1 + AVG_1_REV_33*phi_star_3 +
            AVG_1_REV_34*phi_star_4);

       Residual4_B0(0,0,0) = 0.5*(AVG_1_REV_40*phi_star_0 + AVG_1_REV_41*phi_star_1 + AVG_1_REV_42*phi_star_2 +
            AVG_1_REV_43*phi_star_3 + AVG_1_REV_44*phi_star_4);

   }

   else{

      Residual0_B0(0,0,0) = 0.0;

      Residual1_B0(0,0,0) = 0.0;

      Residual2_B0(0,0,0) = 0.0;

      Residual3_B0(0,0,0) = 0.0;

      Residual4_B0(0,0,0) = 0.0;

   }

}

 void opensbliblock00Kernel066(const ACC<double> &a_B0, const ACC<double> &detJ_B0, const ACC<double> &kappa_B0, const
ACC<double> &rhoE_B0, const ACC<double> &rho_B0, const ACC<double> &rhou0_B0, const ACC<double> &rhou1_B0, const
ACC<double> &rhou2_B0, const ACC<double> &u0_B0, const ACC<double> &u1_B0, const ACC<double> &u2_B0, ACC<double>
&rhoE_RKold_B0, ACC<double> &rho_RKold_B0, ACC<double> &rhou0_RKold_B0, ACC<double> &rhou1_RKold_B0, ACC<double>
&rhou2_RKold_B0)
{
   double AVG_2_2_LEV_00 = 0.0;
   double AVG_2_2_LEV_02 = 0.0;
   double AVG_2_2_LEV_10 = 0.0;
   double AVG_2_2_LEV_11 = 0.0;
   double AVG_2_2_LEV_20 = 0.0;
   double AVG_2_2_LEV_21 = 0.0;
   double AVG_2_2_LEV_22 = 0.0;
   double AVG_2_2_LEV_23 = 0.0;
   double AVG_2_2_LEV_24 = 0.0;
   double AVG_2_2_LEV_30 = 0.0;
   double AVG_2_2_LEV_31 = 0.0;
   double AVG_2_2_LEV_32 = 0.0;
   double AVG_2_2_LEV_33 = 0.0;
   double AVG_2_2_LEV_34 = 0.0;
   double AVG_2_2_LEV_40 = 0.0;
   double AVG_2_2_LEV_41 = 0.0;
   double AVG_2_2_LEV_42 = 0.0;
   double AVG_2_2_LEV_43 = 0.0;
   double AVG_2_2_LEV_44 = 0.0;
   double AVG_2_REV_02 = 0.0;
   double AVG_2_REV_03 = 0.0;
   double AVG_2_REV_04 = 0.0;
   double AVG_2_REV_11 = 0.0;
   double AVG_2_REV_12 = 0.0;
   double AVG_2_REV_13 = 0.0;
   double AVG_2_REV_14 = 0.0;
   double AVG_2_REV_20 = 0.0;
   double AVG_2_REV_22 = 0.0;
   double AVG_2_REV_23 = 0.0;
   double AVG_2_REV_24 = 0.0;
   double AVG_2_REV_32 = 0.0;
   double AVG_2_REV_33 = 0.0;
   double AVG_2_REV_34 = 0.0;
   double AVG_2_REV_40 = 0.0;
   double AVG_2_REV_41 = 0.0;
   double AVG_2_REV_42 = 0.0;
   double AVG_2_REV_43 = 0.0;
   double AVG_2_REV_44 = 0.0;
   double AVG_2_a = 0.0;
   double AVG_2_detJ = 0.0;
   double AVG_2_rho = 0.0;
   double AVG_2_u0 = 0.0;
   double AVG_2_u1 = 0.0;
   double AVG_2_u2 = 0.0;
   double S = 0.0;
   double alpha_00 = 0.0;
   double alpha_01 = 0.0;
   double alpha_02 = 0.0;
   double alpha_10 = 0.0;
   double alpha_11 = 0.0;
   double alpha_12 = 0.0;
   double alpha_20 = 0.0;
   double alpha_21 = 0.0;
   double alpha_22 = 0.0;
   double alpha_30 = 0.0;
   double alpha_31 = 0.0;
   double alpha_32 = 0.0;
   double alpha_40 = 0.0;
   double alpha_41 = 0.0;
   double alpha_42 = 0.0;
   double g_00 = 0.0;
   double g_01 = 0.0;
   double g_10 = 0.0;
   double g_11 = 0.0;
   double g_20 = 0.0;
   double g_21 = 0.0;
   double g_30 = 0.0;
   double g_31 = 0.0;
   double g_40 = 0.0;
   double g_41 = 0.0;
   double gamma_0 = 0.0;
   double gamma_1 = 0.0;
   double gamma_2 = 0.0;
   double gamma_3 = 0.0;
   double gamma_4 = 0.0;
   double inv_AVG_a = 0.0;
   double inv_AVG_rho = 0.0;
   double phi_0 = 0.0;
   double phi_1 = 0.0;
   double phi_2 = 0.0;
   double phi_3 = 0.0;
   double phi_4 = 0.0;
   double phi_star_0 = 0.0;
   double phi_star_1 = 0.0;
   double phi_star_2 = 0.0;
   double phi_star_3 = 0.0;
   double phi_star_4 = 0.0;
   double sigma_0_0 = 0.0;
   double sigma_0_1 = 0.0;
   double sigma_0_2 = 0.0;
   double sigma_0_3 = 0.0;
   double sigma_0_4 = 0.0;
   double sigma_1_0 = 0.0;
   double sigma_1_1 = 0.0;
   double sigma_1_2 = 0.0;
   double sigma_1_3 = 0.0;
   double sigma_1_4 = 0.0;
   double t1 = 0.0;
   double t2 = 0.0;
   double theta_0 = 0.0;
   double theta_1 = 0.0;
   double theta_2 = 0.0;
   double theta_3 = 0.0;
   double theta_4 = 0.0;
   double theta_hat_00 = 0.0;
   double theta_hat_01 = 0.0;
   double theta_hat_10 = 0.0;
   double theta_hat_11 = 0.0;
   double theta_hat_20 = 0.0;
   double theta_hat_21 = 0.0;
   double theta_hat_30 = 0.0;
   double theta_hat_31 = 0.0;
   double theta_hat_40 = 0.0;
   double theta_hat_41 = 0.0;
   double ws_lambda_00 = 0.0;
   double ws_lambda_11 = 0.0;
   double ws_lambda_22 = 0.0;
   double ws_lambda_33 = 0.0;
   double ws_lambda_44 = 0.0;
    if (fmax(kappa_B0(0,0,-3), fmax(kappa_B0(0,0,-2), fmax(kappa_B0(0,0,1), fmax(kappa_B0(0,0,-1), fmax(kappa_B0(0,0,0),
      kappa_B0(0,0,2)))))) > Ducros_check){

      AVG_2_u0 = ((1.0/2.0))*(u0_B0(0,0,0) + u0_B0(0,0,-1));

      AVG_2_a = ((1.0/2.0))*(a_B0(0,0,0) + a_B0(0,0,-1));

      AVG_2_u2 = ((1.0/2.0))*(u2_B0(0,0,0) + u2_B0(0,0,-1));

      AVG_2_rho = ((1.0/2.0))*(rho_B0(0,0,0) + rho_B0(0,0,-1));

      AVG_2_u1 = ((1.0/2.0))*(u1_B0(0,0,0) + u1_B0(0,0,-1));

      AVG_2_detJ = ((1.0/2.0))*(detJ_B0(0,0,0) + detJ_B0(0,0,1));

      inv_AVG_a = 1.0/(AVG_2_a);

      inv_AVG_rho = 1.0/(AVG_2_rho);

      AVG_2_2_LEV_00 = -AVG_2_u1*inv_AVG_rho;

      AVG_2_2_LEV_02 = inv_AVG_rho;

      AVG_2_2_LEV_10 = AVG_2_u0*inv_AVG_rho;

      AVG_2_2_LEV_11 = -inv_AVG_rho;

       AVG_2_2_LEV_20 = -(1.0/2.0)*(-2 - (AVG_2_u0*AVG_2_u0)*(inv_AVG_a*inv_AVG_a) -
            (AVG_2_u1*AVG_2_u1)*(inv_AVG_a*inv_AVG_a) - (AVG_2_u2*AVG_2_u2)*(inv_AVG_a*inv_AVG_a) +
            (AVG_2_u0*AVG_2_u0)*(inv_AVG_a*inv_AVG_a)*gama + (AVG_2_u1*AVG_2_u1)*(inv_AVG_a*inv_AVG_a)*gama +
            (AVG_2_u2*AVG_2_u2)*(inv_AVG_a*inv_AVG_a)*gama);

      AVG_2_2_LEV_21 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_2_u0;

      AVG_2_2_LEV_22 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_2_u1;

      AVG_2_2_LEV_23 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_2_u2;

      AVG_2_2_LEV_24 = -(inv_AVG_a*inv_AVG_a)*gamma_m1;

       AVG_2_2_LEV_30 = -0.353553390593274*((AVG_2_u0*AVG_2_u0) + (AVG_2_u1*AVG_2_u1) + (AVG_2_u2*AVG_2_u2) -
            (AVG_2_u0*AVG_2_u0)*gama - (AVG_2_u1*AVG_2_u1)*gama - (AVG_2_u2*AVG_2_u2)*gama +
            2*AVG_2_a*AVG_2_u2)*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_31 = -0.707106781186547*gamma_m1*AVG_2_u0*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_32 = -0.707106781186547*gamma_m1*AVG_2_u1*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_33 = 0.707106781186547*(-gama*AVG_2_u2 + AVG_2_a + AVG_2_u2)*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_34 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

       AVG_2_2_LEV_40 = 0.353553390593274*(-(AVG_2_u0*AVG_2_u0) - (AVG_2_u1*AVG_2_u1) - (AVG_2_u2*AVG_2_u2) +
            (AVG_2_u0*AVG_2_u0)*gama + (AVG_2_u1*AVG_2_u1)*gama + (AVG_2_u2*AVG_2_u2)*gama +
            2*AVG_2_a*AVG_2_u2)*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_41 = -0.707106781186547*gamma_m1*AVG_2_u0*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_42 = -0.707106781186547*gamma_m1*AVG_2_u1*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_43 = -0.707106781186547*(-AVG_2_u2 + gama*AVG_2_u2 + AVG_2_a)*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_44 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

       alpha_00 = (-rho_B0(0,0,-1) + rho_B0(0,0,0))*AVG_2_2_LEV_00 + (-rhou1_B0(0,0,-1) +
            rhou1_B0(0,0,0))*AVG_2_2_LEV_02;

       alpha_10 = (-rho_B0(0,0,-1) + rho_B0(0,0,0))*AVG_2_2_LEV_10 + (-rhou0_B0(0,0,-1) +
            rhou0_B0(0,0,0))*AVG_2_2_LEV_11;

       alpha_20 = (-rho_B0(0,0,-1) + rho_B0(0,0,0))*AVG_2_2_LEV_20 + (-rhoE_B0(0,0,-1) + rhoE_B0(0,0,0))*AVG_2_2_LEV_24
            + (-rhou0_B0(0,0,-1) + rhou0_B0(0,0,0))*AVG_2_2_LEV_21 + (-rhou1_B0(0,0,-1) +
            rhou1_B0(0,0,0))*AVG_2_2_LEV_22 + (-rhou2_B0(0,0,-1) + rhou2_B0(0,0,0))*AVG_2_2_LEV_23;

       alpha_30 = (-rho_B0(0,0,-1) + rho_B0(0,0,0))*AVG_2_2_LEV_30 + (-rhoE_B0(0,0,-1) + rhoE_B0(0,0,0))*AVG_2_2_LEV_34
            + (-rhou0_B0(0,0,-1) + rhou0_B0(0,0,0))*AVG_2_2_LEV_31 + (-rhou1_B0(0,0,-1) +
            rhou1_B0(0,0,0))*AVG_2_2_LEV_32 + (-rhou2_B0(0,0,-1) + rhou2_B0(0,0,0))*AVG_2_2_LEV_33;

       alpha_40 = (-rho_B0(0,0,-1) + rho_B0(0,0,0))*AVG_2_2_LEV_40 + (-rhoE_B0(0,0,-1) + rhoE_B0(0,0,0))*AVG_2_2_LEV_44
            + (-rhou0_B0(0,0,-1) + rhou0_B0(0,0,0))*AVG_2_2_LEV_41 + (-rhou1_B0(0,0,-1) +
            rhou1_B0(0,0,0))*AVG_2_2_LEV_42 + (-rhou2_B0(0,0,-1) + rhou2_B0(0,0,0))*AVG_2_2_LEV_43;

      AVG_2_u0 = ((1.0/2.0))*(u0_B0(0,0,0) + u0_B0(0,0,1));

      AVG_2_a = ((1.0/2.0))*(a_B0(0,0,0) + a_B0(0,0,1));

      AVG_2_u2 = ((1.0/2.0))*(u2_B0(0,0,0) + u2_B0(0,0,1));

      AVG_2_rho = ((1.0/2.0))*(rho_B0(0,0,0) + rho_B0(0,0,1));

      AVG_2_u1 = ((1.0/2.0))*(u1_B0(0,0,0) + u1_B0(0,0,1));

      AVG_2_detJ = ((1.0/2.0))*(detJ_B0(0,0,0) + detJ_B0(0,0,1));

      inv_AVG_a = 1.0/(AVG_2_a);

      inv_AVG_rho = 1.0/(AVG_2_rho);

      AVG_2_2_LEV_00 = -AVG_2_u1*inv_AVG_rho;

      AVG_2_2_LEV_02 = inv_AVG_rho;

      AVG_2_2_LEV_10 = AVG_2_u0*inv_AVG_rho;

      AVG_2_2_LEV_11 = -inv_AVG_rho;

       AVG_2_2_LEV_20 = -(1.0/2.0)*(-2 - (AVG_2_u0*AVG_2_u0)*(inv_AVG_a*inv_AVG_a) -
            (AVG_2_u1*AVG_2_u1)*(inv_AVG_a*inv_AVG_a) - (AVG_2_u2*AVG_2_u2)*(inv_AVG_a*inv_AVG_a) +
            (AVG_2_u0*AVG_2_u0)*(inv_AVG_a*inv_AVG_a)*gama + (AVG_2_u1*AVG_2_u1)*(inv_AVG_a*inv_AVG_a)*gama +
            (AVG_2_u2*AVG_2_u2)*(inv_AVG_a*inv_AVG_a)*gama);

      AVG_2_2_LEV_21 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_2_u0;

      AVG_2_2_LEV_22 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_2_u1;

      AVG_2_2_LEV_23 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_2_u2;

      AVG_2_2_LEV_24 = -(inv_AVG_a*inv_AVG_a)*gamma_m1;

       AVG_2_2_LEV_30 = -0.353553390593274*((AVG_2_u0*AVG_2_u0) + (AVG_2_u1*AVG_2_u1) + (AVG_2_u2*AVG_2_u2) -
            (AVG_2_u0*AVG_2_u0)*gama - (AVG_2_u1*AVG_2_u1)*gama - (AVG_2_u2*AVG_2_u2)*gama +
            2*AVG_2_a*AVG_2_u2)*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_31 = -0.707106781186547*gamma_m1*AVG_2_u0*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_32 = -0.707106781186547*gamma_m1*AVG_2_u1*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_33 = 0.707106781186547*(-gama*AVG_2_u2 + AVG_2_a + AVG_2_u2)*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_34 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

       AVG_2_2_LEV_40 = 0.353553390593274*(-(AVG_2_u0*AVG_2_u0) - (AVG_2_u1*AVG_2_u1) - (AVG_2_u2*AVG_2_u2) +
            (AVG_2_u0*AVG_2_u0)*gama + (AVG_2_u1*AVG_2_u1)*gama + (AVG_2_u2*AVG_2_u2)*gama +
            2*AVG_2_a*AVG_2_u2)*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_41 = -0.707106781186547*gamma_m1*AVG_2_u0*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_42 = -0.707106781186547*gamma_m1*AVG_2_u1*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_43 = -0.707106781186547*(-AVG_2_u2 + gama*AVG_2_u2 + AVG_2_a)*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_44 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

      alpha_01 = (-rho_B0(0,0,0) + rho_B0(0,0,1))*AVG_2_2_LEV_00 + (-rhou1_B0(0,0,0) + rhou1_B0(0,0,1))*AVG_2_2_LEV_02;

      alpha_11 = (-rho_B0(0,0,0) + rho_B0(0,0,1))*AVG_2_2_LEV_10 + (-rhou0_B0(0,0,0) + rhou0_B0(0,0,1))*AVG_2_2_LEV_11;

       alpha_21 = (-rho_B0(0,0,0) + rho_B0(0,0,1))*AVG_2_2_LEV_20 + (-rhoE_B0(0,0,0) + rhoE_B0(0,0,1))*AVG_2_2_LEV_24 +
            (-rhou0_B0(0,0,0) + rhou0_B0(0,0,1))*AVG_2_2_LEV_21 + (-rhou1_B0(0,0,0) + rhou1_B0(0,0,1))*AVG_2_2_LEV_22 +
            (-rhou2_B0(0,0,0) + rhou2_B0(0,0,1))*AVG_2_2_LEV_23;

       alpha_31 = (-rho_B0(0,0,0) + rho_B0(0,0,1))*AVG_2_2_LEV_30 + (-rhoE_B0(0,0,0) + rhoE_B0(0,0,1))*AVG_2_2_LEV_34 +
            (-rhou0_B0(0,0,0) + rhou0_B0(0,0,1))*AVG_2_2_LEV_31 + (-rhou1_B0(0,0,0) + rhou1_B0(0,0,1))*AVG_2_2_LEV_32 +
            (-rhou2_B0(0,0,0) + rhou2_B0(0,0,1))*AVG_2_2_LEV_33;

       alpha_41 = (-rho_B0(0,0,0) + rho_B0(0,0,1))*AVG_2_2_LEV_40 + (-rhoE_B0(0,0,0) + rhoE_B0(0,0,1))*AVG_2_2_LEV_44 +
            (-rhou0_B0(0,0,0) + rhou0_B0(0,0,1))*AVG_2_2_LEV_41 + (-rhou1_B0(0,0,0) + rhou1_B0(0,0,1))*AVG_2_2_LEV_42 +
            (-rhou2_B0(0,0,0) + rhou2_B0(0,0,1))*AVG_2_2_LEV_43;

      ws_lambda_00 = detJ_B0(0,0,0)*AVG_2_u2;

      ws_lambda_11 = detJ_B0(0,0,0)*AVG_2_u2;

      ws_lambda_22 = detJ_B0(0,0,0)*AVG_2_u2;

      ws_lambda_33 = (AVG_2_a + AVG_2_u2)*detJ_B0(0,0,0);

      ws_lambda_44 = -(-AVG_2_u2 + AVG_2_a)*detJ_B0(0,0,0);

      AVG_2_REV_02 = 1;

      AVG_2_REV_03 = 0.707106781186547*AVG_2_rho*inv_AVG_a;

      AVG_2_REV_04 = 0.707106781186547*AVG_2_rho*inv_AVG_a;

      AVG_2_REV_11 = -AVG_2_rho;

      AVG_2_REV_12 = AVG_2_u0;

      AVG_2_REV_13 = 0.707106781186547*AVG_2_rho*AVG_2_u0*inv_AVG_a;

      AVG_2_REV_14 = 0.707106781186547*AVG_2_rho*AVG_2_u0*inv_AVG_a;

      AVG_2_REV_20 = AVG_2_rho;

      AVG_2_REV_22 = AVG_2_u1;

      AVG_2_REV_23 = 0.707106781186547*AVG_2_rho*AVG_2_u1*inv_AVG_a;

      AVG_2_REV_24 = 0.707106781186547*AVG_2_rho*AVG_2_u1*inv_AVG_a;

      AVG_2_REV_32 = AVG_2_u2;

      AVG_2_REV_33 = 0.707106781186547*(AVG_2_a + AVG_2_u2)*AVG_2_rho*inv_AVG_a;

      AVG_2_REV_34 = 0.707106781186547*(-AVG_2_a + AVG_2_u2)*AVG_2_rho*inv_AVG_a;

      AVG_2_REV_40 = AVG_2_rho*AVG_2_u1;

      AVG_2_REV_41 = -AVG_2_rho*AVG_2_u0;

       AVG_2_REV_42 = ((1.0/2.0))*(AVG_2_u0*AVG_2_u0) + ((1.0/2.0))*(AVG_2_u1*AVG_2_u1) +
            ((1.0/2.0))*(AVG_2_u2*AVG_2_u2);

       AVG_2_REV_43 = 0.707106781186547*(((AVG_2_a*AVG_2_a) + ((1.0/2.0))*((AVG_2_u0*AVG_2_u0) + (AVG_2_u1*AVG_2_u1) +
            (AVG_2_u2*AVG_2_u2))*gamma_m1)*invgamma_m1 + AVG_2_a*AVG_2_u2)*AVG_2_rho*inv_AVG_a;

       AVG_2_REV_44 = 0.707106781186547*(((AVG_2_a*AVG_2_a) + ((1.0/2.0))*((AVG_2_u0*AVG_2_u0) + (AVG_2_u1*AVG_2_u1) +
            (AVG_2_u2*AVG_2_u2))*gamma_m1)*invgamma_m1 - AVG_2_a*AVG_2_u2)*AVG_2_rho*inv_AVG_a;

      AVG_2_u0 = ((1.0/2.0))*(u0_B0(0,0,1) + u0_B0(0,0,2));

      AVG_2_a = ((1.0/2.0))*(a_B0(0,0,1) + a_B0(0,0,2));

      AVG_2_u2 = ((1.0/2.0))*(u2_B0(0,0,1) + u2_B0(0,0,2));

      AVG_2_rho = ((1.0/2.0))*(rho_B0(0,0,1) + rho_B0(0,0,2));

      AVG_2_u1 = ((1.0/2.0))*(u1_B0(0,0,1) + u1_B0(0,0,2));

      AVG_2_detJ = ((1.0/2.0))*(detJ_B0(0,0,0) + detJ_B0(0,0,1));

      inv_AVG_a = 1.0/(AVG_2_a);

      inv_AVG_rho = 1.0/(AVG_2_rho);

      AVG_2_2_LEV_00 = -AVG_2_u1*inv_AVG_rho;

      AVG_2_2_LEV_02 = inv_AVG_rho;

      AVG_2_2_LEV_10 = AVG_2_u0*inv_AVG_rho;

      AVG_2_2_LEV_11 = -inv_AVG_rho;

       AVG_2_2_LEV_20 = -(1.0/2.0)*(-2 - (AVG_2_u0*AVG_2_u0)*(inv_AVG_a*inv_AVG_a) -
            (AVG_2_u1*AVG_2_u1)*(inv_AVG_a*inv_AVG_a) - (AVG_2_u2*AVG_2_u2)*(inv_AVG_a*inv_AVG_a) +
            (AVG_2_u0*AVG_2_u0)*(inv_AVG_a*inv_AVG_a)*gama + (AVG_2_u1*AVG_2_u1)*(inv_AVG_a*inv_AVG_a)*gama +
            (AVG_2_u2*AVG_2_u2)*(inv_AVG_a*inv_AVG_a)*gama);

      AVG_2_2_LEV_21 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_2_u0;

      AVG_2_2_LEV_22 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_2_u1;

      AVG_2_2_LEV_23 = (inv_AVG_a*inv_AVG_a)*gamma_m1*AVG_2_u2;

      AVG_2_2_LEV_24 = -(inv_AVG_a*inv_AVG_a)*gamma_m1;

       AVG_2_2_LEV_30 = -0.353553390593274*((AVG_2_u0*AVG_2_u0) + (AVG_2_u1*AVG_2_u1) + (AVG_2_u2*AVG_2_u2) -
            (AVG_2_u0*AVG_2_u0)*gama - (AVG_2_u1*AVG_2_u1)*gama - (AVG_2_u2*AVG_2_u2)*gama +
            2*AVG_2_a*AVG_2_u2)*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_31 = -0.707106781186547*gamma_m1*AVG_2_u0*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_32 = -0.707106781186547*gamma_m1*AVG_2_u1*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_33 = 0.707106781186547*(-gama*AVG_2_u2 + AVG_2_a + AVG_2_u2)*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_34 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

       AVG_2_2_LEV_40 = 0.353553390593274*(-(AVG_2_u0*AVG_2_u0) - (AVG_2_u1*AVG_2_u1) - (AVG_2_u2*AVG_2_u2) +
            (AVG_2_u0*AVG_2_u0)*gama + (AVG_2_u1*AVG_2_u1)*gama + (AVG_2_u2*AVG_2_u2)*gama +
            2*AVG_2_a*AVG_2_u2)*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_41 = -0.707106781186547*gamma_m1*AVG_2_u0*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_42 = -0.707106781186547*gamma_m1*AVG_2_u1*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_43 = -0.707106781186547*(-AVG_2_u2 + gama*AVG_2_u2 + AVG_2_a)*inv_AVG_a*inv_AVG_rho;

      AVG_2_2_LEV_44 = 0.707106781186547*gamma_m1*inv_AVG_a*inv_AVG_rho;

      alpha_02 = (-rho_B0(0,0,1) + rho_B0(0,0,2))*AVG_2_2_LEV_00 + (-rhou1_B0(0,0,1) + rhou1_B0(0,0,2))*AVG_2_2_LEV_02;

      alpha_12 = (-rho_B0(0,0,1) + rho_B0(0,0,2))*AVG_2_2_LEV_10 + (-rhou0_B0(0,0,1) + rhou0_B0(0,0,2))*AVG_2_2_LEV_11;

       alpha_22 = (-rho_B0(0,0,1) + rho_B0(0,0,2))*AVG_2_2_LEV_20 + (-rhoE_B0(0,0,1) + rhoE_B0(0,0,2))*AVG_2_2_LEV_24 +
            (-rhou0_B0(0,0,1) + rhou0_B0(0,0,2))*AVG_2_2_LEV_21 + (-rhou1_B0(0,0,1) + rhou1_B0(0,0,2))*AVG_2_2_LEV_22 +
            (-rhou2_B0(0,0,1) + rhou2_B0(0,0,2))*AVG_2_2_LEV_23;

       alpha_32 = (-rho_B0(0,0,1) + rho_B0(0,0,2))*AVG_2_2_LEV_30 + (-rhoE_B0(0,0,1) + rhoE_B0(0,0,2))*AVG_2_2_LEV_34 +
            (-rhou0_B0(0,0,1) + rhou0_B0(0,0,2))*AVG_2_2_LEV_31 + (-rhou1_B0(0,0,1) + rhou1_B0(0,0,2))*AVG_2_2_LEV_32 +
            (-rhou2_B0(0,0,1) + rhou2_B0(0,0,2))*AVG_2_2_LEV_33;

       alpha_42 = (-rho_B0(0,0,1) + rho_B0(0,0,2))*AVG_2_2_LEV_40 + (-rhoE_B0(0,0,1) + rhoE_B0(0,0,2))*AVG_2_2_LEV_44 +
            (-rhou0_B0(0,0,1) + rhou0_B0(0,0,2))*AVG_2_2_LEV_41 + (-rhou1_B0(0,0,1) + rhou1_B0(0,0,2))*AVG_2_2_LEV_42 +
            (-rhou2_B0(0,0,1) + rhou2_B0(0,0,2))*AVG_2_2_LEV_43;

       sigma_0_0 = ((fabs(ws_lambda_00) >= delta_TVD) ? (
   fabs(ws_lambda_00)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_00*ws_lambda_00))*invdelta_TVD
));

       sigma_0_1 = ((fabs(ws_lambda_11) >= delta_TVD) ? (
   fabs(ws_lambda_11)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_11*ws_lambda_11))*invdelta_TVD
));

       sigma_0_2 = ((fabs(ws_lambda_22) >= delta_TVD) ? (
   fabs(ws_lambda_22)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_22*ws_lambda_22))*invdelta_TVD
));

       sigma_0_3 = ((fabs(ws_lambda_33) >= delta_TVD) ? (
   fabs(ws_lambda_33)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_33*ws_lambda_33))*invdelta_TVD
));

       sigma_0_4 = ((fabs(ws_lambda_44) >= delta_TVD) ? (
   fabs(ws_lambda_44)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (ws_lambda_44*ws_lambda_44))*invdelta_TVD
));

      S = (alpha_01 > 0) ? 1 : ((alpha_01 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_00, 2*fabs(alpha_01)));

      t2 = fmin(fabs(alpha_01), 2*S*alpha_00);

      g_00 = S*fmax(t1, t2);

      S = (alpha_11 > 0) ? 1 : ((alpha_11 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_10, 2*fabs(alpha_11)));

      t2 = fmin(fabs(alpha_11), 2*S*alpha_10);

      g_10 = S*fmax(t1, t2);

      S = (alpha_21 > 0) ? 1 : ((alpha_21 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_20, 2*fabs(alpha_21)));

      t2 = fmin(fabs(alpha_21), 2*S*alpha_20);

      g_20 = S*fmax(t1, t2);

      S = (alpha_31 > 0) ? 1 : ((alpha_31 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_30, 2*fabs(alpha_31)));

      t2 = fmin(fabs(alpha_31), 2*S*alpha_30);

      g_30 = S*fmax(t1, t2);

      S = (alpha_41 > 0) ? 1 : ((alpha_41 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_40, 2*fabs(alpha_41)));

      t2 = fmin(fabs(alpha_41), 2*S*alpha_40);

      g_40 = S*fmax(t1, t2);

      S = (alpha_02 > 0) ? 1 : ((alpha_02 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_01, 2*fabs(alpha_02)));

      t2 = fmin(fabs(alpha_02), 2*S*alpha_01);

      g_01 = S*fmax(t1, t2);

      S = (alpha_12 > 0) ? 1 : ((alpha_12 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_11, 2*fabs(alpha_12)));

      t2 = fmin(fabs(alpha_12), 2*S*alpha_11);

      g_11 = S*fmax(t1, t2);

      S = (alpha_22 > 0) ? 1 : ((alpha_22 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_21, 2*fabs(alpha_22)));

      t2 = fmin(fabs(alpha_22), 2*S*alpha_21);

      g_21 = S*fmax(t1, t2);

      S = (alpha_32 > 0) ? 1 : ((alpha_32 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_31, 2*fabs(alpha_32)));

      t2 = fmin(fabs(alpha_32), 2*S*alpha_31);

      g_31 = S*fmax(t1, t2);

      S = (alpha_42 > 0) ? 1 : ((alpha_42 < 0) ? -1 : 0);

      t1 = fmax(0.0, fmin(S*alpha_41, 2*fabs(alpha_42)));

      t2 = fmin(fabs(alpha_42), 2*S*alpha_41);

      g_41 = S*fmax(t1, t2);

       gamma_0 = ((alpha_01 == 0) ? (
   0
)
: (
   (-g_00 + g_01)*alpha_01*sigma_0_0/((alpha_01*alpha_01) +
            eps_TVD)
));

       gamma_1 = ((alpha_11 == 0) ? (
   0
)
: (
   (-g_10 + g_11)*alpha_11*sigma_0_1/((alpha_11*alpha_11) +
            eps_TVD)
));

       gamma_2 = ((alpha_21 == 0) ? (
   0
)
: (
   (-g_20 + g_21)*alpha_21*sigma_0_2/((alpha_21*alpha_21) +
            eps_TVD)
));

       gamma_3 = ((alpha_31 == 0) ? (
   0
)
: (
   (-g_30 + g_31)*alpha_31*sigma_0_3/((alpha_31*alpha_31) +
            eps_TVD)
));

       gamma_4 = ((alpha_41 == 0) ? (
   0
)
: (
   (-g_40 + g_41)*alpha_41*sigma_0_4/((alpha_41*alpha_41) +
            eps_TVD)
));

       sigma_1_0 = ((fabs(gamma_0) >= delta_TVD) ? (
   fabs(gamma_0)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (gamma_0*gamma_0))*invdelta_TVD
));

       sigma_1_1 = ((fabs(gamma_1) >= delta_TVD) ? (
   fabs(gamma_1)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (gamma_1*gamma_1))*invdelta_TVD
));

       sigma_1_2 = ((fabs(gamma_2) >= delta_TVD) ? (
   fabs(gamma_2)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (gamma_2*gamma_2))*invdelta_TVD
));

       sigma_1_3 = ((fabs(gamma_3) >= delta_TVD) ? (
   fabs(gamma_3)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (gamma_3*gamma_3))*invdelta_TVD
));

       sigma_1_4 = ((fabs(gamma_4) >= delta_TVD) ? (
   fabs(gamma_4)
)
: (
  
            ((1.0/2.0))*(1.0/(invdelta_TVD*invdelta_TVD) + (gamma_4*gamma_4))*invdelta_TVD
));

      phi_0 = -fabs(sigma_0_0 + sigma_1_0)*alpha_01 + 0.5*(g_00 + g_01)*sigma_0_0;

      phi_1 = -fabs(sigma_0_1 + sigma_1_1)*alpha_11 + 0.5*(g_10 + g_11)*sigma_0_1;

      phi_2 = -fabs(sigma_0_2 + sigma_1_2)*alpha_21 + 0.5*(g_20 + g_21)*sigma_0_2;

      phi_3 = -fabs(sigma_0_3 + sigma_1_3)*alpha_31 + 0.5*(g_30 + g_31)*sigma_0_3;

      phi_4 = -fabs(sigma_0_4 + sigma_1_4)*alpha_41 + 0.5*(g_40 + g_41)*sigma_0_4;

      t1 = -fabs(alpha_00) + fabs(alpha_01);

      t2 = fabs(alpha_00) + fabs(alpha_01) + eps_TVD;

      theta_hat_00 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_10) + fabs(alpha_11);

      t2 = fabs(alpha_10) + fabs(alpha_11) + eps_TVD;

      theta_hat_10 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_20) + fabs(alpha_21);

      t2 = fabs(alpha_20) + fabs(alpha_21) + eps_TVD;

      theta_hat_20 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_30) + fabs(alpha_31);

      t2 = fabs(alpha_30) + fabs(alpha_31) + eps_TVD;

      theta_hat_30 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_40) + fabs(alpha_41);

      t2 = fabs(alpha_40) + fabs(alpha_41) + eps_TVD;

      theta_hat_40 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_01) + fabs(alpha_02);

      t2 = fabs(alpha_01) + fabs(alpha_02) + eps_TVD;

      theta_hat_01 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_11) + fabs(alpha_12);

      t2 = fabs(alpha_11) + fabs(alpha_12) + eps_TVD;

      theta_hat_11 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_21) + fabs(alpha_22);

      t2 = fabs(alpha_21) + fabs(alpha_22) + eps_TVD;

      theta_hat_21 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_31) + fabs(alpha_32);

      t2 = fabs(alpha_31) + fabs(alpha_32) + eps_TVD;

      theta_hat_31 = (fabs(t1/t2)*fabs(t1/t2));

      t1 = -fabs(alpha_41) + fabs(alpha_42);

      t2 = fabs(alpha_41) + fabs(alpha_42) + eps_TVD;

      theta_hat_41 = (fabs(t1/t2)*fabs(t1/t2));

      theta_0 = fmax(theta_hat_00, theta_hat_01);

      theta_1 = fmax(theta_hat_10, theta_hat_11);

      theta_2 = fmax(theta_hat_20, theta_hat_21);

      theta_3 = fmax(theta_hat_30, theta_hat_31);

      theta_4 = fmax(theta_hat_40, theta_hat_41);

      phi_star_0 = kappa_TVD*phi_0*theta_0;

      phi_star_1 = kappa_TVD*phi_1*theta_1;

      phi_star_2 = kappa_TVD*phi_2*theta_2;

      phi_star_3 = kappa_TVD*phi_3*theta_3;

      phi_star_4 = kappa_TVD*phi_4*theta_4;

      rho_RKold_B0(0,0,0) = 0.5*(AVG_2_REV_02*phi_star_2 + AVG_2_REV_03*phi_star_3 + AVG_2_REV_04*phi_star_4);

       rhou0_RKold_B0(0,0,0) = 0.5*(AVG_2_REV_11*phi_star_1 + AVG_2_REV_12*phi_star_2 + AVG_2_REV_13*phi_star_3 +
            AVG_2_REV_14*phi_star_4);

       rhou1_RKold_B0(0,0,0) = 0.5*(AVG_2_REV_20*phi_star_0 + AVG_2_REV_22*phi_star_2 + AVG_2_REV_23*phi_star_3 +
            AVG_2_REV_24*phi_star_4);

      rhou2_RKold_B0(0,0,0) = 0.5*(AVG_2_REV_32*phi_star_2 + AVG_2_REV_33*phi_star_3 + AVG_2_REV_34*phi_star_4);

       rhoE_RKold_B0(0,0,0) = 0.5*(AVG_2_REV_40*phi_star_0 + AVG_2_REV_41*phi_star_1 + AVG_2_REV_42*phi_star_2 +
            AVG_2_REV_43*phi_star_3 + AVG_2_REV_44*phi_star_4);

   }

   else{

      rho_RKold_B0(0,0,0) = 0.0;

      rhou0_RKold_B0(0,0,0) = 0.0;

      rhou1_RKold_B0(0,0,0) = 0.0;

      rhou2_RKold_B0(0,0,0) = 0.0;

      rhoE_RKold_B0(0,0,0) = 0.0;

   }

}

 void opensbliblock00Kernel067(const ACC<double> &Residual0_B0, const ACC<double> &Residual1_B0, const ACC<double>
&Residual2_B0, const ACC<double> &Residual3_B0, const ACC<double> &Residual4_B0, const ACC<double> &kappa_B0, const
ACC<double> &rhoE_RKold_B0, const ACC<double> &rho_RKold_B0, const ACC<double> &rhou0_RKold_B0, const ACC<double>
&rhou1_RKold_B0, const ACC<double> &rhou2_RKold_B0, const ACC<double> &wk0_B0, const ACC<double> &wk1_B0, const
ACC<double> &wk2_B0, const ACC<double> &wk3_B0, const ACC<double> &wk4_B0, ACC<double> &TVD_filter_B0, ACC<double>
&rhoE_B0, ACC<double> &rho_B0, ACC<double> &rhou0_B0, ACC<double> &rhou1_B0, ACC<double> &rhou2_B0, const int *idx)
{
   double Grid_0 = 0.0;
   double Grid_1 = 0.0;
   double Grid_2 = 0.0;
   double Wall = 0.0;
   Grid_0 = idx[0];

   Grid_1 = idx[1];

   Grid_2 = idx[2];

   Wall = ((Grid_1 <= 5) ? (
   0
)
: (
   1
));

    TVD_filter_B0(0,0,0) = ((fmax(kappa_B0(1,0,0), fmax(kappa_B0(0,-1,0), fmax(kappa_B0(0,0,-1), fmax(kappa_B0(0,1,0),
      fmax(kappa_B0(0,0,1), fmax(kappa_B0(-1,0,0), kappa_B0(0,0,0))))))) >= Ducros_select) ? (
   1
)
: (
   0.0
));

    rho_B0(0,0,0) = (-(-wk0_B0(-1,0,0) + wk0_B0(0,0,0))*invDelta0block0 - (-rho_RKold_B0(0,0,-1) +
      rho_RKold_B0(0,0,0))*invDelta2block0 - (-Residual0_B0(0,-1,0) +
      Residual0_B0(0,0,0))*invDelta1block0*Wall)*dt*TVD_filter_B0(0,0,0) + rho_B0(0,0,0);

    rhou0_B0(0,0,0) = (-(-wk1_B0(-1,0,0) + wk1_B0(0,0,0))*invDelta0block0 - (-rhou0_RKold_B0(0,0,-1) +
      rhou0_RKold_B0(0,0,0))*invDelta2block0 - (-Residual1_B0(0,-1,0) +
      Residual1_B0(0,0,0))*invDelta1block0*Wall)*dt*TVD_filter_B0(0,0,0) + rhou0_B0(0,0,0);

    rhou1_B0(0,0,0) = (-(-wk2_B0(-1,0,0) + wk2_B0(0,0,0))*invDelta0block0 - (-rhou1_RKold_B0(0,0,-1) +
      rhou1_RKold_B0(0,0,0))*invDelta2block0 - (-Residual2_B0(0,-1,0) +
      Residual2_B0(0,0,0))*invDelta1block0*Wall)*dt*TVD_filter_B0(0,0,0) + rhou1_B0(0,0,0);

    rhou2_B0(0,0,0) = (-(-wk3_B0(-1,0,0) + wk3_B0(0,0,0))*invDelta0block0 - (-rhou2_RKold_B0(0,0,-1) +
      rhou2_RKold_B0(0,0,0))*invDelta2block0 - (-Residual3_B0(0,-1,0) +
      Residual3_B0(0,0,0))*invDelta1block0*Wall)*dt*TVD_filter_B0(0,0,0) + rhou2_B0(0,0,0);

    rhoE_B0(0,0,0) = (-(-wk4_B0(-1,0,0) + wk4_B0(0,0,0))*invDelta0block0 - (-rhoE_RKold_B0(0,0,-1) +
      rhoE_RKold_B0(0,0,0))*invDelta2block0 - (-Residual4_B0(0,-1,0) +
      Residual4_B0(0,0,0))*invDelta1block0*Wall)*dt*TVD_filter_B0(0,0,0) + rhoE_B0(0,0,0);

}

#endif
