//
// auto-generated by ops.py
//
void ops_init_backend();
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include "constants.h"
#define OPS_3D
#include  "ops_lib_core.h"

//
// ops_par_loop declarations
//

void ops_par_loop_opensbliblock00Kernel042(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel045(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel046(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel047(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel048(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel049(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel056(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel036(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel037(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel038(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel039(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel005(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel007(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel009(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel020(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel011(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel026(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel004(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel006(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel008(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel010(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel012(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel013(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel014(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel015(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel016(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel017(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel018(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel019(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel034(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel035(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel068(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel057(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel061(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel062(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel063(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel064(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel065(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel066(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );

void ops_par_loop_opensbliblock00Kernel067(char const *, ops_block, int , int*,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg,
  ops_arg );


#include "opensbliblock00_kernels.h"
#include "io.h"
int main(int argc, char **argv)
{

ops_init(argc,argv,1);
  ops_init_backend();

restart = 0;

block0np0 = 400;
block0np1 = 200;
block0np2 = 100;
Delta0block0 = 400.0/(block0np0-1);
Delta1block0 = 115.0/(block0np1-1);
Delta2block0 = 20.0/(block0np2-1);
niter = 1;
double rkB[] = {(1.0/3.0), (15.0/16.0), (8.0/15.0)};
double rkA[] = {0, (-5.0/9.0), (-153.0/128.0)};
dt = 0.01;
Minf = 4.0;
Twall = 1.37;
write_output_file = 50000;
HDF5_timing = 0;
SuthT = 110.4;
RefT = 439.0;
gama = 1.4;
a = 20.0;
Pr = 0.72;
Re = 4000.0;
delta_TVD = 0.500000000000000;
eps_TVD = 1.00000000000000e-8;
kappa_TVD = 0.3;
gamma_m1 = -1 + gama;
Ducros_check = 0.0500000000000000;
Ducros_select = 0.0500000000000000;
phi_1 = 3.141;
omega_2 = 0.4;
omega_0 = 0.1;
phi_0 = 1.571;
tripA = 0.05;
omega_3 = 1.0;
beta_0 = 0.628;
omega_1 = 0.2;
phi_2 = 4.712;
xts = 50.0;
b_f = 0.002;
L = 400.0;
H = 115.0;
b = 5.0;
inv2Delta0block0 = 1.0/(Delta0block0*Delta0block0);
inv2Delta1block0 = 1.0/(Delta1block0*Delta1block0);
inv2Delta2block0 = 1.0/(Delta2block0*Delta2block0);
inv2Minf = 1.0/(Minf*Minf);
inv2a = 1.0/(a*a);
invDelta0block0 = 1.0/(Delta0block0);
invDelta1block0 = 1.0/(Delta1block0);
invDelta2block0 = 1.0/(Delta2block0);
invH = 1.0/(H);
invPr = 1.0/(Pr);
invRe = 1.0/(Re);
invRefT = 1.0/(RefT);
inv_gamma_m1 = 1.0/((-1 + gama));
invdelta_TVD = 1.0/(delta_TVD);
invgama = 1.0/(gama);
invgamma_m1 = 1.0/(gamma_m1);
ops_decl_const("Delta0block0" , 1, "double", &Delta0block0);
ops_decl_const("Delta1block0" , 1, "double", &Delta1block0);
ops_decl_const("Delta2block0" , 1, "double", &Delta2block0);
ops_decl_const("Ducros_check" , 1, "double", &Ducros_check);
ops_decl_const("Ducros_select" , 1, "double", &Ducros_select);
ops_decl_const("H" , 1, "double", &H);
ops_decl_const("HDF5_timing" , 1, "int", &HDF5_timing);
ops_decl_const("L" , 1, "double", &L);
ops_decl_const("Minf" , 1, "double", &Minf);
ops_decl_const("Pr" , 1, "double", &Pr);
ops_decl_const("Re" , 1, "double", &Re);
ops_decl_const("RefT" , 1, "double", &RefT);
ops_decl_const("SuthT" , 1, "double", &SuthT);
ops_decl_const("Twall" , 1, "double", &Twall);
ops_decl_const("a" , 1, "double", &a);
ops_decl_const("b" , 1, "double", &b);
ops_decl_const("b_f" , 1, "double", &b_f);
ops_decl_const("beta_0" , 1, "double", &beta_0);
ops_decl_const("block0np0" , 1, "int", &block0np0);
ops_decl_const("block0np1" , 1, "int", &block0np1);
ops_decl_const("block0np2" , 1, "int", &block0np2);
ops_decl_const("delta_TVD" , 1, "double", &delta_TVD);
ops_decl_const("dt" , 1, "double", &dt);
ops_decl_const("eps_TVD" , 1, "double", &eps_TVD);
ops_decl_const("gama" , 1, "double", &gama);
ops_decl_const("gamma_m1" , 1, "double", &gamma_m1);
ops_decl_const("inv2Delta0block0" , 1, "double", &inv2Delta0block0);
ops_decl_const("inv2Delta1block0" , 1, "double", &inv2Delta1block0);
ops_decl_const("inv2Delta2block0" , 1, "double", &inv2Delta2block0);
ops_decl_const("inv2Minf" , 1, "double", &inv2Minf);
ops_decl_const("inv2a" , 1, "double", &inv2a);
ops_decl_const("invDelta0block0" , 1, "double", &invDelta0block0);
ops_decl_const("invDelta1block0" , 1, "double", &invDelta1block0);
ops_decl_const("invDelta2block0" , 1, "double", &invDelta2block0);
ops_decl_const("invH" , 1, "double", &invH);
ops_decl_const("invPr" , 1, "double", &invPr);
ops_decl_const("invRe" , 1, "double", &invRe);
ops_decl_const("invRefT" , 1, "double", &invRefT);
ops_decl_const("inv_gamma_m1" , 1, "double", &inv_gamma_m1);
ops_decl_const("invdelta_TVD" , 1, "double", &invdelta_TVD);
ops_decl_const("invgama" , 1, "double", &invgama);
ops_decl_const("invgamma_m1" , 1, "double", &invgamma_m1);
ops_decl_const("kappa_TVD" , 1, "double", &kappa_TVD);
ops_decl_const("niter" , 1, "int", &niter);
ops_decl_const("omega_0" , 1, "double", &omega_0);
ops_decl_const("omega_1" , 1, "double", &omega_1);
ops_decl_const("omega_2" , 1, "double", &omega_2);
ops_decl_const("omega_3" , 1, "double", &omega_3);
ops_decl_const("phi_0" , 1, "double", &phi_0);
ops_decl_const("phi_1" , 1, "double", &phi_1);
ops_decl_const("phi_2" , 1, "double", &phi_2);
ops_decl_const("simulation_time" , 1, "double", &simulation_time);
ops_decl_const("start_iter" , 1, "int", &start_iter);
ops_decl_const("tripA" , 1, "double", &tripA);
ops_decl_const("write_output_file" , 1, "int", &write_output_file);
ops_decl_const("xts" , 1, "double", &xts);

ops_block opensbliblock00 = ops_decl_block(3, "opensbliblock00");
#include "defdec_data_set.h"

#include "stencils.h"
#include "bc_exchanges.h"

double partition_start0, elapsed_partition_start0, partition_end0, elapsed_partition_end0;
ops_timers(&partition_start0, &elapsed_partition_start0);
ops_partition("");
ops_timers(&partition_end0, &elapsed_partition_end0);
ops_printf("-----------------------------------------\n MPI partition and reading input file time: %lf\n -----------------------------------------\n", elapsed_partition_end0-elapsed_partition_start0);
fflush(stdout);


ops_printf("\033[1;32m");
if (restart == 1){
ops_printf("OpenSBLI is restarting from the input file: restart.h5\n");
}
else {
ops_printf("OpenSBLI is starting from the initial condition.\n");
}
ops_printf("\033[0m");

if (restart == 1){
ops_get_const_hdf5("simulation_time", 1, "double", (char*)&simulation_time, "restart.h5");
ops_get_const_hdf5("iter", 1, "int", (char*)&start_iter, "restart.h5");
}
else {
simulation_time = 0.0;
start_iter = 0;
}
tstart = simulation_time;

if (restart == 0){
int iteration_range_42_block0[] = {-5, block0np0 + 5, -5, block0np1 + 5, -5, block0np2 + 5};
ops_par_loop_opensbliblock00Kernel042("Similiarity solution laminar boundary-layer initialisation0", opensbliblock00, 3, iteration_range_42_block0,
             ops_arg_dat(rhoE_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(rho_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(rhou0_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(rhou1_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(rhou2_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(x0_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(x2_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(x1_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_idx());
}

int iteration_range_45_block0[] = {0, block0np0, 0, block0np1, 0, block0np2};
ops_par_loop_opensbliblock00Kernel045("MetricsEquation evaluation", opensbliblock00, 3, iteration_range_45_block0,
             ops_arg_dat(x0_B0, 1, stencil_0_44_24_00_31, "double", OPS_READ),
             ops_arg_dat(x1_B0, 1, stencil_0_44_24_00_31, "double", OPS_READ),
             ops_arg_dat(D00_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(D01_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(D10_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(D11_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(detJ_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(wk0_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(wk1_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(wk3_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(wk4_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_idx());

int iteration_range_46_block0[] = {0, 1, -2, block0np1 + 2, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel046("Metric_copy_block0 boundary dir0 side0", opensbliblock00, 3, iteration_range_46_block0,
             ops_arg_dat(D00_B0, 1, stencil_0_22_00_00_8, "double", OPS_RW),
             ops_arg_dat(D01_B0, 1, stencil_0_22_00_00_8, "double", OPS_RW),
             ops_arg_dat(D10_B0, 1, stencil_0_22_00_00_8, "double", OPS_RW),
             ops_arg_dat(D11_B0, 1, stencil_0_22_00_00_8, "double", OPS_RW),
             ops_arg_dat(detJ_B0, 1, stencil_0_22_00_00_8, "double", OPS_RW));

int iteration_range_47_block0[] = {block0np0 - 1, block0np0, -2, block0np1 + 2, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel047("Metric_copy_block0 boundary dir0 side1", opensbliblock00, 3, iteration_range_47_block0,
             ops_arg_dat(D00_B0, 1, stencil_0_22_00_00_8, "double", OPS_RW),
             ops_arg_dat(D01_B0, 1, stencil_0_22_00_00_8, "double", OPS_RW),
             ops_arg_dat(D10_B0, 1, stencil_0_22_00_00_8, "double", OPS_RW),
             ops_arg_dat(D11_B0, 1, stencil_0_22_00_00_8, "double", OPS_RW),
             ops_arg_dat(detJ_B0, 1, stencil_0_22_00_00_8, "double", OPS_RW));

int iteration_range_48_block0[] = {-2, block0np0 + 2, 0, 1, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel048("Metric_copy_block0 boundary dir1 side0", opensbliblock00, 3, iteration_range_48_block0,
             ops_arg_dat(D00_B0, 1, stencil_0_00_22_00_8, "double", OPS_RW),
             ops_arg_dat(D01_B0, 1, stencil_0_00_22_00_8, "double", OPS_RW),
             ops_arg_dat(D10_B0, 1, stencil_0_00_22_00_8, "double", OPS_RW),
             ops_arg_dat(D11_B0, 1, stencil_0_00_22_00_8, "double", OPS_RW),
             ops_arg_dat(detJ_B0, 1, stencil_0_00_22_00_8, "double", OPS_RW));

int iteration_range_49_block0[] = {-2, block0np0 + 2, block0np1 - 1, block0np1, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel049("Metric_copy_block0 boundary dir1 side1", opensbliblock00, 3, iteration_range_49_block0,
             ops_arg_dat(D00_B0, 1, stencil_0_00_22_00_8, "double", OPS_RW),
             ops_arg_dat(D01_B0, 1, stencil_0_00_22_00_8, "double", OPS_RW),
             ops_arg_dat(D10_B0, 1, stencil_0_00_22_00_8, "double", OPS_RW),
             ops_arg_dat(D11_B0, 1, stencil_0_00_22_00_8, "double", OPS_RW),
             ops_arg_dat(detJ_B0, 1, stencil_0_00_22_00_8, "double", OPS_RW));

ops_halo_transfer(periodicBC_direction2_side0_50_block0);
ops_halo_transfer(periodicBC_direction2_side1_51_block0);
int iteration_range_56_block0[] = {0, block0np0, 0, block0np1, 0, block0np2};
ops_par_loop_opensbliblock00Kernel056("MetricsEquation evaluation", opensbliblock00, 3, iteration_range_56_block0,
             ops_arg_dat(D00_B0, 1, stencil_0_44_24_00_31, "double", OPS_READ),
             ops_arg_dat(D01_B0, 1, stencil_0_44_24_00_31, "double", OPS_READ),
             ops_arg_dat(D10_B0, 1, stencil_0_44_24_00_31, "double", OPS_READ),
             ops_arg_dat(D11_B0, 1, stencil_0_44_24_00_31, "double", OPS_READ),
             ops_arg_dat(SD000_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(SD001_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(SD010_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(SD011_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(SD100_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(SD101_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(SD110_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(SD111_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_idx());


double cpu_start0, elapsed_start0, cpu_end0, elapsed_end0;
ops_timers(&cpu_start0, &elapsed_start0);
double inner_start, elapsed_inner_start;
double inner_end, elapsed_inner_end;
ops_timers(&inner_start, &elapsed_inner_start);
for(iter=start_iter; iter<=start_iter+niter - 1; iter++)
{
simulation_time = tstart + dt*((iter - start_iter)+1);
if(fmod(iter+1, 10) == 0){
        ops_timers(&inner_end, &elapsed_inner_end);
        ops_printf("Iteration: %d. Time-step: %.3e. Simulation time: %.5f. Time/iteration: %lf.\n", iter+1, dt, simulation_time, (elapsed_inner_end - elapsed_inner_start)/10);
        fflush(stdout);
        ops_NaNcheck(rho_B0);
        ops_timers(&inner_start, &elapsed_inner_start);
}

int iteration_range_36_block0[] = {0, 1, -2, block0np1 + 2, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel036("InletTransfer boundary dir0 side0", opensbliblock00, 3, iteration_range_36_block0,
             ops_arg_dat(rhoE_B0, 1, stencil_0_10_00_00_5, "double", OPS_RW),
             ops_arg_dat(rho_B0, 1, stencil_0_10_00_00_5, "double", OPS_RW),
             ops_arg_dat(rhou0_B0, 1, stencil_0_10_00_00_5, "double", OPS_RW),
             ops_arg_dat(rhou1_B0, 1, stencil_0_10_00_00_5, "double", OPS_RW),
             ops_arg_dat(rhou2_B0, 1, stencil_0_10_00_00_5, "double", OPS_RW));

int iteration_range_37_block0[] = {block0np0 - 1, block0np0, -2, block0np1 + 2, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel037("Extrapolation boundary dir0 side1", opensbliblock00, 3, iteration_range_37_block0,
             ops_arg_dat(rhoE_B0, 1, stencil_0_12_00_00_9, "double", OPS_RW),
             ops_arg_dat(rho_B0, 1, stencil_0_12_00_00_9, "double", OPS_RW),
             ops_arg_dat(rhou0_B0, 1, stencil_0_12_00_00_9, "double", OPS_RW),
             ops_arg_dat(rhou1_B0, 1, stencil_0_12_00_00_9, "double", OPS_RW),
             ops_arg_dat(rhou2_B0, 1, stencil_0_12_00_00_9, "double", OPS_RW));

int iteration_range_38_block0[] = {-2, block0np0 + 2, 0, 1, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel038("ForcingStripWall boundary dir1 side0", opensbliblock00, 3, iteration_range_38_block0,
             ops_arg_gbl(&iter, 1, "int", OPS_READ),
             ops_arg_dat(x0_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(x2_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(rhoE_B0, 1, stencil_0_00_21_00_9, "double", OPS_RW),
             ops_arg_dat(rho_B0, 1, stencil_0_00_22_00_11, "double", OPS_RW),
             ops_arg_dat(rhou0_B0, 1, stencil_0_00_22_00_11, "double", OPS_RW),
             ops_arg_dat(rhou1_B0, 1, stencil_0_00_22_00_11, "double", OPS_RW),
             ops_arg_dat(rhou2_B0, 1, stencil_0_00_22_00_11, "double", OPS_RW));

int iteration_range_39_block0[] = {-2, block0np0 + 2, block0np1 - 1, block0np1, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel039("ZeroGradientOutlet boundary dir1 side1", opensbliblock00, 3, iteration_range_39_block0,
             ops_arg_dat(rhoE_B0, 1, stencil_0_00_22_00_11, "double", OPS_RW),
             ops_arg_dat(rho_B0, 1, stencil_0_00_22_00_11, "double", OPS_RW),
             ops_arg_dat(rhou0_B0, 1, stencil_0_00_22_00_11, "double", OPS_RW),
             ops_arg_dat(rhou1_B0, 1, stencil_0_00_22_00_11, "double", OPS_RW),
             ops_arg_dat(rhou2_B0, 1, stencil_0_00_22_00_11, "double", OPS_RW));

ops_halo_transfer(periodicBC_direction2_side0_40_block0);
ops_halo_transfer(periodicBC_direction2_side1_41_block0);
for(stage=0; stage<=2; stage++)
{
int iteration_range_5_block0[] = {-2, block0np0 + 2, -2, block0np1 + 2, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel005("CRu0_B0", opensbliblock00, 3, iteration_range_5_block0,
             ops_arg_dat(rho_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(rhou0_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(u0_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE));

int iteration_range_7_block0[] = {-2, block0np0 + 2, -2, block0np1 + 2, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel007("CRu1_B0", opensbliblock00, 3, iteration_range_7_block0,
             ops_arg_dat(rho_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(rhou1_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(u1_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE));

int iteration_range_9_block0[] = {-2, block0np0 + 2, -2, block0np1 + 2, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel009("CRu2_B0", opensbliblock00, 3, iteration_range_9_block0,
             ops_arg_dat(rho_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(rhou2_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(u2_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE));

int iteration_range_20_block0[] = {-2, block0np0 + 2, -2, block0np1 + 2, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel020("CRp_B0", opensbliblock00, 3, iteration_range_20_block0,
             ops_arg_dat(rhoE_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(rho_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(u0_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(u1_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(u2_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(p_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE));

int iteration_range_11_block0[] = {-2, block0np0 + 2, -2, block0np1 + 2, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel011("CRT_B0", opensbliblock00, 3, iteration_range_11_block0,
             ops_arg_dat(p_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(rho_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(T_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE));

int iteration_range_26_block0[] = {-2, block0np0 + 2, -2, block0np1 + 2, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel026("CRmu_B0", opensbliblock00, 3, iteration_range_26_block0,
             ops_arg_dat(T_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(mu_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE));

int iteration_range_4_block0[] = {0, block0np0, -2, block0np1 + 2, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel004("Derivative evaluation CD u0_B0 xi0 ", opensbliblock00, 3, iteration_range_4_block0,
             ops_arg_dat(u0_B0, 1, stencil_0_44_00_00_19, "double", OPS_READ),
             ops_arg_dat(wk0_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_idx());

int iteration_range_6_block0[] = {0, block0np0, -2, block0np1 + 2, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel006("Derivative evaluation CD u1_B0 xi0 ", opensbliblock00, 3, iteration_range_6_block0,
             ops_arg_dat(u1_B0, 1, stencil_0_44_00_00_19, "double", OPS_READ),
             ops_arg_dat(wk1_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_idx());

int iteration_range_8_block0[] = {0, block0np0, -2, block0np1 + 2, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel008("Derivative evaluation CD u2_B0 xi0 ", opensbliblock00, 3, iteration_range_8_block0,
             ops_arg_dat(u2_B0, 1, stencil_0_44_00_00_19, "double", OPS_READ),
             ops_arg_dat(wk2_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_idx());

int iteration_range_10_block0[] = {0, block0np0, -2, block0np1 + 2, 0, block0np2};
ops_par_loop_opensbliblock00Kernel010("Derivative evaluation CD T_B0 xi0 ", opensbliblock00, 3, iteration_range_10_block0,
             ops_arg_dat(T_B0, 1, stencil_0_44_00_00_19, "double", OPS_READ),
             ops_arg_dat(wk3_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_idx());

int iteration_range_12_block0[] = {0, block0np0, 0, block0np1, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel012("Derivative evaluation CD u0_B0 xi1 ", opensbliblock00, 3, iteration_range_12_block0,
             ops_arg_dat(u0_B0, 1, stencil_0_00_24_00_15, "double", OPS_READ),
             ops_arg_dat(wk4_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_idx());

int iteration_range_13_block0[] = {0, block0np0, 0, block0np1, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel013("Derivative evaluation CD u1_B0 xi1 ", opensbliblock00, 3, iteration_range_13_block0,
             ops_arg_dat(u1_B0, 1, stencil_0_00_24_00_15, "double", OPS_READ),
             ops_arg_dat(wk5_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_idx());

int iteration_range_14_block0[] = {0, block0np0, 0, block0np1, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel014("Derivative evaluation CD u2_B0 xi1 ", opensbliblock00, 3, iteration_range_14_block0,
             ops_arg_dat(u2_B0, 1, stencil_0_00_24_00_15, "double", OPS_READ),
             ops_arg_dat(wk6_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_idx());

int iteration_range_15_block0[] = {0, block0np0, 0, block0np1, 0, block0np2};
ops_par_loop_opensbliblock00Kernel015("Derivative evaluation CD T_B0 xi1 ", opensbliblock00, 3, iteration_range_15_block0,
             ops_arg_dat(T_B0, 1, stencil_0_00_24_00_15, "double", OPS_READ),
             ops_arg_dat(wk7_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_idx());

int iteration_range_16_block0[] = {0, block0np0, 0, block0np1, 0, block0np2};
ops_par_loop_opensbliblock00Kernel016("Derivative evaluation CD u0_B0 xi2 ", opensbliblock00, 3, iteration_range_16_block0,
             ops_arg_dat(u0_B0, 1, stencil_0_00_00_22_8, "double", OPS_READ),
             ops_arg_dat(wk8_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE));

int iteration_range_17_block0[] = {0, block0np0, 0, block0np1, 0, block0np2};
ops_par_loop_opensbliblock00Kernel017("Derivative evaluation CD u1_B0 xi2 ", opensbliblock00, 3, iteration_range_17_block0,
             ops_arg_dat(u1_B0, 1, stencil_0_00_00_22_8, "double", OPS_READ),
             ops_arg_dat(wk9_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE));

int iteration_range_18_block0[] = {0, block0np0, 0, block0np1, 0, block0np2};
ops_par_loop_opensbliblock00Kernel018("Derivative evaluation CD u2_B0 xi2 ", opensbliblock00, 3, iteration_range_18_block0,
             ops_arg_dat(u2_B0, 1, stencil_0_00_00_22_8, "double", OPS_READ),
             ops_arg_dat(wk10_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE));

int iteration_range_19_block0[] = {0, block0np0, 0, block0np1, 0, block0np2};
ops_par_loop_opensbliblock00Kernel019("Derivative evaluation CD T_B0 xi2 ", opensbliblock00, 3, iteration_range_19_block0,
             ops_arg_dat(T_B0, 1, stencil_0_00_00_22_8, "double", OPS_READ),
             ops_arg_dat(wk11_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE));

int iteration_range_34_block0[] = {0, block0np0, 0, block0np1, 0, block0np2};
ops_par_loop_opensbliblock00Kernel034("Convective terms", opensbliblock00, 3, iteration_range_34_block0,
             ops_arg_dat(D00_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(D01_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(D10_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(D11_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(p_B0, 1, stencil_0_44_24_22_39, "double", OPS_READ),
             ops_arg_dat(rhoE_B0, 1, stencil_0_44_24_22_39, "double", OPS_READ),
             ops_arg_dat(rho_B0, 1, stencil_0_44_24_22_39, "double", OPS_READ),
             ops_arg_dat(rhou0_B0, 1, stencil_0_44_24_22_39, "double", OPS_READ),
             ops_arg_dat(rhou1_B0, 1, stencil_0_44_24_22_39, "double", OPS_READ),
             ops_arg_dat(rhou2_B0, 1, stencil_0_44_24_22_39, "double", OPS_READ),
             ops_arg_dat(u0_B0, 1, stencil_0_44_24_22_39, "double", OPS_READ),
             ops_arg_dat(u1_B0, 1, stencil_0_44_24_22_39, "double", OPS_READ),
             ops_arg_dat(u2_B0, 1, stencil_0_44_24_22_39, "double", OPS_READ),
             ops_arg_dat(wk0_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(wk10_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(wk1_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(wk2_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(wk4_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(wk5_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(wk6_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(wk8_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(wk9_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(Residual0_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(Residual1_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(Residual2_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(Residual3_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(Residual4_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_idx());

int iteration_range_35_block0[] = {0, block0np0, 0, block0np1, 0, block0np2};
ops_par_loop_opensbliblock00Kernel035("Viscous terms", opensbliblock00, 3, iteration_range_35_block0,
             ops_arg_dat(D00_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(D01_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(D10_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(D11_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(SD000_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(SD001_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(SD010_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(SD011_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(SD100_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(SD101_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(SD110_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(SD111_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(T_B0, 1, stencil_0_44_24_22_39, "double", OPS_READ),
             ops_arg_dat(mu_B0, 1, stencil_0_44_24_22_39, "double", OPS_READ),
             ops_arg_dat(u0_B0, 1, stencil_0_44_24_22_39, "double", OPS_READ),
             ops_arg_dat(u1_B0, 1, stencil_0_44_24_22_39, "double", OPS_READ),
             ops_arg_dat(u2_B0, 1, stencil_0_44_24_22_39, "double", OPS_READ),
             ops_arg_dat(wk0_B0, 1, stencil_0_00_24_22_23, "double", OPS_READ),
             ops_arg_dat(wk10_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(wk11_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(wk1_B0, 1, stencil_0_00_24_22_23, "double", OPS_READ),
             ops_arg_dat(wk2_B0, 1, stencil_0_00_24_22_23, "double", OPS_READ),
             ops_arg_dat(wk3_B0, 1, stencil_0_00_24_00_15, "double", OPS_READ),
             ops_arg_dat(wk4_B0, 1, stencil_0_00_00_22_11, "double", OPS_READ),
             ops_arg_dat(wk5_B0, 1, stencil_0_00_00_22_11, "double", OPS_READ),
             ops_arg_dat(wk6_B0, 1, stencil_0_00_00_22_11, "double", OPS_READ),
             ops_arg_dat(wk7_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(wk8_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(wk9_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(Residual1_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_dat(Residual2_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_dat(Residual3_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_dat(Residual4_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_idx());

int iteration_range_68_block0[] = {0, block0np0, 0, block0np1, 0, block0np2};
ops_par_loop_opensbliblock00Kernel068("Temporal solution advancement", opensbliblock00, 3, iteration_range_68_block0,
             ops_arg_dat(Residual0_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(Residual1_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(Residual2_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(Residual3_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(Residual4_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(rhoE_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_dat(rhoE_RKold_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_dat(rho_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_dat(rho_RKold_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_dat(rhou0_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_dat(rhou0_RKold_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_dat(rhou1_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_dat(rhou1_RKold_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_dat(rhou2_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_dat(rhou2_RKold_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_gbl(&rkA[stage], 1, "double", OPS_READ),
             ops_arg_gbl(&rkB[stage], 1, "double", OPS_READ));

int iteration_range_36_block0[] = {0, 1, -2, block0np1 + 2, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel036("InletTransfer boundary dir0 side0", opensbliblock00, 3, iteration_range_36_block0,
             ops_arg_dat(rhoE_B0, 1, stencil_0_10_00_00_5, "double", OPS_RW),
             ops_arg_dat(rho_B0, 1, stencil_0_10_00_00_5, "double", OPS_RW),
             ops_arg_dat(rhou0_B0, 1, stencil_0_10_00_00_5, "double", OPS_RW),
             ops_arg_dat(rhou1_B0, 1, stencil_0_10_00_00_5, "double", OPS_RW),
             ops_arg_dat(rhou2_B0, 1, stencil_0_10_00_00_5, "double", OPS_RW));

int iteration_range_37_block0[] = {block0np0 - 1, block0np0, -2, block0np1 + 2, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel037("Extrapolation boundary dir0 side1", opensbliblock00, 3, iteration_range_37_block0,
             ops_arg_dat(rhoE_B0, 1, stencil_0_12_00_00_9, "double", OPS_RW),
             ops_arg_dat(rho_B0, 1, stencil_0_12_00_00_9, "double", OPS_RW),
             ops_arg_dat(rhou0_B0, 1, stencil_0_12_00_00_9, "double", OPS_RW),
             ops_arg_dat(rhou1_B0, 1, stencil_0_12_00_00_9, "double", OPS_RW),
             ops_arg_dat(rhou2_B0, 1, stencil_0_12_00_00_9, "double", OPS_RW));

int iteration_range_38_block0[] = {-2, block0np0 + 2, 0, 1, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel038("ForcingStripWall boundary dir1 side0", opensbliblock00, 3, iteration_range_38_block0,
             ops_arg_gbl(&iter, 1, "int", OPS_READ),
             ops_arg_dat(x0_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(x2_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(rhoE_B0, 1, stencil_0_00_21_00_9, "double", OPS_RW),
             ops_arg_dat(rho_B0, 1, stencil_0_00_22_00_11, "double", OPS_RW),
             ops_arg_dat(rhou0_B0, 1, stencil_0_00_22_00_11, "double", OPS_RW),
             ops_arg_dat(rhou1_B0, 1, stencil_0_00_22_00_11, "double", OPS_RW),
             ops_arg_dat(rhou2_B0, 1, stencil_0_00_22_00_11, "double", OPS_RW));

int iteration_range_39_block0[] = {-2, block0np0 + 2, block0np1 - 1, block0np1, -2, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel039("ZeroGradientOutlet boundary dir1 side1", opensbliblock00, 3, iteration_range_39_block0,
             ops_arg_dat(rhoE_B0, 1, stencil_0_00_22_00_11, "double", OPS_RW),
             ops_arg_dat(rho_B0, 1, stencil_0_00_22_00_11, "double", OPS_RW),
             ops_arg_dat(rhou0_B0, 1, stencil_0_00_22_00_11, "double", OPS_RW),
             ops_arg_dat(rhou1_B0, 1, stencil_0_00_22_00_11, "double", OPS_RW),
             ops_arg_dat(rhou2_B0, 1, stencil_0_00_22_00_11, "double", OPS_RW));

ops_halo_transfer(periodicBC_direction2_side0_40_block0);
ops_halo_transfer(periodicBC_direction2_side1_41_block0);
}
int iteration_range_57_block0[] = {-1, block0np0 + 2, -1, block0np1 + 2, -1, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel057("User kernel: Constituent Relations evaluation", opensbliblock00, 3, iteration_range_57_block0,
             ops_arg_dat(rhoE_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(rho_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(rhou0_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(rhou1_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(rhou2_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(a_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(kappa_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(u0_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(u1_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(u2_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(p_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW));

int iteration_range_61_block0[] = {0, block0np0, 0, block0np1, 0, block0np2};
ops_par_loop_opensbliblock00Kernel061("UserDefinedEquations evaluation", opensbliblock00, 3, iteration_range_61_block0,
             ops_arg_dat(D00_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(D01_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(D10_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(D11_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(u0_B0, 1, stencil_0_44_24_22_39, "double", OPS_READ),
             ops_arg_dat(u1_B0, 1, stencil_0_44_24_22_39, "double", OPS_READ),
             ops_arg_dat(u2_B0, 1, stencil_0_44_24_22_39, "double", OPS_READ),
             ops_arg_dat(kappa_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_idx());

int iteration_range_62_block0[] = {-1, block0np0 + 2, -1, block0np1 + 2, -1, block0np2 + 2};
ops_par_loop_opensbliblock00Kernel062("User kernel: Constituent Relations evaluation", opensbliblock00, 3, iteration_range_62_block0,
             ops_arg_dat(rhoE_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(rho_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(rhou0_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(rhou1_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(rhou2_B0, 1, stencil_0_00_00_00_3, "double", OPS_READ),
             ops_arg_dat(a_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(u0_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(u1_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(u2_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(p_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW));

int iteration_range_63_block0[] = {-5, block0np0 + 5, -5, block0np1 + 5, -5, block0np2 + 5};
ops_par_loop_opensbliblock00Kernel063("User kernel: Zero the work arrays", opensbliblock00, 3, iteration_range_63_block0,
             ops_arg_dat(Residual0_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(Residual1_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(Residual2_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(Residual3_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(Residual4_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(rhoE_RKold_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(rho_RKold_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(rhou0_RKold_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(rhou1_RKold_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(rhou2_RKold_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(wk0_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(wk1_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(wk2_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(wk3_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(wk4_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE));

int iteration_range_64_block0[] = {-1, block0np0 + 1, 0, block0np1, 0, block0np2};
ops_par_loop_opensbliblock00Kernel064("User kernel: TVD reconstruction direction 0", opensbliblock00, 3, iteration_range_64_block0,
             ops_arg_dat(D00_B0, 1, stencil_0_01_00_00_5, "double", OPS_READ),
             ops_arg_dat(D01_B0, 1, stencil_0_01_00_00_5, "double", OPS_READ),
             ops_arg_dat(a_B0, 1, stencil_0_12_00_00_9, "double", OPS_READ),
             ops_arg_dat(detJ_B0, 1, stencil_0_01_00_00_5, "double", OPS_READ),
             ops_arg_dat(kappa_B0, 1, stencil_0_32_00_00_13, "double", OPS_READ),
             ops_arg_dat(rhoE_B0, 1, stencil_0_12_00_00_9, "double", OPS_READ),
             ops_arg_dat(rho_B0, 1, stencil_0_12_00_00_9, "double", OPS_READ),
             ops_arg_dat(rhou0_B0, 1, stencil_0_12_00_00_9, "double", OPS_READ),
             ops_arg_dat(rhou1_B0, 1, stencil_0_12_00_00_9, "double", OPS_READ),
             ops_arg_dat(rhou2_B0, 1, stencil_0_12_00_00_9, "double", OPS_READ),
             ops_arg_dat(u0_B0, 1, stencil_0_12_00_00_9, "double", OPS_READ),
             ops_arg_dat(u1_B0, 1, stencil_0_12_00_00_9, "double", OPS_READ),
             ops_arg_dat(u2_B0, 1, stencil_0_12_00_00_9, "double", OPS_READ),
             ops_arg_dat(wk0_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(wk1_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(wk2_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(wk3_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(wk4_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE));

int iteration_range_65_block0[] = {0, block0np0, -1, block0np1 + 1, 0, block0np2};
ops_par_loop_opensbliblock00Kernel065("User kernel: TVD reconstruction direction 1", opensbliblock00, 3, iteration_range_65_block0,
             ops_arg_dat(D10_B0, 1, stencil_0_00_01_00_5, "double", OPS_READ),
             ops_arg_dat(D11_B0, 1, stencil_0_00_01_00_5, "double", OPS_READ),
             ops_arg_dat(a_B0, 1, stencil_0_00_12_00_9, "double", OPS_READ),
             ops_arg_dat(detJ_B0, 1, stencil_0_00_01_00_5, "double", OPS_READ),
             ops_arg_dat(kappa_B0, 1, stencil_0_00_32_00_13, "double", OPS_READ),
             ops_arg_dat(rhoE_B0, 1, stencil_0_00_12_00_9, "double", OPS_READ),
             ops_arg_dat(rho_B0, 1, stencil_0_00_12_00_9, "double", OPS_READ),
             ops_arg_dat(rhou0_B0, 1, stencil_0_00_12_00_9, "double", OPS_READ),
             ops_arg_dat(rhou1_B0, 1, stencil_0_00_12_00_9, "double", OPS_READ),
             ops_arg_dat(rhou2_B0, 1, stencil_0_00_12_00_9, "double", OPS_READ),
             ops_arg_dat(u0_B0, 1, stencil_0_00_12_00_9, "double", OPS_READ),
             ops_arg_dat(u1_B0, 1, stencil_0_00_12_00_9, "double", OPS_READ),
             ops_arg_dat(u2_B0, 1, stencil_0_00_12_00_9, "double", OPS_READ),
             ops_arg_dat(Residual0_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(Residual1_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(Residual2_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(Residual3_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(Residual4_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE));

int iteration_range_66_block0[] = {0, block0np0, 0, block0np1, -1, block0np2 + 1};
ops_par_loop_opensbliblock00Kernel066("User kernel: TVD reconstruction direction 2", opensbliblock00, 3, iteration_range_66_block0,
             ops_arg_dat(a_B0, 1, stencil_0_00_00_12_9, "double", OPS_READ),
             ops_arg_dat(detJ_B0, 1, stencil_0_00_00_01_5, "double", OPS_READ),
             ops_arg_dat(kappa_B0, 1, stencil_0_00_00_32_13, "double", OPS_READ),
             ops_arg_dat(rhoE_B0, 1, stencil_0_00_00_12_9, "double", OPS_READ),
             ops_arg_dat(rho_B0, 1, stencil_0_00_00_12_9, "double", OPS_READ),
             ops_arg_dat(rhou0_B0, 1, stencil_0_00_00_12_9, "double", OPS_READ),
             ops_arg_dat(rhou1_B0, 1, stencil_0_00_00_12_9, "double", OPS_READ),
             ops_arg_dat(rhou2_B0, 1, stencil_0_00_00_12_9, "double", OPS_READ),
             ops_arg_dat(u0_B0, 1, stencil_0_00_00_12_9, "double", OPS_READ),
             ops_arg_dat(u1_B0, 1, stencil_0_00_00_12_9, "double", OPS_READ),
             ops_arg_dat(u2_B0, 1, stencil_0_00_00_12_9, "double", OPS_READ),
             ops_arg_dat(rhoE_RKold_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(rho_RKold_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(rhou0_RKold_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(rhou1_RKold_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE),
             ops_arg_dat(rhou2_RKold_B0, 1, stencil_0_00_00_00_3, "double", OPS_WRITE));

int iteration_range_67_block0[] = {0, block0np0, 0, block0np1, 0, block0np2};
ops_par_loop_opensbliblock00Kernel067("User kernel: Non-linear TVD Filter application", opensbliblock00, 3, iteration_range_67_block0,
             ops_arg_dat(Residual0_B0, 1, stencil_0_00_10_00_5, "double", OPS_READ),
             ops_arg_dat(Residual1_B0, 1, stencil_0_00_10_00_5, "double", OPS_READ),
             ops_arg_dat(Residual2_B0, 1, stencil_0_00_10_00_5, "double", OPS_READ),
             ops_arg_dat(Residual3_B0, 1, stencil_0_00_10_00_5, "double", OPS_READ),
             ops_arg_dat(Residual4_B0, 1, stencil_0_00_10_00_5, "double", OPS_READ),
             ops_arg_dat(kappa_B0, 1, stencil_0_11_11_11_15, "double", OPS_READ),
             ops_arg_dat(rhoE_RKold_B0, 1, stencil_0_00_00_10_5, "double", OPS_READ),
             ops_arg_dat(rho_RKold_B0, 1, stencil_0_00_00_10_5, "double", OPS_READ),
             ops_arg_dat(rhou0_RKold_B0, 1, stencil_0_00_00_10_5, "double", OPS_READ),
             ops_arg_dat(rhou1_RKold_B0, 1, stencil_0_00_00_10_5, "double", OPS_READ),
             ops_arg_dat(rhou2_RKold_B0, 1, stencil_0_00_00_10_5, "double", OPS_READ),
             ops_arg_dat(wk0_B0, 1, stencil_0_10_00_00_5, "double", OPS_READ),
             ops_arg_dat(wk1_B0, 1, stencil_0_10_00_00_5, "double", OPS_READ),
             ops_arg_dat(wk2_B0, 1, stencil_0_10_00_00_5, "double", OPS_READ),
             ops_arg_dat(wk3_B0, 1, stencil_0_10_00_00_5, "double", OPS_READ),
             ops_arg_dat(wk4_B0, 1, stencil_0_10_00_00_5, "double", OPS_READ),
             ops_arg_dat(TVD_filter_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_dat(rhoE_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_dat(rho_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_dat(rhou0_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_dat(rhou1_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_dat(rhou2_B0, 1, stencil_0_00_00_00_3, "double", OPS_RW),
             ops_arg_idx());

if (fmod(1 + iter,write_output_file) == 0 || iter == 0){
HDF5_IO_Write_0_opensbliblock00_dynamic(opensbliblock00, iter, rho_B0, rhou0_B0, rhou1_B0, rhou2_B0, rhoE_B0, x0_B0, x1_B0, x2_B0, D11_B0, p_B0, HDF5_timing);
}

}
ops_timers(&cpu_end0, &elapsed_end0);
ops_printf("\nTimings are:\n");
ops_printf("-----------------------------------------\n");
ops_printf("Total Wall time %lf\n",elapsed_end0-elapsed_start0);

HDF5_IO_Write_0_opensbliblock00(opensbliblock00, rho_B0, rhou0_B0, rhou1_B0, rhou2_B0, rhoE_B0, x0_B0, x1_B0, x2_B0, D11_B0, p_B0, HDF5_timing);
ops_exit();

}