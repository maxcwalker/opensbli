//
// auto-generated by ops.py
//

//user function

// host stub function
#ifndef OPS_LAZY
void ops_par_loop_opensbliblock00Kernel034(char const *name, ops_block block, int dim, int* range,
 ops_arg arg0, ops_arg arg1, ops_arg arg2, ops_arg arg3,
 ops_arg arg4, ops_arg arg5, ops_arg arg6, ops_arg arg7,
 ops_arg arg8, ops_arg arg9, ops_arg arg10, ops_arg arg11,
 ops_arg arg12, ops_arg arg13, ops_arg arg14, ops_arg arg15,
 ops_arg arg16, ops_arg arg17, ops_arg arg18, ops_arg arg19,
 ops_arg arg20, ops_arg arg21, ops_arg arg22, ops_arg arg23,
 ops_arg arg24, ops_arg arg25, ops_arg arg26, ops_arg arg27) {
#else
void ops_par_loop_opensbliblock00Kernel034_execute(ops_kernel_descriptor *desc) {
  ops_block block = desc->block;
  int dim = desc->dim;
  int *range = desc->range;
  ops_arg arg0 = desc->args[0];
  ops_arg arg1 = desc->args[1];
  ops_arg arg2 = desc->args[2];
  ops_arg arg3 = desc->args[3];
  ops_arg arg4 = desc->args[4];
  ops_arg arg5 = desc->args[5];
  ops_arg arg6 = desc->args[6];
  ops_arg arg7 = desc->args[7];
  ops_arg arg8 = desc->args[8];
  ops_arg arg9 = desc->args[9];
  ops_arg arg10 = desc->args[10];
  ops_arg arg11 = desc->args[11];
  ops_arg arg12 = desc->args[12];
  ops_arg arg13 = desc->args[13];
  ops_arg arg14 = desc->args[14];
  ops_arg arg15 = desc->args[15];
  ops_arg arg16 = desc->args[16];
  ops_arg arg17 = desc->args[17];
  ops_arg arg18 = desc->args[18];
  ops_arg arg19 = desc->args[19];
  ops_arg arg20 = desc->args[20];
  ops_arg arg21 = desc->args[21];
  ops_arg arg22 = desc->args[22];
  ops_arg arg23 = desc->args[23];
  ops_arg arg24 = desc->args[24];
  ops_arg arg25 = desc->args[25];
  ops_arg arg26 = desc->args[26];
  ops_arg arg27 = desc->args[27];
  #endif

  //Timing
  double __t1,__t2,__c1,__c2;

  ops_arg args[28] = { arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27};



  #if defined(CHECKPOINTING) && !defined(OPS_LAZY)
  if (!ops_checkpointing_before(args,28,range,29)) return;
  #endif

  if (block->instance->OPS_diags > 1) {
    ops_timing_realloc(block->instance,29,"opensbliblock00Kernel034");
    block->instance->OPS_kernels[29].count++;
    ops_timers_core(&__c2,&__t2);
  }

  #ifdef OPS_DEBUG
  ops_register_args(block->instance, args, "opensbliblock00Kernel034");
  #endif


  //compute locally allocated range for the sub-block
  int start[3];
  int end[3];
  int arg_idx[3];
  #if defined(OPS_LAZY) || !defined(OPS_MPI)
  for ( int n=0; n<3; n++ ){
    start[n] = range[2*n];end[n] = range[2*n+1];
  }
  #else
  if (compute_ranges(args, 28,block, range, start, end, arg_idx) < 0) return;
  #endif


  #if defined(OPS_MPI)
  #if defined(OPS_LAZY)
  sub_block_list sb = OPS_sub_block_list[block->index];
  arg_idx[0] = sb->decomp_disp[0];
  arg_idx[1] = sb->decomp_disp[1];
  arg_idx[2] = sb->decomp_disp[2];
  #else
  arg_idx[0] -= start[0];
  arg_idx[1] -= start[1];
  arg_idx[2] -= start[2];
  #endif
  #else //OPS_MPI
  arg_idx[0] = 0;
  arg_idx[1] = 0;
  arg_idx[2] = 0;
  #endif //OPS_MPI

  //initialize global variable with the dimension of dats
  int xdim0_opensbliblock00Kernel034 = args[0].dat->size[0];
  int ydim0_opensbliblock00Kernel034 = args[0].dat->size[1];
  int xdim1_opensbliblock00Kernel034 = args[1].dat->size[0];
  int ydim1_opensbliblock00Kernel034 = args[1].dat->size[1];
  int xdim2_opensbliblock00Kernel034 = args[2].dat->size[0];
  int ydim2_opensbliblock00Kernel034 = args[2].dat->size[1];
  int xdim3_opensbliblock00Kernel034 = args[3].dat->size[0];
  int ydim3_opensbliblock00Kernel034 = args[3].dat->size[1];
  int xdim4_opensbliblock00Kernel034 = args[4].dat->size[0];
  int ydim4_opensbliblock00Kernel034 = args[4].dat->size[1];
  int xdim5_opensbliblock00Kernel034 = args[5].dat->size[0];
  int ydim5_opensbliblock00Kernel034 = args[5].dat->size[1];
  int xdim6_opensbliblock00Kernel034 = args[6].dat->size[0];
  int ydim6_opensbliblock00Kernel034 = args[6].dat->size[1];
  int xdim7_opensbliblock00Kernel034 = args[7].dat->size[0];
  int ydim7_opensbliblock00Kernel034 = args[7].dat->size[1];
  int xdim8_opensbliblock00Kernel034 = args[8].dat->size[0];
  int ydim8_opensbliblock00Kernel034 = args[8].dat->size[1];
  int xdim9_opensbliblock00Kernel034 = args[9].dat->size[0];
  int ydim9_opensbliblock00Kernel034 = args[9].dat->size[1];
  int xdim10_opensbliblock00Kernel034 = args[10].dat->size[0];
  int ydim10_opensbliblock00Kernel034 = args[10].dat->size[1];
  int xdim11_opensbliblock00Kernel034 = args[11].dat->size[0];
  int ydim11_opensbliblock00Kernel034 = args[11].dat->size[1];
  int xdim12_opensbliblock00Kernel034 = args[12].dat->size[0];
  int ydim12_opensbliblock00Kernel034 = args[12].dat->size[1];
  int xdim13_opensbliblock00Kernel034 = args[13].dat->size[0];
  int ydim13_opensbliblock00Kernel034 = args[13].dat->size[1];
  int xdim14_opensbliblock00Kernel034 = args[14].dat->size[0];
  int ydim14_opensbliblock00Kernel034 = args[14].dat->size[1];
  int xdim15_opensbliblock00Kernel034 = args[15].dat->size[0];
  int ydim15_opensbliblock00Kernel034 = args[15].dat->size[1];
  int xdim16_opensbliblock00Kernel034 = args[16].dat->size[0];
  int ydim16_opensbliblock00Kernel034 = args[16].dat->size[1];
  int xdim17_opensbliblock00Kernel034 = args[17].dat->size[0];
  int ydim17_opensbliblock00Kernel034 = args[17].dat->size[1];
  int xdim18_opensbliblock00Kernel034 = args[18].dat->size[0];
  int ydim18_opensbliblock00Kernel034 = args[18].dat->size[1];
  int xdim19_opensbliblock00Kernel034 = args[19].dat->size[0];
  int ydim19_opensbliblock00Kernel034 = args[19].dat->size[1];
  int xdim20_opensbliblock00Kernel034 = args[20].dat->size[0];
  int ydim20_opensbliblock00Kernel034 = args[20].dat->size[1];
  int xdim21_opensbliblock00Kernel034 = args[21].dat->size[0];
  int ydim21_opensbliblock00Kernel034 = args[21].dat->size[1];
  int xdim22_opensbliblock00Kernel034 = args[22].dat->size[0];
  int ydim22_opensbliblock00Kernel034 = args[22].dat->size[1];
  int xdim23_opensbliblock00Kernel034 = args[23].dat->size[0];
  int ydim23_opensbliblock00Kernel034 = args[23].dat->size[1];
  int xdim24_opensbliblock00Kernel034 = args[24].dat->size[0];
  int ydim24_opensbliblock00Kernel034 = args[24].dat->size[1];
  int xdim25_opensbliblock00Kernel034 = args[25].dat->size[0];
  int ydim25_opensbliblock00Kernel034 = args[25].dat->size[1];
  int xdim26_opensbliblock00Kernel034 = args[26].dat->size[0];
  int ydim26_opensbliblock00Kernel034 = args[26].dat->size[1];

  //set up initial pointers and exchange halos if necessary
  int base0 = args[0].dat->base_offset;
  double * __restrict__ D00_B0_p = (double *)(args[0].data + base0);

  int base1 = args[1].dat->base_offset;
  double * __restrict__ D01_B0_p = (double *)(args[1].data + base1);

  int base2 = args[2].dat->base_offset;
  double * __restrict__ D10_B0_p = (double *)(args[2].data + base2);

  int base3 = args[3].dat->base_offset;
  double * __restrict__ D11_B0_p = (double *)(args[3].data + base3);

  int base4 = args[4].dat->base_offset;
  double * __restrict__ p_B0_p = (double *)(args[4].data + base4);

  int base5 = args[5].dat->base_offset;
  double * __restrict__ rhoE_B0_p = (double *)(args[5].data + base5);

  int base6 = args[6].dat->base_offset;
  double * __restrict__ rho_B0_p = (double *)(args[6].data + base6);

  int base7 = args[7].dat->base_offset;
  double * __restrict__ rhou0_B0_p = (double *)(args[7].data + base7);

  int base8 = args[8].dat->base_offset;
  double * __restrict__ rhou1_B0_p = (double *)(args[8].data + base8);

  int base9 = args[9].dat->base_offset;
  double * __restrict__ rhou2_B0_p = (double *)(args[9].data + base9);

  int base10 = args[10].dat->base_offset;
  double * __restrict__ u0_B0_p = (double *)(args[10].data + base10);

  int base11 = args[11].dat->base_offset;
  double * __restrict__ u1_B0_p = (double *)(args[11].data + base11);

  int base12 = args[12].dat->base_offset;
  double * __restrict__ u2_B0_p = (double *)(args[12].data + base12);

  int base13 = args[13].dat->base_offset;
  double * __restrict__ wk0_B0_p = (double *)(args[13].data + base13);

  int base14 = args[14].dat->base_offset;
  double * __restrict__ wk10_B0_p = (double *)(args[14].data + base14);

  int base15 = args[15].dat->base_offset;
  double * __restrict__ wk1_B0_p = (double *)(args[15].data + base15);

  int base16 = args[16].dat->base_offset;
  double * __restrict__ wk2_B0_p = (double *)(args[16].data + base16);

  int base17 = args[17].dat->base_offset;
  double * __restrict__ wk4_B0_p = (double *)(args[17].data + base17);

  int base18 = args[18].dat->base_offset;
  double * __restrict__ wk5_B0_p = (double *)(args[18].data + base18);

  int base19 = args[19].dat->base_offset;
  double * __restrict__ wk6_B0_p = (double *)(args[19].data + base19);

  int base20 = args[20].dat->base_offset;
  double * __restrict__ wk8_B0_p = (double *)(args[20].data + base20);

  int base21 = args[21].dat->base_offset;
  double * __restrict__ wk9_B0_p = (double *)(args[21].data + base21);

  int base22 = args[22].dat->base_offset;
  double * __restrict__ Residual0_B0_p = (double *)(args[22].data + base22);

  int base23 = args[23].dat->base_offset;
  double * __restrict__ Residual1_B0_p = (double *)(args[23].data + base23);

  int base24 = args[24].dat->base_offset;
  double * __restrict__ Residual2_B0_p = (double *)(args[24].data + base24);

  int base25 = args[25].dat->base_offset;
  double * __restrict__ Residual3_B0_p = (double *)(args[25].data + base25);

  int base26 = args[26].dat->base_offset;
  double * __restrict__ Residual4_B0_p = (double *)(args[26].data + base26);




  #ifndef OPS_LAZY
  //Halo Exchanges
  ops_H_D_exchanges_host(args, 28);
  ops_halo_exchanges(args,28,range);
  ops_H_D_exchanges_host(args, 28);
  #endif

  if (block->instance->OPS_diags > 1) {
    ops_timers_core(&__c1,&__t1);
    block->instance->OPS_kernels[29].mpi_time += __t1-__t2;
  }

  #pragma omp parallel for collapse(2)
  for ( int n_z=start[2]; n_z<end[2]; n_z++ ){
    for ( int n_y=start[1]; n_y<end[1]; n_y++ ){
      #ifdef __INTEL_COMPILER
      #pragma loop_count(10000)
      #pragma omp simd
      #elif defined(__clang__)
      #pragma clang loop vectorize(assume_safety)
      #elif defined(__GNUC__)
      #pragma GCC ivdep
      #else
      #pragma simd
      #endif
      for ( int n_x=start[0]; n_x<end[0]; n_x++ ){
        int idx[] = {arg_idx[0]+n_x, arg_idx[1]+n_y, arg_idx[2]+n_z};
        const ACC<double> D00_B0(xdim0_opensbliblock00Kernel034, ydim0_opensbliblock00Kernel034, D00_B0_p + n_x*1 + n_y * xdim0_opensbliblock00Kernel034*1 + n_z * xdim0_opensbliblock00Kernel034 * ydim0_opensbliblock00Kernel034*1);
        const ACC<double> D01_B0(xdim1_opensbliblock00Kernel034, ydim1_opensbliblock00Kernel034, D01_B0_p + n_x*1 + n_y * xdim1_opensbliblock00Kernel034*1 + n_z * xdim1_opensbliblock00Kernel034 * ydim1_opensbliblock00Kernel034*1);
        const ACC<double> D10_B0(xdim2_opensbliblock00Kernel034, ydim2_opensbliblock00Kernel034, D10_B0_p + n_x*1 + n_y * xdim2_opensbliblock00Kernel034*1 + n_z * xdim2_opensbliblock00Kernel034 * ydim2_opensbliblock00Kernel034*1);
        const ACC<double> D11_B0(xdim3_opensbliblock00Kernel034, ydim3_opensbliblock00Kernel034, D11_B0_p + n_x*1 + n_y * xdim3_opensbliblock00Kernel034*1 + n_z * xdim3_opensbliblock00Kernel034 * ydim3_opensbliblock00Kernel034*1);
        const ACC<double> p_B0(xdim4_opensbliblock00Kernel034, ydim4_opensbliblock00Kernel034, p_B0_p + n_x*1 + n_y * xdim4_opensbliblock00Kernel034*1 + n_z * xdim4_opensbliblock00Kernel034 * ydim4_opensbliblock00Kernel034*1);
        const ACC<double> rhoE_B0(xdim5_opensbliblock00Kernel034, ydim5_opensbliblock00Kernel034, rhoE_B0_p + n_x*1 + n_y * xdim5_opensbliblock00Kernel034*1 + n_z * xdim5_opensbliblock00Kernel034 * ydim5_opensbliblock00Kernel034*1);
        const ACC<double> rho_B0(xdim6_opensbliblock00Kernel034, ydim6_opensbliblock00Kernel034, rho_B0_p + n_x*1 + n_y * xdim6_opensbliblock00Kernel034*1 + n_z * xdim6_opensbliblock00Kernel034 * ydim6_opensbliblock00Kernel034*1);
        const ACC<double> rhou0_B0(xdim7_opensbliblock00Kernel034, ydim7_opensbliblock00Kernel034, rhou0_B0_p + n_x*1 + n_y * xdim7_opensbliblock00Kernel034*1 + n_z * xdim7_opensbliblock00Kernel034 * ydim7_opensbliblock00Kernel034*1);
        const ACC<double> rhou1_B0(xdim8_opensbliblock00Kernel034, ydim8_opensbliblock00Kernel034, rhou1_B0_p + n_x*1 + n_y * xdim8_opensbliblock00Kernel034*1 + n_z * xdim8_opensbliblock00Kernel034 * ydim8_opensbliblock00Kernel034*1);
        const ACC<double> rhou2_B0(xdim9_opensbliblock00Kernel034, ydim9_opensbliblock00Kernel034, rhou2_B0_p + n_x*1 + n_y * xdim9_opensbliblock00Kernel034*1 + n_z * xdim9_opensbliblock00Kernel034 * ydim9_opensbliblock00Kernel034*1);
        const ACC<double> u0_B0(xdim10_opensbliblock00Kernel034, ydim10_opensbliblock00Kernel034, u0_B0_p + n_x*1 + n_y * xdim10_opensbliblock00Kernel034*1 + n_z * xdim10_opensbliblock00Kernel034 * ydim10_opensbliblock00Kernel034*1);
        const ACC<double> u1_B0(xdim11_opensbliblock00Kernel034, ydim11_opensbliblock00Kernel034, u1_B0_p + n_x*1 + n_y * xdim11_opensbliblock00Kernel034*1 + n_z * xdim11_opensbliblock00Kernel034 * ydim11_opensbliblock00Kernel034*1);
        const ACC<double> u2_B0(xdim12_opensbliblock00Kernel034, ydim12_opensbliblock00Kernel034, u2_B0_p + n_x*1 + n_y * xdim12_opensbliblock00Kernel034*1 + n_z * xdim12_opensbliblock00Kernel034 * ydim12_opensbliblock00Kernel034*1);
        const ACC<double> wk0_B0(xdim13_opensbliblock00Kernel034, ydim13_opensbliblock00Kernel034, wk0_B0_p + n_x*1 + n_y * xdim13_opensbliblock00Kernel034*1 + n_z * xdim13_opensbliblock00Kernel034 * ydim13_opensbliblock00Kernel034*1);
        const ACC<double> wk10_B0(xdim14_opensbliblock00Kernel034, ydim14_opensbliblock00Kernel034, wk10_B0_p + n_x*1 + n_y * xdim14_opensbliblock00Kernel034*1 + n_z * xdim14_opensbliblock00Kernel034 * ydim14_opensbliblock00Kernel034*1);
        const ACC<double> wk1_B0(xdim15_opensbliblock00Kernel034, ydim15_opensbliblock00Kernel034, wk1_B0_p + n_x*1 + n_y * xdim15_opensbliblock00Kernel034*1 + n_z * xdim15_opensbliblock00Kernel034 * ydim15_opensbliblock00Kernel034*1);
        const ACC<double> wk2_B0(xdim16_opensbliblock00Kernel034, ydim16_opensbliblock00Kernel034, wk2_B0_p + n_x*1 + n_y * xdim16_opensbliblock00Kernel034*1 + n_z * xdim16_opensbliblock00Kernel034 * ydim16_opensbliblock00Kernel034*1);
        const ACC<double> wk4_B0(xdim17_opensbliblock00Kernel034, ydim17_opensbliblock00Kernel034, wk4_B0_p + n_x*1 + n_y * xdim17_opensbliblock00Kernel034*1 + n_z * xdim17_opensbliblock00Kernel034 * ydim17_opensbliblock00Kernel034*1);
        const ACC<double> wk5_B0(xdim18_opensbliblock00Kernel034, ydim18_opensbliblock00Kernel034, wk5_B0_p + n_x*1 + n_y * xdim18_opensbliblock00Kernel034*1 + n_z * xdim18_opensbliblock00Kernel034 * ydim18_opensbliblock00Kernel034*1);
        const ACC<double> wk6_B0(xdim19_opensbliblock00Kernel034, ydim19_opensbliblock00Kernel034, wk6_B0_p + n_x*1 + n_y * xdim19_opensbliblock00Kernel034*1 + n_z * xdim19_opensbliblock00Kernel034 * ydim19_opensbliblock00Kernel034*1);
        const ACC<double> wk8_B0(xdim20_opensbliblock00Kernel034, ydim20_opensbliblock00Kernel034, wk8_B0_p + n_x*1 + n_y * xdim20_opensbliblock00Kernel034*1 + n_z * xdim20_opensbliblock00Kernel034 * ydim20_opensbliblock00Kernel034*1);
        const ACC<double> wk9_B0(xdim21_opensbliblock00Kernel034, ydim21_opensbliblock00Kernel034, wk9_B0_p + n_x*1 + n_y * xdim21_opensbliblock00Kernel034*1 + n_z * xdim21_opensbliblock00Kernel034 * ydim21_opensbliblock00Kernel034*1);
        ACC<double> Residual0_B0(xdim22_opensbliblock00Kernel034, ydim22_opensbliblock00Kernel034, Residual0_B0_p + n_x*1 + n_y * xdim22_opensbliblock00Kernel034*1 + n_z * xdim22_opensbliblock00Kernel034 * ydim22_opensbliblock00Kernel034*1);
        ACC<double> Residual1_B0(xdim23_opensbliblock00Kernel034, ydim23_opensbliblock00Kernel034, Residual1_B0_p + n_x*1 + n_y * xdim23_opensbliblock00Kernel034*1 + n_z * xdim23_opensbliblock00Kernel034 * ydim23_opensbliblock00Kernel034*1);
        ACC<double> Residual2_B0(xdim24_opensbliblock00Kernel034, ydim24_opensbliblock00Kernel034, Residual2_B0_p + n_x*1 + n_y * xdim24_opensbliblock00Kernel034*1 + n_z * xdim24_opensbliblock00Kernel034 * ydim24_opensbliblock00Kernel034*1);
        ACC<double> Residual3_B0(xdim25_opensbliblock00Kernel034, ydim25_opensbliblock00Kernel034, Residual3_B0_p + n_x*1 + n_y * xdim25_opensbliblock00Kernel034*1 + n_z * xdim25_opensbliblock00Kernel034 * ydim25_opensbliblock00Kernel034*1);
        ACC<double> Residual4_B0(xdim26_opensbliblock00Kernel034, ydim26_opensbliblock00Kernel034, Residual4_B0_p + n_x*1 + n_y * xdim26_opensbliblock00Kernel034*1 + n_z * xdim26_opensbliblock00Kernel034 * ydim26_opensbliblock00Kernel034*1);
        
   double d1_inv_rhoErho_dx = 0.0;
   double d1_inv_rhoErho_dy = 0.0;
   double d1_inv_rhoErho_dz = 0.0;
   double d1_inv_rhoErhou0_dx = 0.0;
   double d1_inv_rhoErhou0_dy = 0.0;
   double d1_inv_rhoErhou1_dx = 0.0;
   double d1_inv_rhoErhou1_dy = 0.0;
   double d1_inv_rhoErhou2_dz = 0.0;
   double d1_p_dx = 0.0;
   double d1_p_dy = 0.0;
   double d1_p_dz = 0.0;
   double d1_pu0_dx = 0.0;
   double d1_pu0_dy = 0.0;
   double d1_pu1_dx = 0.0;
   double d1_pu1_dy = 0.0;
   double d1_pu2_dz = 0.0;
   double d1_rhoE_dx = 0.0;
   double d1_rhoE_dy = 0.0;
   double d1_rhoE_dz = 0.0;
   double d1_rhoEu0_dx = 0.0;
   double d1_rhoEu0_dy = 0.0;
   double d1_rhoEu1_dx = 0.0;
   double d1_rhoEu1_dy = 0.0;
   double d1_rhoEu2_dz = 0.0;
   double d1_rho_dx = 0.0;
   double d1_rho_dy = 0.0;
   double d1_rho_dz = 0.0;
   double d1_rhou0_dx = 0.0;
   double d1_rhou0_dy = 0.0;
   double d1_rhou0_dz = 0.0;
   double d1_rhou0u0_dx = 0.0;
   double d1_rhou0u0_dy = 0.0;
   double d1_rhou0u1_dx = 0.0;
   double d1_rhou0u1_dy = 0.0;
   double d1_rhou0u2_dx = 0.0;
   double d1_rhou0u2_dy = 0.0;
   double d1_rhou1_dx = 0.0;
   double d1_rhou1_dy = 0.0;
   double d1_rhou1_dz = 0.0;
   double d1_rhou1u0_dx = 0.0;
   double d1_rhou1u0_dy = 0.0;
   double d1_rhou1u1_dx = 0.0;
   double d1_rhou1u1_dy = 0.0;
   double d1_rhou1u2_dx = 0.0;
   double d1_rhou1u2_dy = 0.0;
   double d1_rhou2_dx = 0.0;
   double d1_rhou2_dy = 0.0;
   double d1_rhou2_dz = 0.0;
   double d1_rhou2u0_dz = 0.0;
   double d1_rhou2u1_dz = 0.0;
   double d1_rhou2u2_dz = 0.0;
   double d1_u0u0_dx = 0.0;
   double d1_u0u0_dy = 0.0;
   double d1_u0u1_dx = 0.0;
   double d1_u0u1_dy = 0.0;
   double d1_u0u2_dx = 0.0;
   double d1_u0u2_dy = 0.0;
   double d1_u0u2_dz = 0.0;
   double d1_u1u1_dx = 0.0;
   double d1_u1u1_dy = 0.0;
   double d1_u1u2_dx = 0.0;
   double d1_u1u2_dy = 0.0;
   double d1_u1u2_dz = 0.0;
   double d1_u2u2_dz = 0.0;
   if (idx[0] == 0){

       d1_p_dx = (-3*p_B0(2,0,0) + 4*p_B0(1,0,0) - (25.0/12.0)*p_B0(0,0,0) - (1.0/4.0)*p_B0(4,0,0) +
            ((4.0/3.0))*p_B0(3,0,0))*invDelta0block0;

       d1_pu0_dx = (-3*p_B0(2,0,0)*u0_B0(2,0,0) + 4*p_B0(1,0,0)*u0_B0(1,0,0) - (25.0/12.0)*p_B0(0,0,0)*u0_B0(0,0,0) -
            (1.0/4.0)*p_B0(4,0,0)*u0_B0(4,0,0) + ((4.0/3.0))*p_B0(3,0,0)*u0_B0(3,0,0))*invDelta0block0;

       d1_pu1_dx = (-3*p_B0(2,0,0)*u1_B0(2,0,0) + 4*p_B0(1,0,0)*u1_B0(1,0,0) - (25.0/12.0)*p_B0(0,0,0)*u1_B0(0,0,0) -
            (1.0/4.0)*p_B0(4,0,0)*u1_B0(4,0,0) + ((4.0/3.0))*p_B0(3,0,0)*u1_B0(3,0,0))*invDelta0block0;

       d1_rhoE_dx = (-3*rhoE_B0(2,0,0) + 4*rhoE_B0(1,0,0) - (25.0/12.0)*rhoE_B0(0,0,0) - (1.0/4.0)*rhoE_B0(4,0,0) +
            ((4.0/3.0))*rhoE_B0(3,0,0))*invDelta0block0;

       d1_rhoEu0_dx = (-3*u0_B0(2,0,0)*rhoE_B0(2,0,0) + 4*u0_B0(1,0,0)*rhoE_B0(1,0,0) -
            (25.0/12.0)*u0_B0(0,0,0)*rhoE_B0(0,0,0) - (1.0/4.0)*u0_B0(4,0,0)*rhoE_B0(4,0,0) +
            ((4.0/3.0))*u0_B0(3,0,0)*rhoE_B0(3,0,0))*invDelta0block0;

       d1_inv_rhoErhou0_dx = (-3*u0_B0(2,0,0)*rhoE_B0(2,0,0)/rho_B0(2,0,0) + 4*u0_B0(1,0,0)*rhoE_B0(1,0,0)/rho_B0(1,0,0)
            - (25.0/12.0)*u0_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
            (1.0/4.0)*u0_B0(4,0,0)*rhoE_B0(4,0,0)/rho_B0(4,0,0) +
            ((4.0/3.0))*u0_B0(3,0,0)*rhoE_B0(3,0,0)/rho_B0(3,0,0))*invDelta0block0;

       d1_rhoEu1_dx = (-3*u1_B0(2,0,0)*rhoE_B0(2,0,0) + 4*u1_B0(1,0,0)*rhoE_B0(1,0,0) -
            (25.0/12.0)*u1_B0(0,0,0)*rhoE_B0(0,0,0) - (1.0/4.0)*u1_B0(4,0,0)*rhoE_B0(4,0,0) +
            ((4.0/3.0))*u1_B0(3,0,0)*rhoE_B0(3,0,0))*invDelta0block0;

       d1_inv_rhoErhou1_dx = (-3*u1_B0(2,0,0)*rhoE_B0(2,0,0)/rho_B0(2,0,0) + 4*u1_B0(1,0,0)*rhoE_B0(1,0,0)/rho_B0(1,0,0)
            - (25.0/12.0)*u1_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
            (1.0/4.0)*u1_B0(4,0,0)*rhoE_B0(4,0,0)/rho_B0(4,0,0) +
            ((4.0/3.0))*u1_B0(3,0,0)*rhoE_B0(3,0,0)/rho_B0(3,0,0))*invDelta0block0;

       d1_inv_rhoErho_dx = (-3*rhoE_B0(2,0,0)/rho_B0(2,0,0) + 4*rhoE_B0(1,0,0)/rho_B0(1,0,0) -
            (25.0/12.0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) - (1.0/4.0)*rhoE_B0(4,0,0)/rho_B0(4,0,0) +
            ((4.0/3.0))*rhoE_B0(3,0,0)/rho_B0(3,0,0))*invDelta0block0;

       d1_rho_dx = (-3*rho_B0(2,0,0) + 4*rho_B0(1,0,0) - (25.0/12.0)*rho_B0(0,0,0) - (1.0/4.0)*rho_B0(4,0,0) +
            ((4.0/3.0))*rho_B0(3,0,0))*invDelta0block0;

       d1_rhou0_dx = (-3*rhou0_B0(2,0,0) + 4*rhou0_B0(1,0,0) - (25.0/12.0)*rhou0_B0(0,0,0) - (1.0/4.0)*rhou0_B0(4,0,0) +
            ((4.0/3.0))*rhou0_B0(3,0,0))*invDelta0block0;

       d1_rhou0u0_dx = (-3*u0_B0(2,0,0)*rhou0_B0(2,0,0) + 4*u0_B0(1,0,0)*rhou0_B0(1,0,0) -
            (25.0/12.0)*u0_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/4.0)*u0_B0(4,0,0)*rhou0_B0(4,0,0) +
            ((4.0/3.0))*u0_B0(3,0,0)*rhou0_B0(3,0,0))*invDelta0block0;

       d1_rhou0u1_dx = (-3*u1_B0(2,0,0)*rhou0_B0(2,0,0) + 4*u1_B0(1,0,0)*rhou0_B0(1,0,0) -
            (25.0/12.0)*u1_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/4.0)*u1_B0(4,0,0)*rhou0_B0(4,0,0) +
            ((4.0/3.0))*u1_B0(3,0,0)*rhou0_B0(3,0,0))*invDelta0block0;

       d1_rhou0u2_dx = (-3*u2_B0(2,0,0)*rhou0_B0(2,0,0) + 4*u2_B0(1,0,0)*rhou0_B0(1,0,0) -
            (25.0/12.0)*u2_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/4.0)*u2_B0(4,0,0)*rhou0_B0(4,0,0) +
            ((4.0/3.0))*u2_B0(3,0,0)*rhou0_B0(3,0,0))*invDelta0block0;

       d1_rhou1_dx = (-3*rhou1_B0(2,0,0) + 4*rhou1_B0(1,0,0) - (25.0/12.0)*rhou1_B0(0,0,0) - (1.0/4.0)*rhou1_B0(4,0,0) +
            ((4.0/3.0))*rhou1_B0(3,0,0))*invDelta0block0;

       d1_rhou1u0_dx = (-3*u0_B0(2,0,0)*rhou1_B0(2,0,0) + 4*u0_B0(1,0,0)*rhou1_B0(1,0,0) -
            (25.0/12.0)*u0_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/4.0)*u0_B0(4,0,0)*rhou1_B0(4,0,0) +
            ((4.0/3.0))*u0_B0(3,0,0)*rhou1_B0(3,0,0))*invDelta0block0;

       d1_rhou1u1_dx = (-3*u1_B0(2,0,0)*rhou1_B0(2,0,0) + 4*u1_B0(1,0,0)*rhou1_B0(1,0,0) -
            (25.0/12.0)*u1_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/4.0)*u1_B0(4,0,0)*rhou1_B0(4,0,0) +
            ((4.0/3.0))*u1_B0(3,0,0)*rhou1_B0(3,0,0))*invDelta0block0;

       d1_rhou1u2_dx = (-3*u2_B0(2,0,0)*rhou1_B0(2,0,0) + 4*u2_B0(1,0,0)*rhou1_B0(1,0,0) -
            (25.0/12.0)*u2_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/4.0)*u2_B0(4,0,0)*rhou1_B0(4,0,0) +
            ((4.0/3.0))*u2_B0(3,0,0)*rhou1_B0(3,0,0))*invDelta0block0;

       d1_rhou2_dx = (-3*rhou2_B0(2,0,0) + 4*rhou2_B0(1,0,0) - (25.0/12.0)*rhou2_B0(0,0,0) - (1.0/4.0)*rhou2_B0(4,0,0) +
            ((4.0/3.0))*rhou2_B0(3,0,0))*invDelta0block0;

       d1_u0u0_dx = (-3*(u0_B0(2,0,0)*u0_B0(2,0,0)) + 4*(u0_B0(1,0,0)*u0_B0(1,0,0)) -
            (25.0/12.0)*(u0_B0(0,0,0)*u0_B0(0,0,0)) - (1.0/4.0)*(u0_B0(4,0,0)*u0_B0(4,0,0)) +
            ((4.0/3.0))*(u0_B0(3,0,0)*u0_B0(3,0,0)))*invDelta0block0;

       d1_u0u1_dx = (-3*u0_B0(2,0,0)*u1_B0(2,0,0) + 4*u0_B0(1,0,0)*u1_B0(1,0,0) - (25.0/12.0)*u0_B0(0,0,0)*u1_B0(0,0,0)
            - (1.0/4.0)*u0_B0(4,0,0)*u1_B0(4,0,0) + ((4.0/3.0))*u0_B0(3,0,0)*u1_B0(3,0,0))*invDelta0block0;

       d1_u0u2_dx = (-3*u0_B0(2,0,0)*u2_B0(2,0,0) + 4*u0_B0(1,0,0)*u2_B0(1,0,0) - (25.0/12.0)*u0_B0(0,0,0)*u2_B0(0,0,0)
            - (1.0/4.0)*u0_B0(4,0,0)*u2_B0(4,0,0) + ((4.0/3.0))*u0_B0(3,0,0)*u2_B0(3,0,0))*invDelta0block0;

       d1_u1u1_dx = (-3*(u1_B0(2,0,0)*u1_B0(2,0,0)) + 4*(u1_B0(1,0,0)*u1_B0(1,0,0)) -
            (25.0/12.0)*(u1_B0(0,0,0)*u1_B0(0,0,0)) - (1.0/4.0)*(u1_B0(4,0,0)*u1_B0(4,0,0)) +
            ((4.0/3.0))*(u1_B0(3,0,0)*u1_B0(3,0,0)))*invDelta0block0;

       d1_u1u2_dx = (-3*u1_B0(2,0,0)*u2_B0(2,0,0) + 4*u1_B0(1,0,0)*u2_B0(1,0,0) - (25.0/12.0)*u1_B0(0,0,0)*u2_B0(0,0,0)
            - (1.0/4.0)*u1_B0(4,0,0)*u2_B0(4,0,0) + ((4.0/3.0))*u1_B0(3,0,0)*u2_B0(3,0,0))*invDelta0block0;

   }

   else if (idx[0] == 1){

       d1_p_dx = (-(5.0/6.0)*p_B0(0,0,0) - (1.0/2.0)*p_B0(2,0,0) - (1.0/4.0)*p_B0(-1,0,0) + ((1.0/12.0))*p_B0(3,0,0) +
            ((3.0/2.0))*p_B0(1,0,0))*invDelta0block0;

       d1_pu0_dx = (-(5.0/6.0)*p_B0(0,0,0)*u0_B0(0,0,0) - (1.0/2.0)*p_B0(2,0,0)*u0_B0(2,0,0) -
            (1.0/4.0)*p_B0(-1,0,0)*u0_B0(-1,0,0) + ((1.0/12.0))*p_B0(3,0,0)*u0_B0(3,0,0) +
            ((3.0/2.0))*p_B0(1,0,0)*u0_B0(1,0,0))*invDelta0block0;

       d1_pu1_dx = (-(5.0/6.0)*p_B0(0,0,0)*u1_B0(0,0,0) - (1.0/2.0)*p_B0(2,0,0)*u1_B0(2,0,0) -
            (1.0/4.0)*p_B0(-1,0,0)*u1_B0(-1,0,0) + ((1.0/12.0))*p_B0(3,0,0)*u1_B0(3,0,0) +
            ((3.0/2.0))*p_B0(1,0,0)*u1_B0(1,0,0))*invDelta0block0;

       d1_rhoE_dx = (-(5.0/6.0)*rhoE_B0(0,0,0) - (1.0/2.0)*rhoE_B0(2,0,0) - (1.0/4.0)*rhoE_B0(-1,0,0) +
            ((1.0/12.0))*rhoE_B0(3,0,0) + ((3.0/2.0))*rhoE_B0(1,0,0))*invDelta0block0;

       d1_rhoEu0_dx = (-(5.0/6.0)*u0_B0(0,0,0)*rhoE_B0(0,0,0) - (1.0/2.0)*u0_B0(2,0,0)*rhoE_B0(2,0,0) -
            (1.0/4.0)*u0_B0(-1,0,0)*rhoE_B0(-1,0,0) + ((1.0/12.0))*u0_B0(3,0,0)*rhoE_B0(3,0,0) +
            ((3.0/2.0))*u0_B0(1,0,0)*rhoE_B0(1,0,0))*invDelta0block0;

       d1_inv_rhoErhou0_dx = (-(5.0/6.0)*u0_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
            (1.0/2.0)*u0_B0(2,0,0)*rhoE_B0(2,0,0)/rho_B0(2,0,0) - (1.0/4.0)*u0_B0(-1,0,0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0)
            + ((1.0/12.0))*u0_B0(3,0,0)*rhoE_B0(3,0,0)/rho_B0(3,0,0) +
            ((3.0/2.0))*u0_B0(1,0,0)*rhoE_B0(1,0,0)/rho_B0(1,0,0))*invDelta0block0;

       d1_rhoEu1_dx = (-(5.0/6.0)*u1_B0(0,0,0)*rhoE_B0(0,0,0) - (1.0/2.0)*u1_B0(2,0,0)*rhoE_B0(2,0,0) -
            (1.0/4.0)*u1_B0(-1,0,0)*rhoE_B0(-1,0,0) + ((1.0/12.0))*u1_B0(3,0,0)*rhoE_B0(3,0,0) +
            ((3.0/2.0))*u1_B0(1,0,0)*rhoE_B0(1,0,0))*invDelta0block0;

       d1_inv_rhoErhou1_dx = (-(5.0/6.0)*u1_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
            (1.0/2.0)*u1_B0(2,0,0)*rhoE_B0(2,0,0)/rho_B0(2,0,0) - (1.0/4.0)*u1_B0(-1,0,0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0)
            + ((1.0/12.0))*u1_B0(3,0,0)*rhoE_B0(3,0,0)/rho_B0(3,0,0) +
            ((3.0/2.0))*u1_B0(1,0,0)*rhoE_B0(1,0,0)/rho_B0(1,0,0))*invDelta0block0;

       d1_inv_rhoErho_dx = (-(5.0/6.0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) - (1.0/2.0)*rhoE_B0(2,0,0)/rho_B0(2,0,0) -
            (1.0/4.0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0) + ((1.0/12.0))*rhoE_B0(3,0,0)/rho_B0(3,0,0) +
            ((3.0/2.0))*rhoE_B0(1,0,0)/rho_B0(1,0,0))*invDelta0block0;

       d1_rho_dx = (-(5.0/6.0)*rho_B0(0,0,0) - (1.0/2.0)*rho_B0(2,0,0) - (1.0/4.0)*rho_B0(-1,0,0) +
            ((1.0/12.0))*rho_B0(3,0,0) + ((3.0/2.0))*rho_B0(1,0,0))*invDelta0block0;

       d1_rhou0_dx = (-(5.0/6.0)*rhou0_B0(0,0,0) - (1.0/2.0)*rhou0_B0(2,0,0) - (1.0/4.0)*rhou0_B0(-1,0,0) +
            ((1.0/12.0))*rhou0_B0(3,0,0) + ((3.0/2.0))*rhou0_B0(1,0,0))*invDelta0block0;

       d1_rhou0u0_dx = (-(5.0/6.0)*u0_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/2.0)*u0_B0(2,0,0)*rhou0_B0(2,0,0) -
            (1.0/4.0)*u0_B0(-1,0,0)*rhou0_B0(-1,0,0) + ((1.0/12.0))*u0_B0(3,0,0)*rhou0_B0(3,0,0) +
            ((3.0/2.0))*u0_B0(1,0,0)*rhou0_B0(1,0,0))*invDelta0block0;

       d1_rhou0u1_dx = (-(5.0/6.0)*u1_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/2.0)*u1_B0(2,0,0)*rhou0_B0(2,0,0) -
            (1.0/4.0)*u1_B0(-1,0,0)*rhou0_B0(-1,0,0) + ((1.0/12.0))*u1_B0(3,0,0)*rhou0_B0(3,0,0) +
            ((3.0/2.0))*u1_B0(1,0,0)*rhou0_B0(1,0,0))*invDelta0block0;

       d1_rhou0u2_dx = (-(5.0/6.0)*u2_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/2.0)*u2_B0(2,0,0)*rhou0_B0(2,0,0) -
            (1.0/4.0)*u2_B0(-1,0,0)*rhou0_B0(-1,0,0) + ((1.0/12.0))*u2_B0(3,0,0)*rhou0_B0(3,0,0) +
            ((3.0/2.0))*u2_B0(1,0,0)*rhou0_B0(1,0,0))*invDelta0block0;

       d1_rhou1_dx = (-(5.0/6.0)*rhou1_B0(0,0,0) - (1.0/2.0)*rhou1_B0(2,0,0) - (1.0/4.0)*rhou1_B0(-1,0,0) +
            ((1.0/12.0))*rhou1_B0(3,0,0) + ((3.0/2.0))*rhou1_B0(1,0,0))*invDelta0block0;

       d1_rhou1u0_dx = (-(5.0/6.0)*u0_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/2.0)*u0_B0(2,0,0)*rhou1_B0(2,0,0) -
            (1.0/4.0)*u0_B0(-1,0,0)*rhou1_B0(-1,0,0) + ((1.0/12.0))*u0_B0(3,0,0)*rhou1_B0(3,0,0) +
            ((3.0/2.0))*u0_B0(1,0,0)*rhou1_B0(1,0,0))*invDelta0block0;

       d1_rhou1u1_dx = (-(5.0/6.0)*u1_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/2.0)*u1_B0(2,0,0)*rhou1_B0(2,0,0) -
            (1.0/4.0)*u1_B0(-1,0,0)*rhou1_B0(-1,0,0) + ((1.0/12.0))*u1_B0(3,0,0)*rhou1_B0(3,0,0) +
            ((3.0/2.0))*u1_B0(1,0,0)*rhou1_B0(1,0,0))*invDelta0block0;

       d1_rhou1u2_dx = (-(5.0/6.0)*u2_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/2.0)*u2_B0(2,0,0)*rhou1_B0(2,0,0) -
            (1.0/4.0)*u2_B0(-1,0,0)*rhou1_B0(-1,0,0) + ((1.0/12.0))*u2_B0(3,0,0)*rhou1_B0(3,0,0) +
            ((3.0/2.0))*u2_B0(1,0,0)*rhou1_B0(1,0,0))*invDelta0block0;

       d1_rhou2_dx = (-(5.0/6.0)*rhou2_B0(0,0,0) - (1.0/2.0)*rhou2_B0(2,0,0) - (1.0/4.0)*rhou2_B0(-1,0,0) +
            ((1.0/12.0))*rhou2_B0(3,0,0) + ((3.0/2.0))*rhou2_B0(1,0,0))*invDelta0block0;

       d1_u0u0_dx = (-(5.0/6.0)*(u0_B0(0,0,0)*u0_B0(0,0,0)) - (1.0/2.0)*(u0_B0(2,0,0)*u0_B0(2,0,0)) -
            (1.0/4.0)*(u0_B0(-1,0,0)*u0_B0(-1,0,0)) + ((1.0/12.0))*(u0_B0(3,0,0)*u0_B0(3,0,0)) +
            ((3.0/2.0))*(u0_B0(1,0,0)*u0_B0(1,0,0)))*invDelta0block0;

       d1_u0u1_dx = (-(5.0/6.0)*u0_B0(0,0,0)*u1_B0(0,0,0) - (1.0/2.0)*u0_B0(2,0,0)*u1_B0(2,0,0) -
            (1.0/4.0)*u0_B0(-1,0,0)*u1_B0(-1,0,0) + ((1.0/12.0))*u0_B0(3,0,0)*u1_B0(3,0,0) +
            ((3.0/2.0))*u0_B0(1,0,0)*u1_B0(1,0,0))*invDelta0block0;

       d1_u0u2_dx = (-(5.0/6.0)*u0_B0(0,0,0)*u2_B0(0,0,0) - (1.0/2.0)*u0_B0(2,0,0)*u2_B0(2,0,0) -
            (1.0/4.0)*u0_B0(-1,0,0)*u2_B0(-1,0,0) + ((1.0/12.0))*u0_B0(3,0,0)*u2_B0(3,0,0) +
            ((3.0/2.0))*u0_B0(1,0,0)*u2_B0(1,0,0))*invDelta0block0;

       d1_u1u1_dx = (-(5.0/6.0)*(u1_B0(0,0,0)*u1_B0(0,0,0)) - (1.0/2.0)*(u1_B0(2,0,0)*u1_B0(2,0,0)) -
            (1.0/4.0)*(u1_B0(-1,0,0)*u1_B0(-1,0,0)) + ((1.0/12.0))*(u1_B0(3,0,0)*u1_B0(3,0,0)) +
            ((3.0/2.0))*(u1_B0(1,0,0)*u1_B0(1,0,0)))*invDelta0block0;

       d1_u1u2_dx = (-(5.0/6.0)*u1_B0(0,0,0)*u2_B0(0,0,0) - (1.0/2.0)*u1_B0(2,0,0)*u2_B0(2,0,0) -
            (1.0/4.0)*u1_B0(-1,0,0)*u2_B0(-1,0,0) + ((1.0/12.0))*u1_B0(3,0,0)*u2_B0(3,0,0) +
            ((3.0/2.0))*u1_B0(1,0,0)*u2_B0(1,0,0))*invDelta0block0;

   }

   else if (idx[0] == -1 + block0np0){

       d1_p_dx = (-4*p_B0(-1,0,0) + 3*p_B0(-2,0,0) - (4.0/3.0)*p_B0(-3,0,0) + ((1.0/4.0))*p_B0(-4,0,0) +
            ((25.0/12.0))*p_B0(0,0,0))*invDelta0block0;

       d1_pu0_dx = (-4*p_B0(-1,0,0)*u0_B0(-1,0,0) + 3*p_B0(-2,0,0)*u0_B0(-2,0,0) - (4.0/3.0)*p_B0(-3,0,0)*u0_B0(-3,0,0)
            + ((1.0/4.0))*p_B0(-4,0,0)*u0_B0(-4,0,0) + ((25.0/12.0))*p_B0(0,0,0)*u0_B0(0,0,0))*invDelta0block0;

       d1_pu1_dx = (-4*p_B0(-1,0,0)*u1_B0(-1,0,0) + 3*p_B0(-2,0,0)*u1_B0(-2,0,0) - (4.0/3.0)*p_B0(-3,0,0)*u1_B0(-3,0,0)
            + ((1.0/4.0))*p_B0(-4,0,0)*u1_B0(-4,0,0) + ((25.0/12.0))*p_B0(0,0,0)*u1_B0(0,0,0))*invDelta0block0;

       d1_rhoE_dx = (-4*rhoE_B0(-1,0,0) + 3*rhoE_B0(-2,0,0) - (4.0/3.0)*rhoE_B0(-3,0,0) + ((1.0/4.0))*rhoE_B0(-4,0,0) +
            ((25.0/12.0))*rhoE_B0(0,0,0))*invDelta0block0;

       d1_rhoEu0_dx = (-4*u0_B0(-1,0,0)*rhoE_B0(-1,0,0) + 3*u0_B0(-2,0,0)*rhoE_B0(-2,0,0) -
            (4.0/3.0)*u0_B0(-3,0,0)*rhoE_B0(-3,0,0) + ((1.0/4.0))*u0_B0(-4,0,0)*rhoE_B0(-4,0,0) +
            ((25.0/12.0))*u0_B0(0,0,0)*rhoE_B0(0,0,0))*invDelta0block0;

       d1_inv_rhoErhou0_dx = (-4*u0_B0(-1,0,0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0) +
            3*u0_B0(-2,0,0)*rhoE_B0(-2,0,0)/rho_B0(-2,0,0) - (4.0/3.0)*u0_B0(-3,0,0)*rhoE_B0(-3,0,0)/rho_B0(-3,0,0) +
            ((1.0/4.0))*u0_B0(-4,0,0)*rhoE_B0(-4,0,0)/rho_B0(-4,0,0) +
            ((25.0/12.0))*u0_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0))*invDelta0block0;

       d1_rhoEu1_dx = (-4*u1_B0(-1,0,0)*rhoE_B0(-1,0,0) + 3*u1_B0(-2,0,0)*rhoE_B0(-2,0,0) -
            (4.0/3.0)*u1_B0(-3,0,0)*rhoE_B0(-3,0,0) + ((1.0/4.0))*u1_B0(-4,0,0)*rhoE_B0(-4,0,0) +
            ((25.0/12.0))*u1_B0(0,0,0)*rhoE_B0(0,0,0))*invDelta0block0;

       d1_inv_rhoErhou1_dx = (-4*u1_B0(-1,0,0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0) +
            3*u1_B0(-2,0,0)*rhoE_B0(-2,0,0)/rho_B0(-2,0,0) - (4.0/3.0)*u1_B0(-3,0,0)*rhoE_B0(-3,0,0)/rho_B0(-3,0,0) +
            ((1.0/4.0))*u1_B0(-4,0,0)*rhoE_B0(-4,0,0)/rho_B0(-4,0,0) +
            ((25.0/12.0))*u1_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0))*invDelta0block0;

       d1_inv_rhoErho_dx = (-4*rhoE_B0(-1,0,0)/rho_B0(-1,0,0) + 3*rhoE_B0(-2,0,0)/rho_B0(-2,0,0) -
            (4.0/3.0)*rhoE_B0(-3,0,0)/rho_B0(-3,0,0) + ((1.0/4.0))*rhoE_B0(-4,0,0)/rho_B0(-4,0,0) +
            ((25.0/12.0))*rhoE_B0(0,0,0)/rho_B0(0,0,0))*invDelta0block0;

       d1_rho_dx = (-4*rho_B0(-1,0,0) + 3*rho_B0(-2,0,0) - (4.0/3.0)*rho_B0(-3,0,0) + ((1.0/4.0))*rho_B0(-4,0,0) +
            ((25.0/12.0))*rho_B0(0,0,0))*invDelta0block0;

       d1_rhou0_dx = (-4*rhou0_B0(-1,0,0) + 3*rhou0_B0(-2,0,0) - (4.0/3.0)*rhou0_B0(-3,0,0) +
            ((1.0/4.0))*rhou0_B0(-4,0,0) + ((25.0/12.0))*rhou0_B0(0,0,0))*invDelta0block0;

       d1_rhou0u0_dx = (-4*u0_B0(-1,0,0)*rhou0_B0(-1,0,0) + 3*u0_B0(-2,0,0)*rhou0_B0(-2,0,0) -
            (4.0/3.0)*u0_B0(-3,0,0)*rhou0_B0(-3,0,0) + ((1.0/4.0))*u0_B0(-4,0,0)*rhou0_B0(-4,0,0) +
            ((25.0/12.0))*u0_B0(0,0,0)*rhou0_B0(0,0,0))*invDelta0block0;

       d1_rhou0u1_dx = (-4*u1_B0(-1,0,0)*rhou0_B0(-1,0,0) + 3*u1_B0(-2,0,0)*rhou0_B0(-2,0,0) -
            (4.0/3.0)*u1_B0(-3,0,0)*rhou0_B0(-3,0,0) + ((1.0/4.0))*u1_B0(-4,0,0)*rhou0_B0(-4,0,0) +
            ((25.0/12.0))*u1_B0(0,0,0)*rhou0_B0(0,0,0))*invDelta0block0;

       d1_rhou0u2_dx = (-4*u2_B0(-1,0,0)*rhou0_B0(-1,0,0) + 3*u2_B0(-2,0,0)*rhou0_B0(-2,0,0) -
            (4.0/3.0)*u2_B0(-3,0,0)*rhou0_B0(-3,0,0) + ((1.0/4.0))*u2_B0(-4,0,0)*rhou0_B0(-4,0,0) +
            ((25.0/12.0))*u2_B0(0,0,0)*rhou0_B0(0,0,0))*invDelta0block0;

       d1_rhou1_dx = (-4*rhou1_B0(-1,0,0) + 3*rhou1_B0(-2,0,0) - (4.0/3.0)*rhou1_B0(-3,0,0) +
            ((1.0/4.0))*rhou1_B0(-4,0,0) + ((25.0/12.0))*rhou1_B0(0,0,0))*invDelta0block0;

       d1_rhou1u0_dx = (-4*u0_B0(-1,0,0)*rhou1_B0(-1,0,0) + 3*u0_B0(-2,0,0)*rhou1_B0(-2,0,0) -
            (4.0/3.0)*u0_B0(-3,0,0)*rhou1_B0(-3,0,0) + ((1.0/4.0))*u0_B0(-4,0,0)*rhou1_B0(-4,0,0) +
            ((25.0/12.0))*u0_B0(0,0,0)*rhou1_B0(0,0,0))*invDelta0block0;

       d1_rhou1u1_dx = (-4*u1_B0(-1,0,0)*rhou1_B0(-1,0,0) + 3*u1_B0(-2,0,0)*rhou1_B0(-2,0,0) -
            (4.0/3.0)*u1_B0(-3,0,0)*rhou1_B0(-3,0,0) + ((1.0/4.0))*u1_B0(-4,0,0)*rhou1_B0(-4,0,0) +
            ((25.0/12.0))*u1_B0(0,0,0)*rhou1_B0(0,0,0))*invDelta0block0;

       d1_rhou1u2_dx = (-4*u2_B0(-1,0,0)*rhou1_B0(-1,0,0) + 3*u2_B0(-2,0,0)*rhou1_B0(-2,0,0) -
            (4.0/3.0)*u2_B0(-3,0,0)*rhou1_B0(-3,0,0) + ((1.0/4.0))*u2_B0(-4,0,0)*rhou1_B0(-4,0,0) +
            ((25.0/12.0))*u2_B0(0,0,0)*rhou1_B0(0,0,0))*invDelta0block0;

       d1_rhou2_dx = (-4*rhou2_B0(-1,0,0) + 3*rhou2_B0(-2,0,0) - (4.0/3.0)*rhou2_B0(-3,0,0) +
            ((1.0/4.0))*rhou2_B0(-4,0,0) + ((25.0/12.0))*rhou2_B0(0,0,0))*invDelta0block0;

       d1_u0u0_dx = (-4*(u0_B0(-1,0,0)*u0_B0(-1,0,0)) + 3*(u0_B0(-2,0,0)*u0_B0(-2,0,0)) -
            (4.0/3.0)*(u0_B0(-3,0,0)*u0_B0(-3,0,0)) + ((1.0/4.0))*(u0_B0(-4,0,0)*u0_B0(-4,0,0)) +
            ((25.0/12.0))*(u0_B0(0,0,0)*u0_B0(0,0,0)))*invDelta0block0;

       d1_u0u1_dx = (-4*u0_B0(-1,0,0)*u1_B0(-1,0,0) + 3*u0_B0(-2,0,0)*u1_B0(-2,0,0) -
            (4.0/3.0)*u0_B0(-3,0,0)*u1_B0(-3,0,0) + ((1.0/4.0))*u0_B0(-4,0,0)*u1_B0(-4,0,0) +
            ((25.0/12.0))*u0_B0(0,0,0)*u1_B0(0,0,0))*invDelta0block0;

       d1_u0u2_dx = (-4*u0_B0(-1,0,0)*u2_B0(-1,0,0) + 3*u0_B0(-2,0,0)*u2_B0(-2,0,0) -
            (4.0/3.0)*u0_B0(-3,0,0)*u2_B0(-3,0,0) + ((1.0/4.0))*u0_B0(-4,0,0)*u2_B0(-4,0,0) +
            ((25.0/12.0))*u0_B0(0,0,0)*u2_B0(0,0,0))*invDelta0block0;

       d1_u1u1_dx = (-4*(u1_B0(-1,0,0)*u1_B0(-1,0,0)) + 3*(u1_B0(-2,0,0)*u1_B0(-2,0,0)) -
            (4.0/3.0)*(u1_B0(-3,0,0)*u1_B0(-3,0,0)) + ((1.0/4.0))*(u1_B0(-4,0,0)*u1_B0(-4,0,0)) +
            ((25.0/12.0))*(u1_B0(0,0,0)*u1_B0(0,0,0)))*invDelta0block0;

       d1_u1u2_dx = (-4*u1_B0(-1,0,0)*u2_B0(-1,0,0) + 3*u1_B0(-2,0,0)*u2_B0(-2,0,0) -
            (4.0/3.0)*u1_B0(-3,0,0)*u2_B0(-3,0,0) + ((1.0/4.0))*u1_B0(-4,0,0)*u2_B0(-4,0,0) +
            ((25.0/12.0))*u1_B0(0,0,0)*u2_B0(0,0,0))*invDelta0block0;

   }

   else if (idx[0] == -2 + block0np0){

       d1_p_dx = (((1.0/2.0))*p_B0(-2,0,0) - (3.0/2.0)*p_B0(-1,0,0) - (1.0/12.0)*p_B0(-3,0,0) + ((1.0/4.0))*p_B0(1,0,0)
            + ((5.0/6.0))*p_B0(0,0,0))*invDelta0block0;

       d1_pu0_dx = (((1.0/2.0))*p_B0(-2,0,0)*u0_B0(-2,0,0) - (3.0/2.0)*p_B0(-1,0,0)*u0_B0(-1,0,0) -
            (1.0/12.0)*p_B0(-3,0,0)*u0_B0(-3,0,0) + ((1.0/4.0))*p_B0(1,0,0)*u0_B0(1,0,0) +
            ((5.0/6.0))*p_B0(0,0,0)*u0_B0(0,0,0))*invDelta0block0;

       d1_pu1_dx = (((1.0/2.0))*p_B0(-2,0,0)*u1_B0(-2,0,0) - (3.0/2.0)*p_B0(-1,0,0)*u1_B0(-1,0,0) -
            (1.0/12.0)*p_B0(-3,0,0)*u1_B0(-3,0,0) + ((1.0/4.0))*p_B0(1,0,0)*u1_B0(1,0,0) +
            ((5.0/6.0))*p_B0(0,0,0)*u1_B0(0,0,0))*invDelta0block0;

       d1_rhoE_dx = (((1.0/2.0))*rhoE_B0(-2,0,0) - (3.0/2.0)*rhoE_B0(-1,0,0) - (1.0/12.0)*rhoE_B0(-3,0,0) +
            ((1.0/4.0))*rhoE_B0(1,0,0) + ((5.0/6.0))*rhoE_B0(0,0,0))*invDelta0block0;

       d1_rhoEu0_dx = (((1.0/2.0))*u0_B0(-2,0,0)*rhoE_B0(-2,0,0) - (3.0/2.0)*u0_B0(-1,0,0)*rhoE_B0(-1,0,0) -
            (1.0/12.0)*u0_B0(-3,0,0)*rhoE_B0(-3,0,0) + ((1.0/4.0))*u0_B0(1,0,0)*rhoE_B0(1,0,0) +
            ((5.0/6.0))*u0_B0(0,0,0)*rhoE_B0(0,0,0))*invDelta0block0;

       d1_inv_rhoErhou0_dx = (((1.0/2.0))*u0_B0(-2,0,0)*rhoE_B0(-2,0,0)/rho_B0(-2,0,0) -
            (3.0/2.0)*u0_B0(-1,0,0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0) -
            (1.0/12.0)*u0_B0(-3,0,0)*rhoE_B0(-3,0,0)/rho_B0(-3,0,0) +
            ((1.0/4.0))*u0_B0(1,0,0)*rhoE_B0(1,0,0)/rho_B0(1,0,0) +
            ((5.0/6.0))*u0_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0))*invDelta0block0;

       d1_rhoEu1_dx = (((1.0/2.0))*u1_B0(-2,0,0)*rhoE_B0(-2,0,0) - (3.0/2.0)*u1_B0(-1,0,0)*rhoE_B0(-1,0,0) -
            (1.0/12.0)*u1_B0(-3,0,0)*rhoE_B0(-3,0,0) + ((1.0/4.0))*u1_B0(1,0,0)*rhoE_B0(1,0,0) +
            ((5.0/6.0))*u1_B0(0,0,0)*rhoE_B0(0,0,0))*invDelta0block0;

       d1_inv_rhoErhou1_dx = (((1.0/2.0))*u1_B0(-2,0,0)*rhoE_B0(-2,0,0)/rho_B0(-2,0,0) -
            (3.0/2.0)*u1_B0(-1,0,0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0) -
            (1.0/12.0)*u1_B0(-3,0,0)*rhoE_B0(-3,0,0)/rho_B0(-3,0,0) +
            ((1.0/4.0))*u1_B0(1,0,0)*rhoE_B0(1,0,0)/rho_B0(1,0,0) +
            ((5.0/6.0))*u1_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0))*invDelta0block0;

       d1_inv_rhoErho_dx = (((1.0/2.0))*rhoE_B0(-2,0,0)/rho_B0(-2,0,0) - (3.0/2.0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0) -
            (1.0/12.0)*rhoE_B0(-3,0,0)/rho_B0(-3,0,0) + ((1.0/4.0))*rhoE_B0(1,0,0)/rho_B0(1,0,0) +
            ((5.0/6.0))*rhoE_B0(0,0,0)/rho_B0(0,0,0))*invDelta0block0;

       d1_rho_dx = (((1.0/2.0))*rho_B0(-2,0,0) - (3.0/2.0)*rho_B0(-1,0,0) - (1.0/12.0)*rho_B0(-3,0,0) +
            ((1.0/4.0))*rho_B0(1,0,0) + ((5.0/6.0))*rho_B0(0,0,0))*invDelta0block0;

       d1_rhou0_dx = (((1.0/2.0))*rhou0_B0(-2,0,0) - (3.0/2.0)*rhou0_B0(-1,0,0) - (1.0/12.0)*rhou0_B0(-3,0,0) +
            ((1.0/4.0))*rhou0_B0(1,0,0) + ((5.0/6.0))*rhou0_B0(0,0,0))*invDelta0block0;

       d1_rhou0u0_dx = (((1.0/2.0))*u0_B0(-2,0,0)*rhou0_B0(-2,0,0) - (3.0/2.0)*u0_B0(-1,0,0)*rhou0_B0(-1,0,0) -
            (1.0/12.0)*u0_B0(-3,0,0)*rhou0_B0(-3,0,0) + ((1.0/4.0))*u0_B0(1,0,0)*rhou0_B0(1,0,0) +
            ((5.0/6.0))*u0_B0(0,0,0)*rhou0_B0(0,0,0))*invDelta0block0;

       d1_rhou0u1_dx = (((1.0/2.0))*u1_B0(-2,0,0)*rhou0_B0(-2,0,0) - (3.0/2.0)*u1_B0(-1,0,0)*rhou0_B0(-1,0,0) -
            (1.0/12.0)*u1_B0(-3,0,0)*rhou0_B0(-3,0,0) + ((1.0/4.0))*u1_B0(1,0,0)*rhou0_B0(1,0,0) +
            ((5.0/6.0))*u1_B0(0,0,0)*rhou0_B0(0,0,0))*invDelta0block0;

       d1_rhou0u2_dx = (((1.0/2.0))*u2_B0(-2,0,0)*rhou0_B0(-2,0,0) - (3.0/2.0)*u2_B0(-1,0,0)*rhou0_B0(-1,0,0) -
            (1.0/12.0)*u2_B0(-3,0,0)*rhou0_B0(-3,0,0) + ((1.0/4.0))*u2_B0(1,0,0)*rhou0_B0(1,0,0) +
            ((5.0/6.0))*u2_B0(0,0,0)*rhou0_B0(0,0,0))*invDelta0block0;

       d1_rhou1_dx = (((1.0/2.0))*rhou1_B0(-2,0,0) - (3.0/2.0)*rhou1_B0(-1,0,0) - (1.0/12.0)*rhou1_B0(-3,0,0) +
            ((1.0/4.0))*rhou1_B0(1,0,0) + ((5.0/6.0))*rhou1_B0(0,0,0))*invDelta0block0;

       d1_rhou1u0_dx = (((1.0/2.0))*u0_B0(-2,0,0)*rhou1_B0(-2,0,0) - (3.0/2.0)*u0_B0(-1,0,0)*rhou1_B0(-1,0,0) -
            (1.0/12.0)*u0_B0(-3,0,0)*rhou1_B0(-3,0,0) + ((1.0/4.0))*u0_B0(1,0,0)*rhou1_B0(1,0,0) +
            ((5.0/6.0))*u0_B0(0,0,0)*rhou1_B0(0,0,0))*invDelta0block0;

       d1_rhou1u1_dx = (((1.0/2.0))*u1_B0(-2,0,0)*rhou1_B0(-2,0,0) - (3.0/2.0)*u1_B0(-1,0,0)*rhou1_B0(-1,0,0) -
            (1.0/12.0)*u1_B0(-3,0,0)*rhou1_B0(-3,0,0) + ((1.0/4.0))*u1_B0(1,0,0)*rhou1_B0(1,0,0) +
            ((5.0/6.0))*u1_B0(0,0,0)*rhou1_B0(0,0,0))*invDelta0block0;

       d1_rhou1u2_dx = (((1.0/2.0))*u2_B0(-2,0,0)*rhou1_B0(-2,0,0) - (3.0/2.0)*u2_B0(-1,0,0)*rhou1_B0(-1,0,0) -
            (1.0/12.0)*u2_B0(-3,0,0)*rhou1_B0(-3,0,0) + ((1.0/4.0))*u2_B0(1,0,0)*rhou1_B0(1,0,0) +
            ((5.0/6.0))*u2_B0(0,0,0)*rhou1_B0(0,0,0))*invDelta0block0;

       d1_rhou2_dx = (((1.0/2.0))*rhou2_B0(-2,0,0) - (3.0/2.0)*rhou2_B0(-1,0,0) - (1.0/12.0)*rhou2_B0(-3,0,0) +
            ((1.0/4.0))*rhou2_B0(1,0,0) + ((5.0/6.0))*rhou2_B0(0,0,0))*invDelta0block0;

       d1_u0u0_dx = (((1.0/2.0))*(u0_B0(-2,0,0)*u0_B0(-2,0,0)) - (3.0/2.0)*(u0_B0(-1,0,0)*u0_B0(-1,0,0)) -
            (1.0/12.0)*(u0_B0(-3,0,0)*u0_B0(-3,0,0)) + ((1.0/4.0))*(u0_B0(1,0,0)*u0_B0(1,0,0)) +
            ((5.0/6.0))*(u0_B0(0,0,0)*u0_B0(0,0,0)))*invDelta0block0;

       d1_u0u1_dx = (((1.0/2.0))*u0_B0(-2,0,0)*u1_B0(-2,0,0) - (3.0/2.0)*u0_B0(-1,0,0)*u1_B0(-1,0,0) -
            (1.0/12.0)*u0_B0(-3,0,0)*u1_B0(-3,0,0) + ((1.0/4.0))*u0_B0(1,0,0)*u1_B0(1,0,0) +
            ((5.0/6.0))*u0_B0(0,0,0)*u1_B0(0,0,0))*invDelta0block0;

       d1_u0u2_dx = (((1.0/2.0))*u0_B0(-2,0,0)*u2_B0(-2,0,0) - (3.0/2.0)*u0_B0(-1,0,0)*u2_B0(-1,0,0) -
            (1.0/12.0)*u0_B0(-3,0,0)*u2_B0(-3,0,0) + ((1.0/4.0))*u0_B0(1,0,0)*u2_B0(1,0,0) +
            ((5.0/6.0))*u0_B0(0,0,0)*u2_B0(0,0,0))*invDelta0block0;

       d1_u1u1_dx = (((1.0/2.0))*(u1_B0(-2,0,0)*u1_B0(-2,0,0)) - (3.0/2.0)*(u1_B0(-1,0,0)*u1_B0(-1,0,0)) -
            (1.0/12.0)*(u1_B0(-3,0,0)*u1_B0(-3,0,0)) + ((1.0/4.0))*(u1_B0(1,0,0)*u1_B0(1,0,0)) +
            ((5.0/6.0))*(u1_B0(0,0,0)*u1_B0(0,0,0)))*invDelta0block0;

       d1_u1u2_dx = (((1.0/2.0))*u1_B0(-2,0,0)*u2_B0(-2,0,0) - (3.0/2.0)*u1_B0(-1,0,0)*u2_B0(-1,0,0) -
            (1.0/12.0)*u1_B0(-3,0,0)*u2_B0(-3,0,0) + ((1.0/4.0))*u1_B0(1,0,0)*u2_B0(1,0,0) +
            ((5.0/6.0))*u1_B0(0,0,0)*u2_B0(0,0,0))*invDelta0block0;

   }

   else{

       d1_p_dx = (-(2.0/3.0)*p_B0(-1,0,0) - (1.0/12.0)*p_B0(2,0,0) + ((1.0/12.0))*p_B0(-2,0,0) +
            ((2.0/3.0))*p_B0(1,0,0))*invDelta0block0;

       d1_pu0_dx = (-(2.0/3.0)*p_B0(-1,0,0)*u0_B0(-1,0,0) - (1.0/12.0)*p_B0(2,0,0)*u0_B0(2,0,0) +
            ((1.0/12.0))*p_B0(-2,0,0)*u0_B0(-2,0,0) + ((2.0/3.0))*p_B0(1,0,0)*u0_B0(1,0,0))*invDelta0block0;

       d1_pu1_dx = (-(2.0/3.0)*p_B0(-1,0,0)*u1_B0(-1,0,0) - (1.0/12.0)*p_B0(2,0,0)*u1_B0(2,0,0) +
            ((1.0/12.0))*p_B0(-2,0,0)*u1_B0(-2,0,0) + ((2.0/3.0))*p_B0(1,0,0)*u1_B0(1,0,0))*invDelta0block0;

       d1_rhoE_dx = (-(2.0/3.0)*rhoE_B0(-1,0,0) - (1.0/12.0)*rhoE_B0(2,0,0) + ((1.0/12.0))*rhoE_B0(-2,0,0) +
            ((2.0/3.0))*rhoE_B0(1,0,0))*invDelta0block0;

       d1_rhoEu0_dx = (-(2.0/3.0)*u0_B0(-1,0,0)*rhoE_B0(-1,0,0) - (1.0/12.0)*u0_B0(2,0,0)*rhoE_B0(2,0,0) +
            ((1.0/12.0))*u0_B0(-2,0,0)*rhoE_B0(-2,0,0) + ((2.0/3.0))*u0_B0(1,0,0)*rhoE_B0(1,0,0))*invDelta0block0;

       d1_inv_rhoErhou0_dx = (-(2.0/3.0)*u0_B0(-1,0,0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0) -
            (1.0/12.0)*u0_B0(2,0,0)*rhoE_B0(2,0,0)/rho_B0(2,0,0) +
            ((1.0/12.0))*u0_B0(-2,0,0)*rhoE_B0(-2,0,0)/rho_B0(-2,0,0) +
            ((2.0/3.0))*u0_B0(1,0,0)*rhoE_B0(1,0,0)/rho_B0(1,0,0))*invDelta0block0;

       d1_rhoEu1_dx = (-(2.0/3.0)*u1_B0(-1,0,0)*rhoE_B0(-1,0,0) - (1.0/12.0)*u1_B0(2,0,0)*rhoE_B0(2,0,0) +
            ((1.0/12.0))*u1_B0(-2,0,0)*rhoE_B0(-2,0,0) + ((2.0/3.0))*u1_B0(1,0,0)*rhoE_B0(1,0,0))*invDelta0block0;

       d1_inv_rhoErhou1_dx = (-(2.0/3.0)*u1_B0(-1,0,0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0) -
            (1.0/12.0)*u1_B0(2,0,0)*rhoE_B0(2,0,0)/rho_B0(2,0,0) +
            ((1.0/12.0))*u1_B0(-2,0,0)*rhoE_B0(-2,0,0)/rho_B0(-2,0,0) +
            ((2.0/3.0))*u1_B0(1,0,0)*rhoE_B0(1,0,0)/rho_B0(1,0,0))*invDelta0block0;

       d1_inv_rhoErho_dx = (-(2.0/3.0)*rhoE_B0(-1,0,0)/rho_B0(-1,0,0) - (1.0/12.0)*rhoE_B0(2,0,0)/rho_B0(2,0,0) +
            ((1.0/12.0))*rhoE_B0(-2,0,0)/rho_B0(-2,0,0) + ((2.0/3.0))*rhoE_B0(1,0,0)/rho_B0(1,0,0))*invDelta0block0;

       d1_rho_dx = (-(2.0/3.0)*rho_B0(-1,0,0) - (1.0/12.0)*rho_B0(2,0,0) + ((1.0/12.0))*rho_B0(-2,0,0) +
            ((2.0/3.0))*rho_B0(1,0,0))*invDelta0block0;

       d1_rhou0_dx = (-(2.0/3.0)*rhou0_B0(-1,0,0) - (1.0/12.0)*rhou0_B0(2,0,0) + ((1.0/12.0))*rhou0_B0(-2,0,0) +
            ((2.0/3.0))*rhou0_B0(1,0,0))*invDelta0block0;

       d1_rhou0u0_dx = (-(2.0/3.0)*u0_B0(-1,0,0)*rhou0_B0(-1,0,0) - (1.0/12.0)*u0_B0(2,0,0)*rhou0_B0(2,0,0) +
            ((1.0/12.0))*u0_B0(-2,0,0)*rhou0_B0(-2,0,0) + ((2.0/3.0))*u0_B0(1,0,0)*rhou0_B0(1,0,0))*invDelta0block0;

       d1_rhou0u1_dx = (-(2.0/3.0)*u1_B0(-1,0,0)*rhou0_B0(-1,0,0) - (1.0/12.0)*u1_B0(2,0,0)*rhou0_B0(2,0,0) +
            ((1.0/12.0))*u1_B0(-2,0,0)*rhou0_B0(-2,0,0) + ((2.0/3.0))*u1_B0(1,0,0)*rhou0_B0(1,0,0))*invDelta0block0;

       d1_rhou0u2_dx = (-(2.0/3.0)*u2_B0(-1,0,0)*rhou0_B0(-1,0,0) - (1.0/12.0)*u2_B0(2,0,0)*rhou0_B0(2,0,0) +
            ((1.0/12.0))*u2_B0(-2,0,0)*rhou0_B0(-2,0,0) + ((2.0/3.0))*u2_B0(1,0,0)*rhou0_B0(1,0,0))*invDelta0block0;

       d1_rhou1_dx = (-(2.0/3.0)*rhou1_B0(-1,0,0) - (1.0/12.0)*rhou1_B0(2,0,0) + ((1.0/12.0))*rhou1_B0(-2,0,0) +
            ((2.0/3.0))*rhou1_B0(1,0,0))*invDelta0block0;

       d1_rhou1u0_dx = (-(2.0/3.0)*u0_B0(-1,0,0)*rhou1_B0(-1,0,0) - (1.0/12.0)*u0_B0(2,0,0)*rhou1_B0(2,0,0) +
            ((1.0/12.0))*u0_B0(-2,0,0)*rhou1_B0(-2,0,0) + ((2.0/3.0))*u0_B0(1,0,0)*rhou1_B0(1,0,0))*invDelta0block0;

       d1_rhou1u1_dx = (-(2.0/3.0)*u1_B0(-1,0,0)*rhou1_B0(-1,0,0) - (1.0/12.0)*u1_B0(2,0,0)*rhou1_B0(2,0,0) +
            ((1.0/12.0))*u1_B0(-2,0,0)*rhou1_B0(-2,0,0) + ((2.0/3.0))*u1_B0(1,0,0)*rhou1_B0(1,0,0))*invDelta0block0;

       d1_rhou1u2_dx = (-(2.0/3.0)*u2_B0(-1,0,0)*rhou1_B0(-1,0,0) - (1.0/12.0)*u2_B0(2,0,0)*rhou1_B0(2,0,0) +
            ((1.0/12.0))*u2_B0(-2,0,0)*rhou1_B0(-2,0,0) + ((2.0/3.0))*u2_B0(1,0,0)*rhou1_B0(1,0,0))*invDelta0block0;

       d1_rhou2_dx = (-(2.0/3.0)*rhou2_B0(-1,0,0) - (1.0/12.0)*rhou2_B0(2,0,0) + ((1.0/12.0))*rhou2_B0(-2,0,0) +
            ((2.0/3.0))*rhou2_B0(1,0,0))*invDelta0block0;

       d1_u0u0_dx = (-(2.0/3.0)*(u0_B0(-1,0,0)*u0_B0(-1,0,0)) - (1.0/12.0)*(u0_B0(2,0,0)*u0_B0(2,0,0)) +
            ((1.0/12.0))*(u0_B0(-2,0,0)*u0_B0(-2,0,0)) + ((2.0/3.0))*(u0_B0(1,0,0)*u0_B0(1,0,0)))*invDelta0block0;

       d1_u0u1_dx = (-(2.0/3.0)*u0_B0(-1,0,0)*u1_B0(-1,0,0) - (1.0/12.0)*u0_B0(2,0,0)*u1_B0(2,0,0) +
            ((1.0/12.0))*u0_B0(-2,0,0)*u1_B0(-2,0,0) + ((2.0/3.0))*u0_B0(1,0,0)*u1_B0(1,0,0))*invDelta0block0;

       d1_u0u2_dx = (-(2.0/3.0)*u0_B0(-1,0,0)*u2_B0(-1,0,0) - (1.0/12.0)*u0_B0(2,0,0)*u2_B0(2,0,0) +
            ((1.0/12.0))*u0_B0(-2,0,0)*u2_B0(-2,0,0) + ((2.0/3.0))*u0_B0(1,0,0)*u2_B0(1,0,0))*invDelta0block0;

       d1_u1u1_dx = (-(2.0/3.0)*(u1_B0(-1,0,0)*u1_B0(-1,0,0)) - (1.0/12.0)*(u1_B0(2,0,0)*u1_B0(2,0,0)) +
            ((1.0/12.0))*(u1_B0(-2,0,0)*u1_B0(-2,0,0)) + ((2.0/3.0))*(u1_B0(1,0,0)*u1_B0(1,0,0)))*invDelta0block0;

       d1_u1u2_dx = (-(2.0/3.0)*u1_B0(-1,0,0)*u2_B0(-1,0,0) - (1.0/12.0)*u1_B0(2,0,0)*u2_B0(2,0,0) +
            ((1.0/12.0))*u1_B0(-2,0,0)*u2_B0(-2,0,0) + ((2.0/3.0))*u1_B0(1,0,0)*u2_B0(1,0,0))*invDelta0block0;

   }

   if (idx[1] == 0){

       d1_p_dy = (-3*p_B0(0,2,0) + 4*p_B0(0,1,0) - (25.0/12.0)*p_B0(0,0,0) - (1.0/4.0)*p_B0(0,4,0) +
            ((4.0/3.0))*p_B0(0,3,0))*invDelta1block0;

       d1_pu0_dy = (-3*p_B0(0,2,0)*u0_B0(0,2,0) + 4*p_B0(0,1,0)*u0_B0(0,1,0) - (25.0/12.0)*p_B0(0,0,0)*u0_B0(0,0,0) -
            (1.0/4.0)*p_B0(0,4,0)*u0_B0(0,4,0) + ((4.0/3.0))*p_B0(0,3,0)*u0_B0(0,3,0))*invDelta1block0;

       d1_pu1_dy = (-3*p_B0(0,2,0)*u1_B0(0,2,0) + 4*p_B0(0,1,0)*u1_B0(0,1,0) - (25.0/12.0)*p_B0(0,0,0)*u1_B0(0,0,0) -
            (1.0/4.0)*p_B0(0,4,0)*u1_B0(0,4,0) + ((4.0/3.0))*p_B0(0,3,0)*u1_B0(0,3,0))*invDelta1block0;

       d1_rhoE_dy = (-3*rhoE_B0(0,2,0) + 4*rhoE_B0(0,1,0) - (25.0/12.0)*rhoE_B0(0,0,0) - (1.0/4.0)*rhoE_B0(0,4,0) +
            ((4.0/3.0))*rhoE_B0(0,3,0))*invDelta1block0;

       d1_rhoEu0_dy = (-3*u0_B0(0,2,0)*rhoE_B0(0,2,0) + 4*u0_B0(0,1,0)*rhoE_B0(0,1,0) -
            (25.0/12.0)*u0_B0(0,0,0)*rhoE_B0(0,0,0) - (1.0/4.0)*u0_B0(0,4,0)*rhoE_B0(0,4,0) +
            ((4.0/3.0))*u0_B0(0,3,0)*rhoE_B0(0,3,0))*invDelta1block0;

       d1_inv_rhoErhou0_dy = (-3*u0_B0(0,2,0)*rhoE_B0(0,2,0)/rho_B0(0,2,0) + 4*u0_B0(0,1,0)*rhoE_B0(0,1,0)/rho_B0(0,1,0)
            - (25.0/12.0)*u0_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
            (1.0/4.0)*u0_B0(0,4,0)*rhoE_B0(0,4,0)/rho_B0(0,4,0) +
            ((4.0/3.0))*u0_B0(0,3,0)*rhoE_B0(0,3,0)/rho_B0(0,3,0))*invDelta1block0;

       d1_rhoEu1_dy = (-3*u1_B0(0,2,0)*rhoE_B0(0,2,0) + 4*u1_B0(0,1,0)*rhoE_B0(0,1,0) -
            (25.0/12.0)*u1_B0(0,0,0)*rhoE_B0(0,0,0) - (1.0/4.0)*u1_B0(0,4,0)*rhoE_B0(0,4,0) +
            ((4.0/3.0))*u1_B0(0,3,0)*rhoE_B0(0,3,0))*invDelta1block0;

       d1_inv_rhoErhou1_dy = (-3*u1_B0(0,2,0)*rhoE_B0(0,2,0)/rho_B0(0,2,0) + 4*u1_B0(0,1,0)*rhoE_B0(0,1,0)/rho_B0(0,1,0)
            - (25.0/12.0)*u1_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
            (1.0/4.0)*u1_B0(0,4,0)*rhoE_B0(0,4,0)/rho_B0(0,4,0) +
            ((4.0/3.0))*u1_B0(0,3,0)*rhoE_B0(0,3,0)/rho_B0(0,3,0))*invDelta1block0;

       d1_inv_rhoErho_dy = (-3*rhoE_B0(0,2,0)/rho_B0(0,2,0) + 4*rhoE_B0(0,1,0)/rho_B0(0,1,0) -
            (25.0/12.0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) - (1.0/4.0)*rhoE_B0(0,4,0)/rho_B0(0,4,0) +
            ((4.0/3.0))*rhoE_B0(0,3,0)/rho_B0(0,3,0))*invDelta1block0;

       d1_rho_dy = (-3*rho_B0(0,2,0) + 4*rho_B0(0,1,0) - (25.0/12.0)*rho_B0(0,0,0) - (1.0/4.0)*rho_B0(0,4,0) +
            ((4.0/3.0))*rho_B0(0,3,0))*invDelta1block0;

       d1_rhou0_dy = (-3*rhou0_B0(0,2,0) + 4*rhou0_B0(0,1,0) - (25.0/12.0)*rhou0_B0(0,0,0) - (1.0/4.0)*rhou0_B0(0,4,0) +
            ((4.0/3.0))*rhou0_B0(0,3,0))*invDelta1block0;

       d1_rhou0u0_dy = (-3*u0_B0(0,2,0)*rhou0_B0(0,2,0) + 4*u0_B0(0,1,0)*rhou0_B0(0,1,0) -
            (25.0/12.0)*u0_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/4.0)*u0_B0(0,4,0)*rhou0_B0(0,4,0) +
            ((4.0/3.0))*u0_B0(0,3,0)*rhou0_B0(0,3,0))*invDelta1block0;

       d1_rhou0u1_dy = (-3*u1_B0(0,2,0)*rhou0_B0(0,2,0) + 4*u1_B0(0,1,0)*rhou0_B0(0,1,0) -
            (25.0/12.0)*u1_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/4.0)*u1_B0(0,4,0)*rhou0_B0(0,4,0) +
            ((4.0/3.0))*u1_B0(0,3,0)*rhou0_B0(0,3,0))*invDelta1block0;

       d1_rhou0u2_dy = (-3*u2_B0(0,2,0)*rhou0_B0(0,2,0) + 4*u2_B0(0,1,0)*rhou0_B0(0,1,0) -
            (25.0/12.0)*u2_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/4.0)*u2_B0(0,4,0)*rhou0_B0(0,4,0) +
            ((4.0/3.0))*u2_B0(0,3,0)*rhou0_B0(0,3,0))*invDelta1block0;

       d1_rhou1_dy = (-3*rhou1_B0(0,2,0) + 4*rhou1_B0(0,1,0) - (25.0/12.0)*rhou1_B0(0,0,0) - (1.0/4.0)*rhou1_B0(0,4,0) +
            ((4.0/3.0))*rhou1_B0(0,3,0))*invDelta1block0;

       d1_rhou1u0_dy = (-3*u0_B0(0,2,0)*rhou1_B0(0,2,0) + 4*u0_B0(0,1,0)*rhou1_B0(0,1,0) -
            (25.0/12.0)*u0_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/4.0)*u0_B0(0,4,0)*rhou1_B0(0,4,0) +
            ((4.0/3.0))*u0_B0(0,3,0)*rhou1_B0(0,3,0))*invDelta1block0;

       d1_rhou1u1_dy = (-3*u1_B0(0,2,0)*rhou1_B0(0,2,0) + 4*u1_B0(0,1,0)*rhou1_B0(0,1,0) -
            (25.0/12.0)*u1_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/4.0)*u1_B0(0,4,0)*rhou1_B0(0,4,0) +
            ((4.0/3.0))*u1_B0(0,3,0)*rhou1_B0(0,3,0))*invDelta1block0;

       d1_rhou1u2_dy = (-3*u2_B0(0,2,0)*rhou1_B0(0,2,0) + 4*u2_B0(0,1,0)*rhou1_B0(0,1,0) -
            (25.0/12.0)*u2_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/4.0)*u2_B0(0,4,0)*rhou1_B0(0,4,0) +
            ((4.0/3.0))*u2_B0(0,3,0)*rhou1_B0(0,3,0))*invDelta1block0;

       d1_rhou2_dy = (-3*rhou2_B0(0,2,0) + 4*rhou2_B0(0,1,0) - (25.0/12.0)*rhou2_B0(0,0,0) - (1.0/4.0)*rhou2_B0(0,4,0) +
            ((4.0/3.0))*rhou2_B0(0,3,0))*invDelta1block0;

       d1_u0u0_dy = (-3*(u0_B0(0,2,0)*u0_B0(0,2,0)) + 4*(u0_B0(0,1,0)*u0_B0(0,1,0)) -
            (25.0/12.0)*(u0_B0(0,0,0)*u0_B0(0,0,0)) - (1.0/4.0)*(u0_B0(0,4,0)*u0_B0(0,4,0)) +
            ((4.0/3.0))*(u0_B0(0,3,0)*u0_B0(0,3,0)))*invDelta1block0;

       d1_u0u1_dy = (-3*u0_B0(0,2,0)*u1_B0(0,2,0) + 4*u0_B0(0,1,0)*u1_B0(0,1,0) - (25.0/12.0)*u0_B0(0,0,0)*u1_B0(0,0,0)
            - (1.0/4.0)*u0_B0(0,4,0)*u1_B0(0,4,0) + ((4.0/3.0))*u0_B0(0,3,0)*u1_B0(0,3,0))*invDelta1block0;

       d1_u0u2_dy = (-3*u0_B0(0,2,0)*u2_B0(0,2,0) + 4*u0_B0(0,1,0)*u2_B0(0,1,0) - (25.0/12.0)*u0_B0(0,0,0)*u2_B0(0,0,0)
            - (1.0/4.0)*u0_B0(0,4,0)*u2_B0(0,4,0) + ((4.0/3.0))*u0_B0(0,3,0)*u2_B0(0,3,0))*invDelta1block0;

       d1_u1u1_dy = (-3*(u1_B0(0,2,0)*u1_B0(0,2,0)) + 4*(u1_B0(0,1,0)*u1_B0(0,1,0)) -
            (25.0/12.0)*(u1_B0(0,0,0)*u1_B0(0,0,0)) - (1.0/4.0)*(u1_B0(0,4,0)*u1_B0(0,4,0)) +
            ((4.0/3.0))*(u1_B0(0,3,0)*u1_B0(0,3,0)))*invDelta1block0;

       d1_u1u2_dy = (-3*u1_B0(0,2,0)*u2_B0(0,2,0) + 4*u1_B0(0,1,0)*u2_B0(0,1,0) - (25.0/12.0)*u1_B0(0,0,0)*u2_B0(0,0,0)
            - (1.0/4.0)*u1_B0(0,4,0)*u2_B0(0,4,0) + ((4.0/3.0))*u1_B0(0,3,0)*u2_B0(0,3,0))*invDelta1block0;

   }

   else if (idx[1] == 1){

       d1_p_dy = (-(5.0/6.0)*p_B0(0,0,0) - (1.0/2.0)*p_B0(0,2,0) - (1.0/4.0)*p_B0(0,-1,0) + ((1.0/12.0))*p_B0(0,3,0) +
            ((3.0/2.0))*p_B0(0,1,0))*invDelta1block0;

       d1_pu0_dy = (-(5.0/6.0)*p_B0(0,0,0)*u0_B0(0,0,0) - (1.0/2.0)*p_B0(0,2,0)*u0_B0(0,2,0) -
            (1.0/4.0)*p_B0(0,-1,0)*u0_B0(0,-1,0) + ((1.0/12.0))*p_B0(0,3,0)*u0_B0(0,3,0) +
            ((3.0/2.0))*p_B0(0,1,0)*u0_B0(0,1,0))*invDelta1block0;

       d1_pu1_dy = (-(5.0/6.0)*p_B0(0,0,0)*u1_B0(0,0,0) - (1.0/2.0)*p_B0(0,2,0)*u1_B0(0,2,0) -
            (1.0/4.0)*p_B0(0,-1,0)*u1_B0(0,-1,0) + ((1.0/12.0))*p_B0(0,3,0)*u1_B0(0,3,0) +
            ((3.0/2.0))*p_B0(0,1,0)*u1_B0(0,1,0))*invDelta1block0;

       d1_rhoE_dy = (-(5.0/6.0)*rhoE_B0(0,0,0) - (1.0/2.0)*rhoE_B0(0,2,0) - (1.0/4.0)*rhoE_B0(0,-1,0) +
            ((1.0/12.0))*rhoE_B0(0,3,0) + ((3.0/2.0))*rhoE_B0(0,1,0))*invDelta1block0;

       d1_rhoEu0_dy = (-(5.0/6.0)*u0_B0(0,0,0)*rhoE_B0(0,0,0) - (1.0/2.0)*u0_B0(0,2,0)*rhoE_B0(0,2,0) -
            (1.0/4.0)*u0_B0(0,-1,0)*rhoE_B0(0,-1,0) + ((1.0/12.0))*u0_B0(0,3,0)*rhoE_B0(0,3,0) +
            ((3.0/2.0))*u0_B0(0,1,0)*rhoE_B0(0,1,0))*invDelta1block0;

       d1_inv_rhoErhou0_dy = (-(5.0/6.0)*u0_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
            (1.0/2.0)*u0_B0(0,2,0)*rhoE_B0(0,2,0)/rho_B0(0,2,0) - (1.0/4.0)*u0_B0(0,-1,0)*rhoE_B0(0,-1,0)/rho_B0(0,-1,0)
            + ((1.0/12.0))*u0_B0(0,3,0)*rhoE_B0(0,3,0)/rho_B0(0,3,0) +
            ((3.0/2.0))*u0_B0(0,1,0)*rhoE_B0(0,1,0)/rho_B0(0,1,0))*invDelta1block0;

       d1_rhoEu1_dy = (-(5.0/6.0)*u1_B0(0,0,0)*rhoE_B0(0,0,0) - (1.0/2.0)*u1_B0(0,2,0)*rhoE_B0(0,2,0) -
            (1.0/4.0)*u1_B0(0,-1,0)*rhoE_B0(0,-1,0) + ((1.0/12.0))*u1_B0(0,3,0)*rhoE_B0(0,3,0) +
            ((3.0/2.0))*u1_B0(0,1,0)*rhoE_B0(0,1,0))*invDelta1block0;

       d1_inv_rhoErhou1_dy = (-(5.0/6.0)*u1_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
            (1.0/2.0)*u1_B0(0,2,0)*rhoE_B0(0,2,0)/rho_B0(0,2,0) - (1.0/4.0)*u1_B0(0,-1,0)*rhoE_B0(0,-1,0)/rho_B0(0,-1,0)
            + ((1.0/12.0))*u1_B0(0,3,0)*rhoE_B0(0,3,0)/rho_B0(0,3,0) +
            ((3.0/2.0))*u1_B0(0,1,0)*rhoE_B0(0,1,0)/rho_B0(0,1,0))*invDelta1block0;

       d1_inv_rhoErho_dy = (-(5.0/6.0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) - (1.0/2.0)*rhoE_B0(0,2,0)/rho_B0(0,2,0) -
            (1.0/4.0)*rhoE_B0(0,-1,0)/rho_B0(0,-1,0) + ((1.0/12.0))*rhoE_B0(0,3,0)/rho_B0(0,3,0) +
            ((3.0/2.0))*rhoE_B0(0,1,0)/rho_B0(0,1,0))*invDelta1block0;

       d1_rho_dy = (-(5.0/6.0)*rho_B0(0,0,0) - (1.0/2.0)*rho_B0(0,2,0) - (1.0/4.0)*rho_B0(0,-1,0) +
            ((1.0/12.0))*rho_B0(0,3,0) + ((3.0/2.0))*rho_B0(0,1,0))*invDelta1block0;

       d1_rhou0_dy = (-(5.0/6.0)*rhou0_B0(0,0,0) - (1.0/2.0)*rhou0_B0(0,2,0) - (1.0/4.0)*rhou0_B0(0,-1,0) +
            ((1.0/12.0))*rhou0_B0(0,3,0) + ((3.0/2.0))*rhou0_B0(0,1,0))*invDelta1block0;

       d1_rhou0u0_dy = (-(5.0/6.0)*u0_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/2.0)*u0_B0(0,2,0)*rhou0_B0(0,2,0) -
            (1.0/4.0)*u0_B0(0,-1,0)*rhou0_B0(0,-1,0) + ((1.0/12.0))*u0_B0(0,3,0)*rhou0_B0(0,3,0) +
            ((3.0/2.0))*u0_B0(0,1,0)*rhou0_B0(0,1,0))*invDelta1block0;

       d1_rhou0u1_dy = (-(5.0/6.0)*u1_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/2.0)*u1_B0(0,2,0)*rhou0_B0(0,2,0) -
            (1.0/4.0)*u1_B0(0,-1,0)*rhou0_B0(0,-1,0) + ((1.0/12.0))*u1_B0(0,3,0)*rhou0_B0(0,3,0) +
            ((3.0/2.0))*u1_B0(0,1,0)*rhou0_B0(0,1,0))*invDelta1block0;

       d1_rhou0u2_dy = (-(5.0/6.0)*u2_B0(0,0,0)*rhou0_B0(0,0,0) - (1.0/2.0)*u2_B0(0,2,0)*rhou0_B0(0,2,0) -
            (1.0/4.0)*u2_B0(0,-1,0)*rhou0_B0(0,-1,0) + ((1.0/12.0))*u2_B0(0,3,0)*rhou0_B0(0,3,0) +
            ((3.0/2.0))*u2_B0(0,1,0)*rhou0_B0(0,1,0))*invDelta1block0;

       d1_rhou1_dy = (-(5.0/6.0)*rhou1_B0(0,0,0) - (1.0/2.0)*rhou1_B0(0,2,0) - (1.0/4.0)*rhou1_B0(0,-1,0) +
            ((1.0/12.0))*rhou1_B0(0,3,0) + ((3.0/2.0))*rhou1_B0(0,1,0))*invDelta1block0;

       d1_rhou1u0_dy = (-(5.0/6.0)*u0_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/2.0)*u0_B0(0,2,0)*rhou1_B0(0,2,0) -
            (1.0/4.0)*u0_B0(0,-1,0)*rhou1_B0(0,-1,0) + ((1.0/12.0))*u0_B0(0,3,0)*rhou1_B0(0,3,0) +
            ((3.0/2.0))*u0_B0(0,1,0)*rhou1_B0(0,1,0))*invDelta1block0;

       d1_rhou1u1_dy = (-(5.0/6.0)*u1_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/2.0)*u1_B0(0,2,0)*rhou1_B0(0,2,0) -
            (1.0/4.0)*u1_B0(0,-1,0)*rhou1_B0(0,-1,0) + ((1.0/12.0))*u1_B0(0,3,0)*rhou1_B0(0,3,0) +
            ((3.0/2.0))*u1_B0(0,1,0)*rhou1_B0(0,1,0))*invDelta1block0;

       d1_rhou1u2_dy = (-(5.0/6.0)*u2_B0(0,0,0)*rhou1_B0(0,0,0) - (1.0/2.0)*u2_B0(0,2,0)*rhou1_B0(0,2,0) -
            (1.0/4.0)*u2_B0(0,-1,0)*rhou1_B0(0,-1,0) + ((1.0/12.0))*u2_B0(0,3,0)*rhou1_B0(0,3,0) +
            ((3.0/2.0))*u2_B0(0,1,0)*rhou1_B0(0,1,0))*invDelta1block0;

       d1_rhou2_dy = (-(5.0/6.0)*rhou2_B0(0,0,0) - (1.0/2.0)*rhou2_B0(0,2,0) - (1.0/4.0)*rhou2_B0(0,-1,0) +
            ((1.0/12.0))*rhou2_B0(0,3,0) + ((3.0/2.0))*rhou2_B0(0,1,0))*invDelta1block0;

       d1_u0u0_dy = (-(5.0/6.0)*(u0_B0(0,0,0)*u0_B0(0,0,0)) - (1.0/2.0)*(u0_B0(0,2,0)*u0_B0(0,2,0)) -
            (1.0/4.0)*(u0_B0(0,-1,0)*u0_B0(0,-1,0)) + ((1.0/12.0))*(u0_B0(0,3,0)*u0_B0(0,3,0)) +
            ((3.0/2.0))*(u0_B0(0,1,0)*u0_B0(0,1,0)))*invDelta1block0;

       d1_u0u1_dy = (-(5.0/6.0)*u0_B0(0,0,0)*u1_B0(0,0,0) - (1.0/2.0)*u0_B0(0,2,0)*u1_B0(0,2,0) -
            (1.0/4.0)*u0_B0(0,-1,0)*u1_B0(0,-1,0) + ((1.0/12.0))*u0_B0(0,3,0)*u1_B0(0,3,0) +
            ((3.0/2.0))*u0_B0(0,1,0)*u1_B0(0,1,0))*invDelta1block0;

       d1_u0u2_dy = (-(5.0/6.0)*u0_B0(0,0,0)*u2_B0(0,0,0) - (1.0/2.0)*u0_B0(0,2,0)*u2_B0(0,2,0) -
            (1.0/4.0)*u0_B0(0,-1,0)*u2_B0(0,-1,0) + ((1.0/12.0))*u0_B0(0,3,0)*u2_B0(0,3,0) +
            ((3.0/2.0))*u0_B0(0,1,0)*u2_B0(0,1,0))*invDelta1block0;

       d1_u1u1_dy = (-(5.0/6.0)*(u1_B0(0,0,0)*u1_B0(0,0,0)) - (1.0/2.0)*(u1_B0(0,2,0)*u1_B0(0,2,0)) -
            (1.0/4.0)*(u1_B0(0,-1,0)*u1_B0(0,-1,0)) + ((1.0/12.0))*(u1_B0(0,3,0)*u1_B0(0,3,0)) +
            ((3.0/2.0))*(u1_B0(0,1,0)*u1_B0(0,1,0)))*invDelta1block0;

       d1_u1u2_dy = (-(5.0/6.0)*u1_B0(0,0,0)*u2_B0(0,0,0) - (1.0/2.0)*u1_B0(0,2,0)*u2_B0(0,2,0) -
            (1.0/4.0)*u1_B0(0,-1,0)*u2_B0(0,-1,0) + ((1.0/12.0))*u1_B0(0,3,0)*u2_B0(0,3,0) +
            ((3.0/2.0))*u1_B0(0,1,0)*u2_B0(0,1,0))*invDelta1block0;

   }

   else{

       d1_p_dy = (-(2.0/3.0)*p_B0(0,-1,0) - (1.0/12.0)*p_B0(0,2,0) + ((1.0/12.0))*p_B0(0,-2,0) +
            ((2.0/3.0))*p_B0(0,1,0))*invDelta1block0;

       d1_pu0_dy = (-(2.0/3.0)*p_B0(0,-1,0)*u0_B0(0,-1,0) - (1.0/12.0)*p_B0(0,2,0)*u0_B0(0,2,0) +
            ((1.0/12.0))*p_B0(0,-2,0)*u0_B0(0,-2,0) + ((2.0/3.0))*p_B0(0,1,0)*u0_B0(0,1,0))*invDelta1block0;

       d1_pu1_dy = (-(2.0/3.0)*p_B0(0,-1,0)*u1_B0(0,-1,0) - (1.0/12.0)*p_B0(0,2,0)*u1_B0(0,2,0) +
            ((1.0/12.0))*p_B0(0,-2,0)*u1_B0(0,-2,0) + ((2.0/3.0))*p_B0(0,1,0)*u1_B0(0,1,0))*invDelta1block0;

       d1_rhoE_dy = (-(2.0/3.0)*rhoE_B0(0,-1,0) - (1.0/12.0)*rhoE_B0(0,2,0) + ((1.0/12.0))*rhoE_B0(0,-2,0) +
            ((2.0/3.0))*rhoE_B0(0,1,0))*invDelta1block0;

       d1_rhoEu0_dy = (-(2.0/3.0)*u0_B0(0,-1,0)*rhoE_B0(0,-1,0) - (1.0/12.0)*u0_B0(0,2,0)*rhoE_B0(0,2,0) +
            ((1.0/12.0))*u0_B0(0,-2,0)*rhoE_B0(0,-2,0) + ((2.0/3.0))*u0_B0(0,1,0)*rhoE_B0(0,1,0))*invDelta1block0;

       d1_inv_rhoErhou0_dy = (-(2.0/3.0)*u0_B0(0,-1,0)*rhoE_B0(0,-1,0)/rho_B0(0,-1,0) -
            (1.0/12.0)*u0_B0(0,2,0)*rhoE_B0(0,2,0)/rho_B0(0,2,0) +
            ((1.0/12.0))*u0_B0(0,-2,0)*rhoE_B0(0,-2,0)/rho_B0(0,-2,0) +
            ((2.0/3.0))*u0_B0(0,1,0)*rhoE_B0(0,1,0)/rho_B0(0,1,0))*invDelta1block0;

       d1_rhoEu1_dy = (-(2.0/3.0)*u1_B0(0,-1,0)*rhoE_B0(0,-1,0) - (1.0/12.0)*u1_B0(0,2,0)*rhoE_B0(0,2,0) +
            ((1.0/12.0))*u1_B0(0,-2,0)*rhoE_B0(0,-2,0) + ((2.0/3.0))*u1_B0(0,1,0)*rhoE_B0(0,1,0))*invDelta1block0;

       d1_inv_rhoErhou1_dy = (-(2.0/3.0)*u1_B0(0,-1,0)*rhoE_B0(0,-1,0)/rho_B0(0,-1,0) -
            (1.0/12.0)*u1_B0(0,2,0)*rhoE_B0(0,2,0)/rho_B0(0,2,0) +
            ((1.0/12.0))*u1_B0(0,-2,0)*rhoE_B0(0,-2,0)/rho_B0(0,-2,0) +
            ((2.0/3.0))*u1_B0(0,1,0)*rhoE_B0(0,1,0)/rho_B0(0,1,0))*invDelta1block0;

       d1_inv_rhoErho_dy = (-(2.0/3.0)*rhoE_B0(0,-1,0)/rho_B0(0,-1,0) - (1.0/12.0)*rhoE_B0(0,2,0)/rho_B0(0,2,0) +
            ((1.0/12.0))*rhoE_B0(0,-2,0)/rho_B0(0,-2,0) + ((2.0/3.0))*rhoE_B0(0,1,0)/rho_B0(0,1,0))*invDelta1block0;

       d1_rho_dy = (-(2.0/3.0)*rho_B0(0,-1,0) - (1.0/12.0)*rho_B0(0,2,0) + ((1.0/12.0))*rho_B0(0,-2,0) +
            ((2.0/3.0))*rho_B0(0,1,0))*invDelta1block0;

       d1_rhou0_dy = (-(2.0/3.0)*rhou0_B0(0,-1,0) - (1.0/12.0)*rhou0_B0(0,2,0) + ((1.0/12.0))*rhou0_B0(0,-2,0) +
            ((2.0/3.0))*rhou0_B0(0,1,0))*invDelta1block0;

       d1_rhou0u0_dy = (-(2.0/3.0)*u0_B0(0,-1,0)*rhou0_B0(0,-1,0) - (1.0/12.0)*u0_B0(0,2,0)*rhou0_B0(0,2,0) +
            ((1.0/12.0))*u0_B0(0,-2,0)*rhou0_B0(0,-2,0) + ((2.0/3.0))*u0_B0(0,1,0)*rhou0_B0(0,1,0))*invDelta1block0;

       d1_rhou0u1_dy = (-(2.0/3.0)*u1_B0(0,-1,0)*rhou0_B0(0,-1,0) - (1.0/12.0)*u1_B0(0,2,0)*rhou0_B0(0,2,0) +
            ((1.0/12.0))*u1_B0(0,-2,0)*rhou0_B0(0,-2,0) + ((2.0/3.0))*u1_B0(0,1,0)*rhou0_B0(0,1,0))*invDelta1block0;

       d1_rhou0u2_dy = (-(2.0/3.0)*u2_B0(0,-1,0)*rhou0_B0(0,-1,0) - (1.0/12.0)*u2_B0(0,2,0)*rhou0_B0(0,2,0) +
            ((1.0/12.0))*u2_B0(0,-2,0)*rhou0_B0(0,-2,0) + ((2.0/3.0))*u2_B0(0,1,0)*rhou0_B0(0,1,0))*invDelta1block0;

       d1_rhou1_dy = (-(2.0/3.0)*rhou1_B0(0,-1,0) - (1.0/12.0)*rhou1_B0(0,2,0) + ((1.0/12.0))*rhou1_B0(0,-2,0) +
            ((2.0/3.0))*rhou1_B0(0,1,0))*invDelta1block0;

       d1_rhou1u0_dy = (-(2.0/3.0)*u0_B0(0,-1,0)*rhou1_B0(0,-1,0) - (1.0/12.0)*u0_B0(0,2,0)*rhou1_B0(0,2,0) +
            ((1.0/12.0))*u0_B0(0,-2,0)*rhou1_B0(0,-2,0) + ((2.0/3.0))*u0_B0(0,1,0)*rhou1_B0(0,1,0))*invDelta1block0;

       d1_rhou1u1_dy = (-(2.0/3.0)*u1_B0(0,-1,0)*rhou1_B0(0,-1,0) - (1.0/12.0)*u1_B0(0,2,0)*rhou1_B0(0,2,0) +
            ((1.0/12.0))*u1_B0(0,-2,0)*rhou1_B0(0,-2,0) + ((2.0/3.0))*u1_B0(0,1,0)*rhou1_B0(0,1,0))*invDelta1block0;

       d1_rhou1u2_dy = (-(2.0/3.0)*u2_B0(0,-1,0)*rhou1_B0(0,-1,0) - (1.0/12.0)*u2_B0(0,2,0)*rhou1_B0(0,2,0) +
            ((1.0/12.0))*u2_B0(0,-2,0)*rhou1_B0(0,-2,0) + ((2.0/3.0))*u2_B0(0,1,0)*rhou1_B0(0,1,0))*invDelta1block0;

       d1_rhou2_dy = (-(2.0/3.0)*rhou2_B0(0,-1,0) - (1.0/12.0)*rhou2_B0(0,2,0) + ((1.0/12.0))*rhou2_B0(0,-2,0) +
            ((2.0/3.0))*rhou2_B0(0,1,0))*invDelta1block0;

       d1_u0u0_dy = (-(2.0/3.0)*(u0_B0(0,-1,0)*u0_B0(0,-1,0)) - (1.0/12.0)*(u0_B0(0,2,0)*u0_B0(0,2,0)) +
            ((1.0/12.0))*(u0_B0(0,-2,0)*u0_B0(0,-2,0)) + ((2.0/3.0))*(u0_B0(0,1,0)*u0_B0(0,1,0)))*invDelta1block0;

       d1_u0u1_dy = (-(2.0/3.0)*u0_B0(0,-1,0)*u1_B0(0,-1,0) - (1.0/12.0)*u0_B0(0,2,0)*u1_B0(0,2,0) +
            ((1.0/12.0))*u0_B0(0,-2,0)*u1_B0(0,-2,0) + ((2.0/3.0))*u0_B0(0,1,0)*u1_B0(0,1,0))*invDelta1block0;

       d1_u0u2_dy = (-(2.0/3.0)*u0_B0(0,-1,0)*u2_B0(0,-1,0) - (1.0/12.0)*u0_B0(0,2,0)*u2_B0(0,2,0) +
            ((1.0/12.0))*u0_B0(0,-2,0)*u2_B0(0,-2,0) + ((2.0/3.0))*u0_B0(0,1,0)*u2_B0(0,1,0))*invDelta1block0;

       d1_u1u1_dy = (-(2.0/3.0)*(u1_B0(0,-1,0)*u1_B0(0,-1,0)) - (1.0/12.0)*(u1_B0(0,2,0)*u1_B0(0,2,0)) +
            ((1.0/12.0))*(u1_B0(0,-2,0)*u1_B0(0,-2,0)) + ((2.0/3.0))*(u1_B0(0,1,0)*u1_B0(0,1,0)))*invDelta1block0;

       d1_u1u2_dy = (-(2.0/3.0)*u1_B0(0,-1,0)*u2_B0(0,-1,0) - (1.0/12.0)*u1_B0(0,2,0)*u2_B0(0,2,0) +
            ((1.0/12.0))*u1_B0(0,-2,0)*u2_B0(0,-2,0) + ((2.0/3.0))*u1_B0(0,1,0)*u2_B0(0,1,0))*invDelta1block0;

   }

   d1_p_dz = ((1.0/12.0))*(-p_B0(0,0,2) - 8*p_B0(0,0,-1) + 8*p_B0(0,0,1) + p_B0(0,0,-2))*invDelta2block0;

    d1_pu2_dz = -(1.0/12.0)*(p_B0(0,0,2)*u2_B0(0,0,2) - p_B0(0,0,-2)*u2_B0(0,0,-2) - 8*p_B0(0,0,1)*u2_B0(0,0,1) +
      8*p_B0(0,0,-1)*u2_B0(0,0,-1))*invDelta2block0;

    d1_rhoE_dz = ((1.0/12.0))*(-rhoE_B0(0,0,2) - 8*rhoE_B0(0,0,-1) + 8*rhoE_B0(0,0,1) +
      rhoE_B0(0,0,-2))*invDelta2block0;

    d1_rhoEu2_dz = ((1.0/12.0))*(u2_B0(0,0,-2)*rhoE_B0(0,0,-2) - u2_B0(0,0,2)*rhoE_B0(0,0,2) -
      8*u2_B0(0,0,-1)*rhoE_B0(0,0,-1) + 8*u2_B0(0,0,1)*rhoE_B0(0,0,1))*invDelta2block0;

    d1_inv_rhoErhou2_dz = ((1.0/12.0))*(u2_B0(0,0,-2)*rho_B0(0,0,1)*rho_B0(0,0,-1)*rho_B0(0,0,2)*rhoE_B0(0,0,-2) -
      u2_B0(0,0,2)*rho_B0(0,0,1)*rho_B0(0,0,-1)*rho_B0(0,0,-2)*rhoE_B0(0,0,2) -
      8*u2_B0(0,0,-1)*rho_B0(0,0,1)*rho_B0(0,0,-2)*rho_B0(0,0,2)*rhoE_B0(0,0,-1) +
      8*u2_B0(0,0,1)*rho_B0(0,0,-1)*rho_B0(0,0,-2)*rho_B0(0,0,2)*rhoE_B0(0,0,1))*invDelta2block0/(rho_B0(0,0,1)*rho_B0(0,0,-1)*rho_B0(0,0,-2)*rho_B0(0,0,2));

    d1_inv_rhoErho_dz = ((1.0/12.0))*(rho_B0(0,0,1)*rho_B0(0,0,-1)*rho_B0(0,0,2)*rhoE_B0(0,0,-2) -
      rho_B0(0,0,1)*rho_B0(0,0,-1)*rho_B0(0,0,-2)*rhoE_B0(0,0,2) -
      8*rho_B0(0,0,1)*rho_B0(0,0,-2)*rho_B0(0,0,2)*rhoE_B0(0,0,-1) +
      8*rho_B0(0,0,-1)*rho_B0(0,0,-2)*rho_B0(0,0,2)*rhoE_B0(0,0,1))*invDelta2block0/(rho_B0(0,0,1)*rho_B0(0,0,-1)*rho_B0(0,0,-2)*rho_B0(0,0,2));

   d1_rho_dz = -(1.0/12.0)*(-rho_B0(0,0,-2) - 8*rho_B0(0,0,1) + 8*rho_B0(0,0,-1) + rho_B0(0,0,2))*invDelta2block0;

    d1_rhou0_dz = ((1.0/12.0))*(-rhou0_B0(0,0,2) - 8*rhou0_B0(0,0,-1) + 8*rhou0_B0(0,0,1) +
      rhou0_B0(0,0,-2))*invDelta2block0;

    d1_rhou1_dz = ((1.0/12.0))*(-rhou1_B0(0,0,2) - 8*rhou1_B0(0,0,-1) + 8*rhou1_B0(0,0,1) +
      rhou1_B0(0,0,-2))*invDelta2block0;

    d1_rhou2_dz = ((1.0/12.0))*(-rhou2_B0(0,0,2) - 8*rhou2_B0(0,0,-1) + 8*rhou2_B0(0,0,1) +
      rhou2_B0(0,0,-2))*invDelta2block0;

    d1_rhou2u0_dz = -(1.0/12.0)*(u0_B0(0,0,2)*rhou2_B0(0,0,2) - u0_B0(0,0,-2)*rhou2_B0(0,0,-2) -
      8*u0_B0(0,0,1)*rhou2_B0(0,0,1) + 8*u0_B0(0,0,-1)*rhou2_B0(0,0,-1))*invDelta2block0;

    d1_rhou2u1_dz = -(1.0/12.0)*(u1_B0(0,0,2)*rhou2_B0(0,0,2) - u1_B0(0,0,-2)*rhou2_B0(0,0,-2) -
      8*u1_B0(0,0,1)*rhou2_B0(0,0,1) + 8*u1_B0(0,0,-1)*rhou2_B0(0,0,-1))*invDelta2block0;

    d1_rhou2u2_dz = -(1.0/12.0)*(u2_B0(0,0,2)*rhou2_B0(0,0,2) - u2_B0(0,0,-2)*rhou2_B0(0,0,-2) -
      8*u2_B0(0,0,1)*rhou2_B0(0,0,1) + 8*u2_B0(0,0,-1)*rhou2_B0(0,0,-1))*invDelta2block0;

    d1_u0u2_dz = ((1.0/12.0))*(u0_B0(0,0,-2)*u2_B0(0,0,-2) - u0_B0(0,0,2)*u2_B0(0,0,2) - 8*u0_B0(0,0,-1)*u2_B0(0,0,-1) +
      8*u0_B0(0,0,1)*u2_B0(0,0,1))*invDelta2block0;

    d1_u1u2_dz = ((1.0/12.0))*(u1_B0(0,0,-2)*u2_B0(0,0,-2) - u1_B0(0,0,2)*u2_B0(0,0,2) - 8*u1_B0(0,0,-1)*u2_B0(0,0,-1) +
      8*u1_B0(0,0,1)*u2_B0(0,0,1))*invDelta2block0;

    d1_u2u2_dz = -(1.0/12.0)*((u2_B0(0,0,2)*u2_B0(0,0,2)) - (u2_B0(0,0,-2)*u2_B0(0,0,-2)) -
      8*(u2_B0(0,0,1)*u2_B0(0,0,1)) + 8*(u2_B0(0,0,-1)*u2_B0(0,0,-1)))*invDelta2block0;

    Residual0_B0(0,0,0) = -(1.0/2.0)*d1_rhou2_dz - (1.0/2.0)*(D00_B0(0,0,0)*d1_rho_dx +
      D10_B0(0,0,0)*d1_rho_dy)*u0_B0(0,0,0) - (1.0/2.0)*(D01_B0(0,0,0)*d1_rho_dx + D11_B0(0,0,0)*d1_rho_dy)*u1_B0(0,0,0)
      - (1.0/2.0)*(D00_B0(0,0,0)*wk0_B0(0,0,0) + D01_B0(0,0,0)*wk1_B0(0,0,0) + D10_B0(0,0,0)*wk4_B0(0,0,0) +
      D11_B0(0,0,0)*wk5_B0(0,0,0) + wk10_B0(0,0,0))*rho_B0(0,0,0) - (1.0/2.0)*u2_B0(0,0,0)*d1_rho_dz -
      (1.0/2.0)*D00_B0(0,0,0)*d1_rhou0_dx - (1.0/2.0)*D01_B0(0,0,0)*d1_rhou1_dx - (1.0/2.0)*D10_B0(0,0,0)*d1_rhou0_dy -
      (1.0/2.0)*D11_B0(0,0,0)*d1_rhou1_dy;

    Residual1_B0(0,0,0) = -(1.0/4.0)*d1_rhou2u0_dz - D00_B0(0,0,0)*d1_p_dx - D10_B0(0,0,0)*d1_p_dy -
      (1.0/2.0)*(D00_B0(0,0,0)*wk0_B0(0,0,0) + D10_B0(0,0,0)*wk4_B0(0,0,0))*rhou0_B0(0,0,0) -
      (1.0/2.0)*(D00_B0(0,0,0)*d1_rhou0_dx + D10_B0(0,0,0)*d1_rhou0_dy)*u0_B0(0,0,0) -
      (1.0/4.0)*(u0_B0(0,0,0)*u0_B0(0,0,0))*(D00_B0(0,0,0)*d1_rho_dx + D10_B0(0,0,0)*d1_rho_dy) -
      (1.0/4.0)*(D00_B0(0,0,0)*d1_u0u0_dx + D10_B0(0,0,0)*d1_u0u0_dy)*rho_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*wk0_B0(0,0,0) + D11_B0(0,0,0)*wk4_B0(0,0,0))*rhou1_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*wk1_B0(0,0,0) + D11_B0(0,0,0)*wk5_B0(0,0,0))*rhou0_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*d1_rhou0_dx + D11_B0(0,0,0)*d1_rhou0_dy)*u1_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*d1_rhou1_dx + D11_B0(0,0,0)*d1_rhou1_dy)*u0_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*d1_u0u1_dx + D11_B0(0,0,0)*d1_u0u1_dy)*rho_B0(0,0,0) - (1.0/4.0)*u0_B0(0,0,0)*d1_rhou2_dz
      - (1.0/4.0)*u2_B0(0,0,0)*d1_rhou0_dz - (1.0/4.0)*D00_B0(0,0,0)*d1_rhou0u0_dx -
      (1.0/4.0)*D01_B0(0,0,0)*d1_rhou1u0_dx - (1.0/4.0)*D10_B0(0,0,0)*d1_rhou0u0_dy -
      (1.0/4.0)*D11_B0(0,0,0)*d1_rhou1u0_dy - (1.0/4.0)*rho_B0(0,0,0)*d1_u0u2_dz -
      (1.0/4.0)*wk8_B0(0,0,0)*rhou2_B0(0,0,0) - (1.0/4.0)*wk10_B0(0,0,0)*rhou0_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*d1_rho_dx + D11_B0(0,0,0)*d1_rho_dy)*u0_B0(0,0,0)*u1_B0(0,0,0) -
      (1.0/4.0)*u0_B0(0,0,0)*u2_B0(0,0,0)*d1_rho_dz;

    Residual2_B0(0,0,0) = -(1.0/4.0)*d1_rhou2u1_dz - D01_B0(0,0,0)*d1_p_dx - D11_B0(0,0,0)*d1_p_dy -
      (1.0/4.0)*(u1_B0(0,0,0)*u1_B0(0,0,0))*(D01_B0(0,0,0)*d1_rho_dx + D11_B0(0,0,0)*d1_rho_dy) -
      (1.0/4.0)*(D00_B0(0,0,0)*wk1_B0(0,0,0) + D10_B0(0,0,0)*wk5_B0(0,0,0))*rhou0_B0(0,0,0) -
      (1.0/4.0)*(D00_B0(0,0,0)*d1_rhou1_dx + D10_B0(0,0,0)*d1_rhou1_dy)*u0_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*wk1_B0(0,0,0) + D11_B0(0,0,0)*wk5_B0(0,0,0))*rhou1_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*d1_rhou1_dx + D11_B0(0,0,0)*d1_rhou1_dy)*u1_B0(0,0,0) -
      (1.0/4.0)*(D00_B0(0,0,0)*wk0_B0(0,0,0) + D01_B0(0,0,0)*wk1_B0(0,0,0) + D10_B0(0,0,0)*wk4_B0(0,0,0) +
      D11_B0(0,0,0)*wk5_B0(0,0,0) + wk10_B0(0,0,0))*rhou1_B0(0,0,0) - (1.0/4.0)*(D00_B0(0,0,0)*d1_rhou0_dx +
      D01_B0(0,0,0)*d1_rhou1_dx + D10_B0(0,0,0)*d1_rhou0_dy + D11_B0(0,0,0)*d1_rhou1_dy + d1_rhou2_dz)*u1_B0(0,0,0) -
      (1.0/4.0)*(D00_B0(0,0,0)*d1_u0u1_dx + D01_B0(0,0,0)*d1_u1u1_dx + D10_B0(0,0,0)*d1_u0u1_dy +
      D11_B0(0,0,0)*d1_u1u1_dy + d1_u1u2_dz)*rho_B0(0,0,0) - (1.0/4.0)*u2_B0(0,0,0)*d1_rhou1_dz -
      (1.0/4.0)*D00_B0(0,0,0)*d1_rhou0u1_dx - (1.0/4.0)*D01_B0(0,0,0)*d1_rhou1u1_dx -
      (1.0/4.0)*D10_B0(0,0,0)*d1_rhou0u1_dy - (1.0/4.0)*D11_B0(0,0,0)*d1_rhou1u1_dy -
      (1.0/4.0)*wk9_B0(0,0,0)*rhou2_B0(0,0,0) - (1.0/4.0)*(D00_B0(0,0,0)*d1_rho_dx +
      D10_B0(0,0,0)*d1_rho_dy)*u0_B0(0,0,0)*u1_B0(0,0,0) - (1.0/4.0)*u1_B0(0,0,0)*u2_B0(0,0,0)*d1_rho_dz;

    Residual3_B0(0,0,0) = -d1_p_dz - (1.0/4.0)*d1_rhou2u2_dz - (1.0/4.0)*(u2_B0(0,0,0)*u2_B0(0,0,0))*d1_rho_dz -
      (1.0/4.0)*(D00_B0(0,0,0)*wk2_B0(0,0,0) + D10_B0(0,0,0)*wk6_B0(0,0,0))*rhou0_B0(0,0,0) -
      (1.0/4.0)*(D00_B0(0,0,0)*d1_rhou2_dx + D10_B0(0,0,0)*d1_rhou2_dy)*u0_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*wk2_B0(0,0,0) + D11_B0(0,0,0)*wk6_B0(0,0,0))*rhou1_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*d1_rhou2_dx + D11_B0(0,0,0)*d1_rhou2_dy)*u1_B0(0,0,0) -
      (1.0/4.0)*(D00_B0(0,0,0)*wk0_B0(0,0,0) + D01_B0(0,0,0)*wk1_B0(0,0,0) + D10_B0(0,0,0)*wk4_B0(0,0,0) +
      D11_B0(0,0,0)*wk5_B0(0,0,0) + wk10_B0(0,0,0))*rhou2_B0(0,0,0) - (1.0/4.0)*(D00_B0(0,0,0)*d1_rhou0_dx +
      D01_B0(0,0,0)*d1_rhou1_dx + D10_B0(0,0,0)*d1_rhou0_dy + D11_B0(0,0,0)*d1_rhou1_dy + d1_rhou2_dz)*u2_B0(0,0,0) -
      (1.0/4.0)*(D00_B0(0,0,0)*d1_u0u2_dx + D01_B0(0,0,0)*d1_u1u2_dx + D10_B0(0,0,0)*d1_u0u2_dy +
      D11_B0(0,0,0)*d1_u1u2_dy + d1_u2u2_dz)*rho_B0(0,0,0) - (1.0/4.0)*u2_B0(0,0,0)*d1_rhou2_dz -
      (1.0/4.0)*D00_B0(0,0,0)*d1_rhou0u2_dx - (1.0/4.0)*D01_B0(0,0,0)*d1_rhou1u2_dx -
      (1.0/4.0)*D10_B0(0,0,0)*d1_rhou0u2_dy - (1.0/4.0)*D11_B0(0,0,0)*d1_rhou1u2_dy -
      (1.0/4.0)*wk10_B0(0,0,0)*rhou2_B0(0,0,0) - (1.0/4.0)*(D00_B0(0,0,0)*d1_rho_dx +
      D10_B0(0,0,0)*d1_rho_dy)*u0_B0(0,0,0)*u2_B0(0,0,0) - (1.0/4.0)*(D01_B0(0,0,0)*d1_rho_dx +
      D11_B0(0,0,0)*d1_rho_dy)*u1_B0(0,0,0)*u2_B0(0,0,0);

    Residual4_B0(0,0,0) = -(1.0/2.0)*d1_pu2_dz - (1.0/4.0)*d1_rhoEu2_dz - (1.0/2.0)*(D00_B0(0,0,0)*d1_p_dx +
      D10_B0(0,0,0)*d1_p_dy)*u0_B0(0,0,0) - (1.0/2.0)*(D01_B0(0,0,0)*d1_p_dx + D11_B0(0,0,0)*d1_p_dy)*u1_B0(0,0,0) -
      (1.0/2.0)*(D00_B0(0,0,0)*wk0_B0(0,0,0) + D01_B0(0,0,0)*wk1_B0(0,0,0) + D10_B0(0,0,0)*wk4_B0(0,0,0) +
      D11_B0(0,0,0)*wk5_B0(0,0,0) + wk10_B0(0,0,0))*p_B0(0,0,0) - (1.0/2.0)*u2_B0(0,0,0)*d1_p_dz -
      (1.0/2.0)*D00_B0(0,0,0)*d1_pu0_dx - (1.0/2.0)*D01_B0(0,0,0)*d1_pu1_dx - (1.0/2.0)*D10_B0(0,0,0)*d1_pu0_dy -
      (1.0/2.0)*D11_B0(0,0,0)*d1_pu1_dy - (1.0/4.0)*(D00_B0(0,0,0)*d1_inv_rhoErho_dx +
      D10_B0(0,0,0)*d1_inv_rhoErho_dy)*rhou0_B0(0,0,0) - (1.0/4.0)*(D00_B0(0,0,0)*d1_rhoE_dx +
      D10_B0(0,0,0)*d1_rhoE_dy)*u0_B0(0,0,0) - (1.0/4.0)*(D01_B0(0,0,0)*d1_inv_rhoErho_dx +
      D11_B0(0,0,0)*d1_inv_rhoErho_dy)*rhou1_B0(0,0,0) - (1.0/4.0)*(D01_B0(0,0,0)*d1_rhoE_dx +
      D11_B0(0,0,0)*d1_rhoE_dy)*u1_B0(0,0,0) - (1.0/4.0)*(D00_B0(0,0,0)*wk0_B0(0,0,0) + D01_B0(0,0,0)*wk1_B0(0,0,0) +
      D10_B0(0,0,0)*wk4_B0(0,0,0) + D11_B0(0,0,0)*wk5_B0(0,0,0) + wk10_B0(0,0,0))*rhoE_B0(0,0,0) -
      (1.0/4.0)*(D00_B0(0,0,0)*d1_inv_rhoErhou0_dx + D01_B0(0,0,0)*d1_inv_rhoErhou1_dx +
      D10_B0(0,0,0)*d1_inv_rhoErhou0_dy + D11_B0(0,0,0)*d1_inv_rhoErhou1_dy + d1_inv_rhoErhou2_dz)*rho_B0(0,0,0) -
      (1.0/4.0)*u2_B0(0,0,0)*d1_rhoE_dz - (1.0/4.0)*D00_B0(0,0,0)*d1_rhoEu0_dx - (1.0/4.0)*D01_B0(0,0,0)*d1_rhoEu1_dx -
      (1.0/4.0)*D10_B0(0,0,0)*d1_rhoEu0_dy - (1.0/4.0)*D11_B0(0,0,0)*d1_rhoEu1_dy -
      (1.0/4.0)*rhou2_B0(0,0,0)*d1_inv_rhoErho_dz - (1.0/4.0)*(D00_B0(0,0,0)*d1_rhou0_dx + D01_B0(0,0,0)*d1_rhou1_dx +
      D10_B0(0,0,0)*d1_rhou0_dy + D11_B0(0,0,0)*d1_rhou1_dy + d1_rhou2_dz)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
      (1.0/4.0)*(D00_B0(0,0,0)*d1_rho_dx + D10_B0(0,0,0)*d1_rho_dy)*u0_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
      (1.0/4.0)*(D01_B0(0,0,0)*d1_rho_dx + D11_B0(0,0,0)*d1_rho_dy)*u1_B0(0,0,0)*rhoE_B0(0,0,0)/rho_B0(0,0,0) -
      (1.0/4.0)*u2_B0(0,0,0)*rhoE_B0(0,0,0)*d1_rho_dz/rho_B0(0,0,0);


      }
    }
  }
  if (block->instance->OPS_diags > 1) {
    ops_timers_core(&__c2,&__t2);
    block->instance->OPS_kernels[29].time += __t2-__t1;
  }
  #ifndef OPS_LAZY
  ops_set_dirtybit_host(args, 28);
  ops_set_halo_dirtybit3(&args[22],range);
  ops_set_halo_dirtybit3(&args[23],range);
  ops_set_halo_dirtybit3(&args[24],range);
  ops_set_halo_dirtybit3(&args[25],range);
  ops_set_halo_dirtybit3(&args[26],range);
  #endif

  if (block->instance->OPS_diags > 1) {
    //Update kernel record
    ops_timers_core(&__c1,&__t1);
    block->instance->OPS_kernels[29].mpi_time += __t1-__t2;
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg0);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg1);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg2);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg3);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg4);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg5);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg6);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg7);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg8);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg9);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg10);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg11);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg12);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg13);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg14);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg15);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg16);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg17);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg18);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg19);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg20);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg21);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg22);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg23);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg24);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg25);
    block->instance->OPS_kernels[29].transfer += ops_compute_transfer(dim, start, end, &arg26);
  }
}


#ifdef OPS_LAZY
void ops_par_loop_opensbliblock00Kernel034(char const *name, ops_block block, int dim, int* range,
 ops_arg arg0, ops_arg arg1, ops_arg arg2, ops_arg arg3,
 ops_arg arg4, ops_arg arg5, ops_arg arg6, ops_arg arg7,
 ops_arg arg8, ops_arg arg9, ops_arg arg10, ops_arg arg11,
 ops_arg arg12, ops_arg arg13, ops_arg arg14, ops_arg arg15,
 ops_arg arg16, ops_arg arg17, ops_arg arg18, ops_arg arg19,
 ops_arg arg20, ops_arg arg21, ops_arg arg22, ops_arg arg23,
 ops_arg arg24, ops_arg arg25, ops_arg arg26, ops_arg arg27) {
  ops_arg args[28] = { arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27 };

  //create kernel descriptor and pass it to ops_enqueue_kernel
  create_kerneldesc_and_enque(name, args, 28, 29, dim, 0, range, block, ops_par_loop_opensbliblock00Kernel034_execute);
}
#endif
