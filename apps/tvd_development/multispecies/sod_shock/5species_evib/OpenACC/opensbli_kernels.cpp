//
// auto-generated by ops.py
//
#include "./OpenACC/opensbli_common.h"

#include <openacc.h>

void ops_init_backend() {acc_set_device_num(ops_get_proc()%acc_get_num_devices(acc_device_nvidia),acc_device_nvidia); }

void ops_decl_const_char(OPS_instance *instance, int dim, char const *type,
int size, char *dat, char const *name){
  ops_execute(instance);
  if (!strcmp(name,"Delta0block0")) {
    Delta0block0 = *(double*)dat;
  }
  else
  if (!strcmp(name,"HDF5_timing")) {
    HDF5_timing = *(int*)dat;
  }
  else
  if (!strcmp(name,"MN")) {
    MN = *(double*)dat;
  }
  else
  if (!strcmp(name,"MN2")) {
    MN2 = *(double*)dat;
  }
  else
  if (!strcmp(name,"MNO")) {
    MNO = *(double*)dat;
  }
  else
  if (!strcmp(name,"MO")) {
    MO = *(double*)dat;
  }
  else
  if (!strcmp(name,"MO2")) {
    MO2 = *(double*)dat;
  }
  else
  if (!strcmp(name,"Re")) {
    Re = *(double*)dat;
  }
  else
  if (!strcmp(name,"Rhat")) {
    Rhat = *(double*)dat;
  }
  else
  if (!strcmp(name,"Sc")) {
    Sc = *(double*)dat;
  }
  else
  if (!strcmp(name,"block0np0")) {
    block0np0 = *(int*)dat;
  }
  else
  if (!strcmp(name,"cN")) {
    cN = *(double*)dat;
  }
  else
  if (!strcmp(name,"cN2")) {
    cN2 = *(double*)dat;
  }
  else
  if (!strcmp(name,"cNO")) {
    cNO = *(double*)dat;
  }
  else
  if (!strcmp(name,"cO")) {
    cO = *(double*)dat;
  }
  else
  if (!strcmp(name,"cO2")) {
    cO2 = *(double*)dat;
  }
  else
  if (!strcmp(name,"delta_TVD")) {
    delta_TVD = *(double*)dat;
  }
  else
  if (!strcmp(name,"dhN")) {
    dhN = *(double*)dat;
  }
  else
  if (!strcmp(name,"dhNO")) {
    dhNO = *(double*)dat;
  }
  else
  if (!strcmp(name,"dhO")) {
    dhO = *(double*)dat;
  }
  else
  if (!strcmp(name,"dt")) {
    dt = *(double*)dat;
  }
  else
  if (!strcmp(name,"eps_TVD")) {
    eps_TVD = *(double*)dat;
  }
  else
  if (!strcmp(name,"gama")) {
    gama = *(double*)dat;
  }
  else
  if (!strcmp(name,"gamma_m1")) {
    gamma_m1 = *(double*)dat;
  }
  else
  if (!strcmp(name,"inv2Delta0block0")) {
    inv2Delta0block0 = *(double*)dat;
  }
  else
  if (!strcmp(name,"invDelta0block0")) {
    invDelta0block0 = *(double*)dat;
  }
  else
  if (!strcmp(name,"invMN")) {
    invMN = *(double*)dat;
  }
  else
  if (!strcmp(name,"invMN2")) {
    invMN2 = *(double*)dat;
  }
  else
  if (!strcmp(name,"invMNO")) {
    invMNO = *(double*)dat;
  }
  else
  if (!strcmp(name,"invMO")) {
    invMO = *(double*)dat;
  }
  else
  if (!strcmp(name,"invMO2")) {
    invMO2 = *(double*)dat;
  }
  else
  if (!strcmp(name,"invRe")) {
    invRe = *(double*)dat;
  }
  else
  if (!strcmp(name,"invRhat")) {
    invRhat = *(double*)dat;
  }
  else
  if (!strcmp(name,"invSc")) {
    invSc = *(double*)dat;
  }
  else
  if (!strcmp(name,"invdelta_TVD")) {
    invdelta_TVD = *(double*)dat;
  }
  else
  if (!strcmp(name,"kappa_TVD")) {
    kappa_TVD = *(double*)dat;
  }
  else
  if (!strcmp(name,"niter")) {
    niter = *(int*)dat;
  }
  else
  if (!strcmp(name,"simulation_time")) {
    simulation_time = *(double*)dat;
  }
  else
  if (!strcmp(name,"start_iter")) {
    start_iter = *(int*)dat;
  }
  else
  if (!strcmp(name,"thetavN2")) {
    thetavN2 = *(double*)dat;
  }
  else
  if (!strcmp(name,"thetavNO")) {
    thetavNO = *(double*)dat;
  }
  else
  if (!strcmp(name,"thetavO2")) {
    thetavO2 = *(double*)dat;
  }
  else
  if (!strcmp(name,"write_output_file")) {
    write_output_file = *(int*)dat;
  }
  else
  {
    throw OPSException(OPS_RUNTIME_ERROR, "error: unknown const name");
  }
}

//user kernel files
#include "opensbliblock00Kernel044_openacc_kernel.cpp"
#include "opensbliblock00Kernel042_openacc_kernel.cpp"
#include "opensbliblock00Kernel043_openacc_kernel.cpp"
#include "opensbliblock00Kernel007_openacc_kernel.cpp"
#include "opensbliblock00Kernel018_openacc_kernel.cpp"
#include "opensbliblock00Kernel029_openacc_kernel.cpp"
#include "opensbliblock00Kernel030_openacc_kernel.cpp"
#include "opensbliblock00Kernel031_openacc_kernel.cpp"
#include "opensbliblock00Kernel032_openacc_kernel.cpp"
#include "opensbliblock00Kernel033_openacc_kernel.cpp"
#include "opensbliblock00Kernel017_openacc_kernel.cpp"
#include "opensbliblock00Kernel023_openacc_kernel.cpp"
#include "opensbliblock00Kernel024_openacc_kernel.cpp"
#include "opensbliblock00Kernel025_openacc_kernel.cpp"
#include "opensbliblock00Kernel008_openacc_kernel.cpp"
#include "opensbliblock00Kernel026_openacc_kernel.cpp"
#include "opensbliblock00Kernel027_openacc_kernel.cpp"
#include "opensbliblock00Kernel028_openacc_kernel.cpp"
#include "opensbliblock00Kernel036_openacc_kernel.cpp"
#include "opensbliblock00Kernel037_openacc_kernel.cpp"
#include "opensbliblock00Kernel038_openacc_kernel.cpp"
#include "opensbliblock00Kernel039_openacc_kernel.cpp"
#include "opensbliblock00Kernel040_openacc_kernel.cpp"
#include "opensbliblock00Kernel041_openacc_kernel.cpp"
#include "opensbliblock00Kernel006_openacc_kernel.cpp"
#include "opensbliblock00Kernel034_openacc_kernel.cpp"
#include "opensbliblock00Kernel035_openacc_kernel.cpp"
#include "opensbliblock00Kernel045_openacc_kernel.cpp"
#include "opensbliblock00Kernel002_openacc_kernel.cpp"
#include "opensbliblock00Kernel003_openacc_kernel.cpp"
#include "opensbliblock00Kernel004_openacc_kernel.cpp"
#include "opensbliblock00Kernel005_openacc_kernel.cpp"
