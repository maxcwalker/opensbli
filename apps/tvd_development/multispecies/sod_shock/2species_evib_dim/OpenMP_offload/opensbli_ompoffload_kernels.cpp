//
// auto-generated by ops.py
//
//header
#define OPS_1D
#define OPS_API 2
#include "ops_lib_core.h"
#ifdef OPS_MPI
#include "ops_mpi_core.h"
#endif

// global constants
extern double Delta0block0;
extern int HDF5_timing;
extern double MN;
extern double MN2;
extern double Re;
extern double Rhat;
extern double Sc;
extern int block0np0;
extern double cN;
extern double cN2;
extern double delta_TVD;
extern double dhN;
extern double dt;
extern double eps_TVD;
extern double gama;
extern double gamma_m1;
extern double inv2Delta0block0;
extern double inv2gamma_m1;
extern double invDelta0block0;
extern double invMN;
extern double invMN2;
extern double invRe;
extern double invRhat;
extern double invSc;
extern double invdelta_TVD;
extern double invgama;
extern double invgamma_m1;
extern double kappa;
extern double kappa_TVD;
extern int niter;
extern double simulation_time;
extern int start_iter;
extern double thetavN2;

void ops_init_backend() {}

void ops_decl_const_char(OPS_instance *instance, int dim, char const *type,
int size, char *dat, char const *name){
  ops_execute(instance);
  if (!strcmp(name,"Delta0block0")) {
    #pragma omp target enter data map(to:Delta0block0)
  }
  else
  if (!strcmp(name,"HDF5_timing")) {
    #pragma omp target enter data map(to:HDF5_timing)
  }
  else
  if (!strcmp(name,"MN")) {
    #pragma omp target enter data map(to:MN)
  }
  else
  if (!strcmp(name,"MN2")) {
    #pragma omp target enter data map(to:MN2)
  }
  else
  if (!strcmp(name,"Re")) {
    #pragma omp target enter data map(to:Re)
  }
  else
  if (!strcmp(name,"Rhat")) {
    #pragma omp target enter data map(to:Rhat)
  }
  else
  if (!strcmp(name,"Sc")) {
    #pragma omp target enter data map(to:Sc)
  }
  else
  if (!strcmp(name,"block0np0")) {
    #pragma omp target enter data map(to:block0np0)
  }
  else
  if (!strcmp(name,"cN")) {
    #pragma omp target enter data map(to:cN)
  }
  else
  if (!strcmp(name,"cN2")) {
    #pragma omp target enter data map(to:cN2)
  }
  else
  if (!strcmp(name,"delta_TVD")) {
    #pragma omp target enter data map(to:delta_TVD)
  }
  else
  if (!strcmp(name,"dhN")) {
    #pragma omp target enter data map(to:dhN)
  }
  else
  if (!strcmp(name,"dt")) {
    #pragma omp target enter data map(to:dt)
  }
  else
  if (!strcmp(name,"eps_TVD")) {
    #pragma omp target enter data map(to:eps_TVD)
  }
  else
  if (!strcmp(name,"gama")) {
    #pragma omp target enter data map(to:gama)
  }
  else
  if (!strcmp(name,"gamma_m1")) {
    #pragma omp target enter data map(to:gamma_m1)
  }
  else
  if (!strcmp(name,"inv2Delta0block0")) {
    #pragma omp target enter data map(to:inv2Delta0block0)
  }
  else
  if (!strcmp(name,"inv2gamma_m1")) {
    #pragma omp target enter data map(to:inv2gamma_m1)
  }
  else
  if (!strcmp(name,"invDelta0block0")) {
    #pragma omp target enter data map(to:invDelta0block0)
  }
  else
  if (!strcmp(name,"invMN")) {
    #pragma omp target enter data map(to:invMN)
  }
  else
  if (!strcmp(name,"invMN2")) {
    #pragma omp target enter data map(to:invMN2)
  }
  else
  if (!strcmp(name,"invRe")) {
    #pragma omp target enter data map(to:invRe)
  }
  else
  if (!strcmp(name,"invRhat")) {
    #pragma omp target enter data map(to:invRhat)
  }
  else
  if (!strcmp(name,"invSc")) {
    #pragma omp target enter data map(to:invSc)
  }
  else
  if (!strcmp(name,"invdelta_TVD")) {
    #pragma omp target enter data map(to:invdelta_TVD)
  }
  else
  if (!strcmp(name,"invgama")) {
    #pragma omp target enter data map(to:invgama)
  }
  else
  if (!strcmp(name,"invgamma_m1")) {
    #pragma omp target enter data map(to:invgamma_m1)
  }
  else
  if (!strcmp(name,"kappa")) {
    #pragma omp target enter data map(to:kappa)
  }
  else
  if (!strcmp(name,"kappa_TVD")) {
    #pragma omp target enter data map(to:kappa_TVD)
  }
  else
  if (!strcmp(name,"niter")) {
    #pragma omp target enter data map(to:niter)
  }
  else
  if (!strcmp(name,"simulation_time")) {
    #pragma omp target enter data map(to:simulation_time)
  }
  else
  if (!strcmp(name,"start_iter")) {
    #pragma omp target enter data map(to:start_iter)
  }
  else
  if (!strcmp(name,"thetavN2")) {
    #pragma omp target enter data map(to:thetavN2)
  }
  else
  {
    throw OPSException(OPS_RUNTIME_ERROR, "error: unknown const name");
  }
}

//user kernel files
#include "opensbliblock00Kernel030_ompoffload_kernel.cpp"
#include "opensbliblock00Kernel028_ompoffload_kernel.cpp"
#include "opensbliblock00Kernel029_ompoffload_kernel.cpp"
#include "opensbliblock00Kernel009_ompoffload_kernel.cpp"
#include "opensbliblock00Kernel017_ompoffload_kernel.cpp"
#include "opensbliblock00Kernel008_ompoffload_kernel.cpp"
#include "opensbliblock00Kernel026_ompoffload_kernel.cpp"
#include "opensbliblock00Kernel027_ompoffload_kernel.cpp"
#include "opensbliblock00Kernel006_ompoffload_kernel.cpp"
#include "opensbliblock00Kernel024_ompoffload_kernel.cpp"
#include "opensbliblock00Kernel025_ompoffload_kernel.cpp"
#include "opensbliblock00Kernel031_ompoffload_kernel.cpp"
#include "opensbliblock00Kernel002_ompoffload_kernel.cpp"
#include "opensbliblock00Kernel003_ompoffload_kernel.cpp"
#include "opensbliblock00Kernel004_ompoffload_kernel.cpp"
#include "opensbliblock00Kernel005_ompoffload_kernel.cpp"
