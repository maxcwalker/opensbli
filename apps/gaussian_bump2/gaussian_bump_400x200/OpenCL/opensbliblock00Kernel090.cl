//
// auto-generated by ops.py
//

#ifdef OCL_FMA
#pragma OPENCL FP_CONTRACT ON
#else
#pragma OPENCL FP_CONTRACT OFF
#endif
#pragma OPENCL EXTENSION cl_khr_fp64:enable

#define OPS_2D
#define OPS_API 2
#define OPS_NO_GLOBALS
#include "ops_macros.h"
#include "ops_opencl_reduction.h"

#ifndef MIN
#define MIN(a,b) ((a<b) ? (a) : (b))
#endif
#ifndef MAX
#define MAX(a,b) ((a>b) ? (a) : (b))
#endif
#ifndef SIGN
#define SIGN(a,b) ((b<0.0) ? (a*(-1)) : (a))
#endif
#define OPS_READ 0
#define OPS_WRITE 1
#define OPS_RW 2
#define OPS_INC 3
#define OPS_MIN 4
#define OPS_MAX 5

//user function

 void opensbliblock00Kernel090(const ptr_double wk7_B0,
  const ptr_double wk4_B0,
  const ptr_double wk6_B0,
  const ptr_double wk5_B0,
  const ptr_double wk1_B0,
  const ptr_double wk3_B0,
  const ptr_double wk0_B0,
  const ptr_double wk2_B0,
  ptr_double SD001_B0,
  ptr_double SD011_B0,
  ptr_double SD110_B0,
  ptr_double SD111_B0,
  ptr_double SD000_B0,
  ptr_double SD010_B0,
  ptr_double SD100_B0,
  ptr_double SD101_B0)
{
   OPS_ACCS(SD000_B0, 0,0) = OPS_ACCS(wk7_B0, 0,0);

   OPS_ACCS(SD001_B0, 0,0) = OPS_ACCS(wk5_B0, 0,0);

   OPS_ACCS(SD010_B0, 0,0) = OPS_ACCS(wk4_B0, 0,0);

   OPS_ACCS(SD011_B0, 0,0) = OPS_ACCS(wk6_B0, 0,0);

   OPS_ACCS(SD100_B0, 0,0) = OPS_ACCS(wk1_B0, 0,0);

   OPS_ACCS(SD101_B0, 0,0) = OPS_ACCS(wk0_B0, 0,0);

   OPS_ACCS(SD110_B0, 0,0) = OPS_ACCS(wk2_B0, 0,0);

   OPS_ACCS(SD111_B0, 0,0) = OPS_ACCS(wk3_B0, 0,0);

}


__kernel void ops_opensbliblock00Kernel090(
__global const double* restrict arg0,
__global const double* restrict arg1,
__global const double* restrict arg2,
__global const double* restrict arg3,
__global const double* restrict arg4,
__global const double* restrict arg5,
__global const double* restrict arg6,
__global const double* restrict arg7,
__global double* restrict arg8,
__global double* restrict arg9,
__global double* restrict arg10,
__global double* restrict arg11,
__global double* restrict arg12,
__global double* restrict arg13,
__global double* restrict arg14,
__global double* restrict arg15,
const int base0,
const int base1,
const int base2,
const int base3,
const int base4,
const int base5,
const int base6,
const int base7,
const int base8,
const int base9,
const int base10,
const int base11,
const int base12,
const int base13,
const int base14,
const int base15,
const int size0,
const int size1 ){


  int idx_y = get_global_id(1);
  int idx_x = get_global_id(0);

  if (idx_x < size0 && idx_y < size1) {
    const ptr_double ptr0 = { &arg0[base0 + idx_x * 1*1 + idx_y * 1*1 * xdim0_opensbliblock00Kernel090], xdim0_opensbliblock00Kernel090};
    const ptr_double ptr1 = { &arg1[base1 + idx_x * 1*1 + idx_y * 1*1 * xdim1_opensbliblock00Kernel090], xdim1_opensbliblock00Kernel090};
    const ptr_double ptr2 = { &arg2[base2 + idx_x * 1*1 + idx_y * 1*1 * xdim2_opensbliblock00Kernel090], xdim2_opensbliblock00Kernel090};
    const ptr_double ptr3 = { &arg3[base3 + idx_x * 1*1 + idx_y * 1*1 * xdim3_opensbliblock00Kernel090], xdim3_opensbliblock00Kernel090};
    const ptr_double ptr4 = { &arg4[base4 + idx_x * 1*1 + idx_y * 1*1 * xdim4_opensbliblock00Kernel090], xdim4_opensbliblock00Kernel090};
    const ptr_double ptr5 = { &arg5[base5 + idx_x * 1*1 + idx_y * 1*1 * xdim5_opensbliblock00Kernel090], xdim5_opensbliblock00Kernel090};
    const ptr_double ptr6 = { &arg6[base6 + idx_x * 1*1 + idx_y * 1*1 * xdim6_opensbliblock00Kernel090], xdim6_opensbliblock00Kernel090};
    const ptr_double ptr7 = { &arg7[base7 + idx_x * 1*1 + idx_y * 1*1 * xdim7_opensbliblock00Kernel090], xdim7_opensbliblock00Kernel090};
    ptr_double ptr8 = { &arg8[base8 + idx_x * 1*1 + idx_y * 1*1 * xdim8_opensbliblock00Kernel090], xdim8_opensbliblock00Kernel090};
    ptr_double ptr9 = { &arg9[base9 + idx_x * 1*1 + idx_y * 1*1 * xdim9_opensbliblock00Kernel090], xdim9_opensbliblock00Kernel090};
    ptr_double ptr10 = { &arg10[base10 + idx_x * 1*1 + idx_y * 1*1 * xdim10_opensbliblock00Kernel090], xdim10_opensbliblock00Kernel090};
    ptr_double ptr11 = { &arg11[base11 + idx_x * 1*1 + idx_y * 1*1 * xdim11_opensbliblock00Kernel090], xdim11_opensbliblock00Kernel090};
    ptr_double ptr12 = { &arg12[base12 + idx_x * 1*1 + idx_y * 1*1 * xdim12_opensbliblock00Kernel090], xdim12_opensbliblock00Kernel090};
    ptr_double ptr13 = { &arg13[base13 + idx_x * 1*1 + idx_y * 1*1 * xdim13_opensbliblock00Kernel090], xdim13_opensbliblock00Kernel090};
    ptr_double ptr14 = { &arg14[base14 + idx_x * 1*1 + idx_y * 1*1 * xdim14_opensbliblock00Kernel090], xdim14_opensbliblock00Kernel090};
    ptr_double ptr15 = { &arg15[base15 + idx_x * 1*1 + idx_y * 1*1 * xdim15_opensbliblock00Kernel090], xdim15_opensbliblock00Kernel090};
    opensbliblock00Kernel090(ptr0,
                                  ptr1,
                                  ptr2,
                                  ptr3,
                                  ptr4,
                                  ptr5,
                                  ptr6,
                                  ptr7,
                                  ptr8,
                                  ptr9,
                                  ptr10,
                                  ptr11,
                                  ptr12,
                                  ptr13,
                                  ptr14,
                                  ptr15);
  }

}
